window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":9,"numPassedTests":57,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":9,"numTotalTests":57,"startTime":1679538732361,"success":false,"testResults":[{"leaks":false,"numFailingTests":0,"numPassingTests":20,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1679538733688,"runtime":629,"slow":false,"start":1679538733059},"skipped":false,"testFilePath":"/home/runner/work/utils/utils/test/base.spec.ts","testResults":[{"rowKey":0,"ancestorTitles":["base"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"base getRegexp","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getRegexp"},{"rowKey":1,"ancestorTitles":["base"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"base setTitle","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"setTitle"},{"rowKey":2,"ancestorTitles":["base"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"base remInit","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"remInit"},{"rowKey":3,"ancestorTitles":["base"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"base setCookie","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"setCookie"},{"rowKey":4,"ancestorTitles":["base"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"base getCookie","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getCookie"},{"rowKey":5,"ancestorTitles":["base"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"base delCookie","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"delCookie"},{"rowKey":6,"ancestorTitles":["base"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"base getInfoMock","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getInfoMock"},{"rowKey":7,"ancestorTitles":["base"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"base getRandomColor","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getRandomColor"},{"rowKey":8,"ancestorTitles":["base"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"base setStorage","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"setStorage"},{"rowKey":9,"ancestorTitles":["base"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"base getStorage","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getStorage"},{"rowKey":10,"ancestorTitles":["base"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"base sleep","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"sleep"},{"rowKey":11,"ancestorTitles":["base"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"base safeData","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"safeData"},{"rowKey":12,"ancestorTitles":["base"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"base setUrlParams","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"setUrlParams"},{"rowKey":13,"ancestorTitles":["base"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"base getUrlParam","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getUrlParam"},{"rowKey":14,"ancestorTitles":["base"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"base getUrlParamObj","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getUrlParamObj"},{"rowKey":15,"ancestorTitles":["base"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"base replaceUrlParam","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"replaceUrlParam"},{"rowKey":16,"ancestorTitles":["base"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"base getUuid","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getUuid"},{"rowKey":17,"ancestorTitles":["base"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"base randomInt","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"randomInt"},{"rowKey":18,"ancestorTitles":["base"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"base setEnv","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"setEnv"},{"rowKey":19,"ancestorTitles":["base"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"base deepCopy","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"deepCopy"}],"failureMessage":null,"v8Coverage":[{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  deepCopy: () => deepCopy,\n  delCookie: () => delCookie,\n  getCookie: () => getCookie,\n  getEnv: () => getEnv,\n  getInfo: () => getInfo,\n  getNetworkStatus: () => getNetworkStatus,\n  getObj: () => getObj,\n  getRandomColor: () => getRandomColor,\n  getRegexp: () => getRegexp,\n  getStorage: () => getStorage,\n  getUrlParam: () => getUrlParam,\n  getUrlParamObj: () => getUrlParamObj,\n  getUuid: () => getUuid,\n  randomInt: () => randomInt,\n  remInit: () => remInit,\n  replaceUrlParam: () => replaceUrlParam,\n  safe: () => safe,\n  safeData: () => safeData,\n  setCookie: () => setCookie,\n  setEnv: () => setEnv,\n  setLog: () => setLog,\n  setObj: () => setObj,\n  setStorage: () => setStorage,\n  setTitle: () => setTitle,\n  setUrlParams: () => setUrlParams,\n  sleep: () => sleep\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar import_is = require(\"./is\");\nlet isOnline = true;\nlet ENV = {};\nlet DATA_OBJECT = {};\nif (globalThis && globalThis.addEventListener) {\n  globalThis.addEventListener(\"offline\", function() {\n    console.debug(\"offLine\");\n    isOnline = false;\n  });\n  globalThis.addEventListener(\"online\", function() {\n    console.debug(\"onLine\");\n    isOnline = true;\n  });\n}\nconst getNetworkStatus = () => {\n  return isOnline;\n};\nconst getRegexp = () => {\n  return {\n    html: /<[^>]+>/gim,\n    password: /^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[\\W_]).{8,16}$/,\n    idCard: /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/,\n    idCardNormal: /^[0-9]\\d+([0-9]|X|x)*$/,\n    phone: /^1\\d{10}$/,\n    email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n    http: /http:\\/\\/|https:\\/\\//,\n    score: /^[1-9]\\d*|0$/,\n    int: /^[1-9]\\d*$/,\n    number: /^\\d*$/,\n    float1: /^(([1-9]\\d*)|0|(0.\\d{0,1})|([1-9]\\d*.\\d{0,1}))$/,\n    float2: /^(([1-9]\\d*)|0|(0.\\d{0,2})|([1-9]\\d*.\\d{0,2}))$/,\n    float3: /^(([1-9]\\d*)|0|(0.\\d{0,3})|([1-9]\\d*.\\d{0,3}))$/,\n    letterNumber: /^[a-zA-Z0-9]*$/,\n    letter: /^[a-zA-Z]*$/,\n    account: /^[a-zA-Z0-9_\\-\\u4e00-\\u9fa5]{1,50}$/,\n    realName: /^([\\u4e00-\\u9fa5]{1,50}|[\\u4e00-\\u9fa5]{1,25}[\\s][\\u4e00-\\u9fa5]{1,24}|[a-zA-Z_\\-.]{1,50}|[a-zA-Z_\\-.]{1,25}[\\s][a-zA-Z_\\-.]{1,24})$/,\n    cn: /^[\\u4e00-\\u9fa5]*$/,\n    ascii: /^[\\x20-\\x7E]+$/\n  };\n};\nconst setTitle = (argTitle) => {\n  if (typeof globalThis.document === \"object\") {\n    globalThis.document.title = String(argTitle);\n  }\n  if (getInfo().isAppleMobile) {\n    const i = document.createElement(\"iframe\");\n    i.onload = () => {\n      setTimeout(() => {\n        console.debug(\"apple mobile setting title\");\n        i.remove();\n      }, 10);\n    };\n    globalThis.document.body.appendChild(i);\n  }\n};\nconst remInit = (argBaseSize = 16, argWidth = 375) => {\n  const setRem = () => {\n    const scale = safeData(globalThis, \"document.documentElement.clientWidth\", argWidth) / argWidth;\n    safeData(\n      globalThis,\n      \"document.documentElement.style.fontSize\",\n      argBaseSize * scale + \"px\",\n      true\n    );\n  };\n  setRem();\n  globalThis.onresize = () => {\n    setRem();\n  };\n};\nconst getCookie = (argName) => {\n  const cookies = globalThis.document.cookie.split(\"; \");\n  const cookie = cookies.find((cookie2) => {\n    const [name] = cookie2.split(\"=\");\n    return argName === name;\n  });\n  return cookie ? decodeURIComponent(cookie.split(\"=\")[1] || \"\") : \"\";\n};\nconst setCookie = (argName, argValue = \"\", argTime = 24) => {\n  let now = new Date();\n  let offset = 8;\n  let utc = now.getTime() + now.getTimezoneOffset() * 6e4;\n  let nd = utc + 36e5 * offset;\n  let exp = new Date(nd);\n  let domain = globalThis.document.domain;\n  exp.setTime(exp.getTime() + argTime * 60 * 60 * 1e3);\n  globalThis.document.cookie = argName + \"=\" + encodeURIComponent(argValue) + \";path=/;expires=\" + exp.toUTCString() + \";domain=\" + domain + \";\";\n};\nconst delCookie = (argName = \"\") => {\n  setCookie(argName, \"\", -1);\n};\nconst getInfo = () => {\n  let ua = safeData(globalThis, \"navigator.userAgent\", \"\").toLowerCase();\n  let platform = safeData(\n    globalThis,\n    \"navigator.userAgentData.platform\",\n    \"\"\n  ).toLowerCase();\n  let info = {\n    ua,\n    platform,\n    isMobile: !!ua.match(/mobile/),\n    isWin: !!platform.match(\"win\"),\n    isIphone: !!ua.match(/iphone/),\n    isIpad: !!ua.match(/ipad/),\n    isMac: !!platform.match(\"mac\"),\n    isIos: !!platform.match(\"ios\"),\n    isAndroid: !!platform.match(\"android\"),\n    isSafari: ua.indexOf(\"safari\") > -1 && ua.indexOf(\"chrome\") < 1,\n    isIE: \"ActiveXObject\" in globalThis,\n    ieVersion: 0,\n    isAppleMobile: false,\n    isWeixin: !!ua.match(/MicroMessenger/i),\n    isAlipay: !!ua.match(/Alipay/i)\n  };\n  if (info.ua.match(\"msie\")) {\n    let IE = info.ua.match(/msie\\s([0-9]*)/);\n    if (IE && IE.length >= 2) {\n      info.ieVersion = +IE[1];\n    }\n  }\n  info.isAppleMobile = !!(info.isMobile && ua.toLowerCase().indexOf(\"applewebkit\") && ua.indexOf(\"chrome\") < 1);\n  return info;\n};\nconst getRandomColor = function() {\n  return \"#\" + (\"00000\" + (Math.random() * 16777216 << 0).toString(16)).substring(-6);\n};\nconst getStorage = (argKey, argNoJson) => {\n  let res = globalThis.localStorage.getItem(argKey);\n  if (!argNoJson && (0, import_is.isJson)(res) && res) {\n    res = JSON.parse(res);\n  }\n  return res || \"\";\n};\nconst setStorage = (argKey, argData) => {\n  if (typeof argData === \"object\") {\n    argData = JSON.stringify(argData);\n  }\n  globalThis.localStorage.setItem(argKey, String(argData));\n  return String(argData);\n};\nconst sleep = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\nconst safe = function safe2(argData, argCheck, argValue, argSetValueForce) {\n  if (!argData) {\n    return argValue;\n  }\n  if (typeof argCheck !== \"string\" && typeof argCheck !== \"number\") {\n    console.warn(\"argCheck\\u8BF7\\u4F20\\u5165string\\u5F53\\u524D\\u4E3A:\" + argCheck);\n    return \"\";\n  }\n  const temKey = argCheck.toString().split(\".\");\n  const temLen = temKey.length;\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== \"object\") {\n        if (argSetValueForce) {\n          console.warn(\"safeData setValue err\\uFF1A\", argData, \"index:\", i);\n        }\n        return argValue;\n      }\n      argData = argData[temKey[i]] || {};\n    }\n  }\n  if (argSetValueForce) {\n    ;\n    argData[temKey[temLen - 1]] = argValue;\n  }\n  if (typeof argValue === \"undefined\") {\n    return argData[temKey[temLen - 1]];\n  } else {\n    return argData[temKey[temLen - 1]] || argValue;\n  }\n};\nconst safeData = (argData, argCheck, argValue, argSetValueForce) => {\n  if (typeof argCheck !== \"string\" && typeof argCheck !== \"number\") {\n    console.warn(\"argCheck\\u8BF7\\u4F20\\u5165string\\u5F53\\u524D\\u4E3A:\" + argCheck);\n    return \"\";\n  }\n  const temKey = argCheck.toString().split(\".\");\n  const temLen = temKey.length;\n  if (!argData) {\n    return argValue;\n  }\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== \"object\") {\n        if (argSetValueForce) {\n          console.warn(\"safeData setValue err\\uFF1A\", argData, \"index:\", i);\n        }\n        return argValue;\n      }\n      argData = argData[temKey[i]] || {};\n    }\n  }\n  if (argSetValueForce) {\n    argData[temKey[temLen - 1]] = argValue;\n  }\n  if (typeof argValue === \"undefined\") {\n    return argData[temKey[temLen - 1]];\n  } else {\n    return argData[temKey[temLen - 1]] || argValue;\n  }\n};\nconst setUrlParams = (argParams, noMark) => {\n  let re = \"\";\n  if (!noMark) {\n    re = \"?\";\n  }\n  let paramsList = Object.keys(argParams);\n  let temLength = paramsList.length;\n  if (!temLength) {\n    return \"\";\n  }\n  paramsList.map((v, k) => {\n    re += v + \"=\" + argParams[v];\n    if (k < temLength - 1) {\n      re += \"&\";\n    }\n  });\n  return re;\n};\nconst getUrlParam = (argName, argUrl = globalThis.location.search || \"\") => {\n  let result = argUrl.match(new RegExp(\"[?&]\" + argName + \"=([^&]+)\", \"i\"));\n  if (!result) {\n    return \"\";\n  }\n  return decodeURIComponent(result[1]);\n};\nconst getUrlParamObj = (argData = globalThis.location.search || globalThis.location.hash) => {\n  const res = {};\n  try {\n    argData.slice(argData.indexOf(\"?\") + 1).split(\"&\").forEach((v) => {\n      const [key, val] = v.split(\"=\");\n      if (key !== v) {\n        res[key] = decodeURIComponent(val);\n      }\n    });\n    return res;\n  } catch (e) {\n    console.error(\"\\u8F6C\\u6362\\u5931\\u8D25\", e);\n    return res;\n  }\n};\nconst replaceUrlParam = (name, value, url = globalThis.location.href || \"\") => {\n  const reg = new RegExp(\"([?]|&)(\" + name + \"=)([^&#]*)([&]?|$)\", \"img\");\n  const r = url.match(reg);\n  const search = url.split(\"?\");\n  let strValue = url;\n  if (value === void 0 || value === null) {\n    if (r != null) {\n      strValue = url.replace(reg, (_match, p1, _p2, _p3, p4) => {\n        if (!p4 || !p4.length) {\n          return \"\";\n        } else if (p1 === p4) {\n          return p1;\n        }\n        return p1 + p4;\n      });\n      strValue = strValue.replace(\"?&\", \"?\");\n    }\n  } else if (r != null) {\n    strValue = url.replace(reg, `$1$2${value}$4`);\n  } else if (search.length > 1) {\n    const sub = search[1].split(\"#\");\n    if (sub.length > 1) {\n      if (sub[1].length) {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}#${sub[1]}`;\n      } else {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}${sub[1]}`;\n      }\n    } else {\n      strValue = `${search[0]}?${search[1]}&${name}=${value}`;\n    }\n  } else {\n    const sub = url.split(\"#\");\n    if (sub.length > 1) {\n      strValue = `${sub[0]}?${name}=${value}#${sub[1]}`;\n    } else {\n      strValue = `${url}?${name}=${value}`;\n    }\n  }\n  return strValue;\n};\nconst getUuid = () => {\n  const S4 = () => ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);\n  return S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + Date.now();\n};\nconst randomInt = (min = 0, max = 100) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst setEnv = (env) => {\n  ENV = env;\n};\nconst getEnv = (key) => {\n  return safeData(ENV, key, \"\");\n};\nconst setObj = (key, data) => {\n  if (!key) {\n    DATA_OBJECT = data;\n  } else {\n    DATA_OBJECT[key] = data;\n  }\n  return DATA_OBJECT;\n};\nconst getObj = (key, argData, isDeepCopy) => {\n  let res = safeData(DATA_OBJECT, key, {});\n  if (argData) {\n    res = Object.assign(res, argData);\n  }\n  if (!isDeepCopy) {\n    return res;\n  } else {\n    return JSON.parse(JSON.stringify(res));\n  }\n};\nconst setLog = (logLevel, logConfig) => {\n  logLevel = logLevel || getEnv(\"VUE_APP_LOG_LEVEL\") || 4;\n  const logList = [\"log\", \"info\", \"warn\", \"error\"];\n  const log = {};\n  logList.forEach((v) => {\n    log[v] = console[v];\n  });\n  for (let key in logConfig) {\n    if (console[key]) {\n      ;\n      console[key] = (...arg) => {\n        var _a, _b;\n        ;\n        log[key](...arg, (_a = Error().stack) == null ? void 0 : _a.split(\"\\n\")[2]);\n        logConfig[key] && logConfig[key](...arg, (_b = Error().stack) == null ? void 0 : _b.split(\"\\n\")[2]);\n      };\n    }\n  }\n  switch (+logLevel) {\n    case 1:\n      console.warn = () => {\n      };\n    case 2:\n      console.info = () => {\n      };\n    case 3:\n      console.log = () => {\n      };\n    case 4:\n      console.debug = () => {\n      };\n    default:\n      break;\n  }\n};\nconst deepCopy = (obj) => {\n  if (typeof obj !== \"object\" || obj === null) {\n    return obj;\n  }\n  let copy = Array.isArray(obj) ? [] : {};\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ;\n      copy[key] = deepCopy(obj[key]);\n    }\n  }\n  return copy;\n};\n","originalCode":"/**\n * @module index\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 公共函数，使用'lj-utils'引入\n */\n\nimport { isJson } from './is'\nimport { Info, AnyObject, Bool } from './types'\n\nlet isOnline: boolean = true\nlet ENV: AnyObject = {}\nlet DATA_OBJECT: AnyObject = {}\n// 断网监听\nif (globalThis && globalThis.addEventListener) {\n  // #ifdef H5\n  globalThis.addEventListener('offline', function () {\n    console.debug('offLine')\n    isOnline = false\n  })\n  globalThis.addEventListener('online', function () {\n    console.debug('onLine')\n    isOnline = true\n  })\n  // #endif\n}\n\n/**\n * @function\n * @description 获取当前网络状态（H5）\n * @return boolean\n */\nexport const getNetworkStatus = () => {\n  return isOnline\n}\n\n/**\n * @function\n * @description 正则收集\n * @returns {object}\n */\nexport const getRegexp = (): AnyObject => {\n  return {\n    // 匹配html标签，提取html文字： htmlCode.replace(reg.html,'')\n    html: /<[^>]+>/gim,\n    // 至少1数字1字母1字符，8-16位\n    password: /^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[\\W_]).{8,16}$/,\n    // 普通身份证号正则，isIdCard更为严格\n    idCard: /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/,\n    // 简易身份证号 数字+x\n    idCardNormal: /^[0-9]\\d+([0-9]|X|x)*$/,\n    // 手机号\n    phone: /^1\\d{10}$/,\n    // 邮箱\n    email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n    // 网址\n    http: /http:\\/\\/|https:\\/\\//,\n    // 含0整数（得分）\n    score: /^[1-9]\\d*|0$/,\n    // 整数\n    int: /^[1-9]\\d*$/,\n    // 匹配数字\n    number: /^\\d*$/,\n    // >=0||1位小数\n    float1: /^(([1-9]\\d*)|0|(0.\\d{0,1})|([1-9]\\d*.\\d{0,1}))$/,\n    // >=0||2位小数\n    float2: /^(([1-9]\\d*)|0|(0.\\d{0,2})|([1-9]\\d*.\\d{0,2}))$/,\n    // >=0||3位小数\n    float3: /^(([1-9]\\d*)|0|(0.\\d{0,3})|([1-9]\\d*.\\d{0,3}))$/,\n    // 字母+数字组合\n    letterNumber: /^[a-zA-Z0-9]*$/,\n    // 字母\n    letter: /^[a-zA-Z]*$/,\n    // 帐号50个字内：大小写+数字+中文+'_'+'-'\n    account: /^[a-zA-Z0-9_\\-\\u4e00-\\u9fa5]{1,50}$/,\n    // 中英文姓名 50个字内/中文 中文/英文-. 英文-./\n    realName:\n      /^([\\u4e00-\\u9fa5]{1,50}|[\\u4e00-\\u9fa5]{1,25}[\\s][\\u4e00-\\u9fa5]{1,24}|[a-zA-Z_\\-.]{1,50}|[a-zA-Z_\\-.]{1,25}[\\s][a-zA-Z_\\-.]{1,24})$/,\n    // 匹配中文\n    cn: /^[\\u4e00-\\u9fa5]*$/,\n    // 匹配ASCII,非中文之外的字符（全角字符）\n    ascii: /^[\\x20-\\x7E]+$/,\n  }\n}\n\n/**\n * @function\n * @description 设置标题\n * @param  {string} argTitle 标题\n */\nexport const setTitle = (argTitle: string | number) => {\n  if (typeof globalThis.document === 'object') {\n    globalThis.document.title = String(argTitle)\n  }\n  if (getInfo().isAppleMobile) {\n    const i = document.createElement('iframe')\n    i.onload = () => {\n      setTimeout(() => {\n        console.debug('apple mobile setting title')\n        i.remove()\n      }, 10)\n    }\n    globalThis.document.body.appendChild(i)\n  }\n}\n\n/**\n * @function\n * @description 使用postcss-px2rem时使用\n * @param {number} argBaseSize 基础大小 16px（要跟配置一致）\n * @param {number} argWidth 基准宽度\n */\nexport const remInit = (argBaseSize: number = 16, argWidth: number = 375) => {\n  // 设置 rem 函数\n  const setRem = () => {\n    // 当前页面宽度相对于 argWidth 宽的缩放比例，可根据自己需要修改。\n    const scale =\n      safeData(globalThis, 'document.documentElement.clientWidth', argWidth) /\n      argWidth\n    // 设置页面根节点字体大小\n    safeData(\n      globalThis,\n      'document.documentElement.style.fontSize',\n      argBaseSize * scale + 'px',\n      true\n    )\n  }\n  // 初始化\n  setRem()\n  // 改变窗口大小时重新设置 rem\n  globalThis.onresize = () => {\n    setRem()\n  }\n}\n\n/**\n * @function\n * @description 获取cookie\n * @param  {string} argName 要获取的值\n * @returns {string}\n */\nexport const getCookie = (argName: string): string => {\n  const cookies = globalThis.document.cookie.split('; ')\n  const cookie = cookies.find((cookie) => {\n    const [name] = cookie.split('=')\n    return argName === name\n  })\n  return cookie ? decodeURIComponent(cookie.split('=')[1] || '') : ''\n}\n\n/**\n * @function\n * @description 设置cookie\n * @param  {string} argName 要设置的key\n * @param  {string} argValue 要设置的value\n * @param  {number} argTime 过期时间/时 默认24小时\n */\nexport const setCookie = (\n  argName: string,\n  argValue: string | number | boolean = '',\n  argTime: number = 24\n) => {\n  let now = new Date()\n  let offset = 8\n  let utc = now.getTime() + now.getTimezoneOffset() * 60000\n  let nd = utc + 3600000 * offset\n  let exp = new Date(nd)\n  let domain = globalThis.document.domain\n  exp.setTime(exp.getTime() + argTime * 60 * 60 * 1000)\n  globalThis.document.cookie =\n    argName +\n    '=' +\n    encodeURIComponent(argValue) +\n    ';path=/;expires=' +\n    exp.toUTCString() +\n    ';domain=' +\n    domain +\n    ';'\n}\n\n/**\n * @function\n * @description 清除cookie\n * @param  {string} argName 要清除的值\n */\nexport const delCookie = (argName: string = '') => {\n  setCookie(argName, '', -1)\n}\n\n/**\n * @function\n * @description 检测浏览器状态，系统状态 *\n * @returns {Info} {\n * ua: ua,\n * platform: 平台,\n * isMobile: 移动端,\n * isWin: winPC端,\n * isIphone: iphone,\n * isIpad: ipad,\n * isMac: mac,\n * isAppleMobile: 苹果移动端webview\n * isSafari: Safari浏览器,\n * isIos: Ios平台,\n * isAndroid: android平台,\n * isIE: 显示8 9 10, true为11以上\n * ...\n * }\n */\nexport const getInfo = (): Info => {\n  let ua = safeData(globalThis, 'navigator.userAgent', '').toLowerCase()\n  let platform: string = safeData(\n    globalThis,\n    'navigator.userAgentData.platform',\n    ''\n  ).toLowerCase()\n  let info: Info = {\n    ua: ua,\n    platform: platform,\n    isMobile: !!ua.match(/mobile/),\n    isWin: !!platform.match('win'),\n    isIphone: !!ua.match(/iphone/),\n    isIpad: !!ua.match(/ipad/),\n    isMac: !!platform.match('mac'),\n    isIos: !!platform.match('ios'),\n    isAndroid: !!platform.match('android'),\n    isSafari: ua.indexOf('safari') > -1 && ua.indexOf('chrome') < 1,\n    isIE: 'ActiveXObject' in globalThis,\n    ieVersion: 0,\n    isAppleMobile: false,\n    isWeixin: !!ua.match(/MicroMessenger/i),\n    isAlipay: !!ua.match(/Alipay/i),\n  }\n  if (info.ua.match('msie')) {\n    let IE = info.ua.match(/msie\\s([0-9]*)/)\n    if (IE && IE.length >= 2) {\n      info.ieVersion = +IE[1]\n    }\n  }\n  info.isAppleMobile = !!(\n    info.isMobile &&\n    ua.toLowerCase().indexOf('applewebkit') &&\n    ua.indexOf('chrome') < 1\n  )\n  return info\n}\n\n/**\n * @function\n * @description 获取随机颜色\n * @return string\n */\nexport const getRandomColor = function () {\n  return (\n    '#' +\n    ('00000' + ((Math.random() * 0x1000000) << 0).toString(16)).substring(-6)\n  )\n}\n\n/**\n * @function\n * @description 获取storage的值，默认将json转为obj\n * @param {string} argKey 要获取的key\n * @param {string} argNoJson true时不自动转换JSON字符串\n * @returns {any} key对应的数据\n */\nexport const getStorage = (argKey: string, argNoJson?: string): any => {\n  let res = globalThis.localStorage.getItem(argKey)\n  // 默认转义JSON字符串\n  if (!argNoJson && isJson(res) && res) {\n    res = JSON.parse(res)\n  }\n  return res || ''\n}\n\n/**\n * @function\n * @description 设置storage的值，默认将obj转为json\n * @param {string} argKey 要获取的key\n * @param {unknown} argData 要保存的数据\n * @returns {string} 保存的数据String\n */\nexport const setStorage = (argKey: string, argData: unknown): string => {\n  if (typeof argData === 'object') {\n    argData = JSON.stringify(argData)\n  }\n  globalThis.localStorage.setItem(argKey, String(argData))\n  return String(argData)\n}\n\n/**\n * @function\n * @description setTimeout promise版\n * @param  {number} ms 时间，毫秒\n */\nexport const sleep = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n// 返回T下的key对应类型\ntype KeyOf<T extends Record<string, any>, K = keyof T> = K extends string\n  ? T[K] extends Function\n    ? never\n    : K\n  : never\ntype DotField<T extends Record<string, any>, K = KeyOf<T>> = K extends string\n  ? K | `${K}.${DotField<T[K]>}`\n  : never\n// 返回传入K或T[K]对应的类型\ntype ValueOf<\n  T extends Record<string, any>,\n  K\n> = K extends `${infer I}.${infer R}`\n  ? ValueOf<T[I], R>\n  : K extends string\n  ? T[K]\n  : never\n\n/**\n * @function\n * @description 数据安全访问\n * @param  {any} argData  [原始数据]\n * @param  {string} argCheck [要返回的数据，用'.'连接，数组用'.+数字表示']\n * @param  {any} argValue [如果数据有误，返回的值，选填]\n * @param  {boolean|0|1} argSetValueForce [是否强制赋值argValue]\n * @returns {any}\n */\nexport const safe = function safe<\n  T extends Record<string, any>,\n  K extends DotField<T>\n>(\n  argData: T,\n  argCheck: K,\n  argValue?: ValueOf<T, K>,\n  argSetValueForce?: Bool\n): ValueOf<T, K> | undefined | string {\n  if (!argData) {\n    return argValue\n  }\n  if (typeof argCheck !== 'string' && typeof argCheck !== 'number') {\n    console.warn('argCheck请传入string当前为:' + argCheck)\n    return ''\n  }\n  const temKey = argCheck.toString().split('.')\n  const temLen = temKey.length\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== 'object') {\n        if (argSetValueForce) {\n          console.warn('safeData setValue err：', argData, 'index:', i)\n        }\n        return argValue\n      }\n      argData = argData[temKey[i]] || {}\n    }\n  }\n  if (argSetValueForce) {\n    ;(argData as AnyObject)[temKey[temLen - 1]] = argValue\n  }\n  if (typeof argValue === 'undefined') {\n    return argData[temKey[temLen - 1]]\n  } else {\n    return argData[temKey[temLen - 1]] || argValue\n  }\n}\n/**\n * @function\n * @description 数据安全访问\n * @param  {any} argData  [原始数据]\n * @param  {string} argCheck [要返回的数据，用'.'连接，数组用'.+数字表示']\n * @param  {any} argValue [如果数据有误，返回的值，选填]\n * @param  {boolean|0|1} argSetValueForce [是否强制赋值argValue]\n * @returns {any}\n */\nexport const safeData = (\n  argData: any,\n  argCheck: string,\n  argValue?: any,\n  argSetValueForce?: Bool\n): any => {\n  if (typeof argCheck !== 'string' && typeof argCheck !== 'number') {\n    console.warn('argCheck请传入string当前为:' + argCheck)\n    return ''\n  }\n  const temKey = argCheck.toString().split('.')\n  const temLen = temKey.length\n  if (!argData) {\n    return argValue\n  }\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== 'object') {\n        if (argSetValueForce) {\n          console.warn('safeData setValue err：', argData, 'index:', i)\n        }\n        return argValue\n      }\n      argData = argData[temKey[i]] || {}\n    }\n  }\n  if (argSetValueForce) {\n    argData[temKey[temLen - 1]] = argValue\n  }\n  if (typeof argValue === 'undefined') {\n    return argData[temKey[temLen - 1]]\n  } else {\n    return argData[temKey[temLen - 1]] || argValue\n  }\n}\n\n/**\n * @description obj转url参数\n * @function\n * @param {any} argParams 参数对象\n * @param {boolean?} noMark 默认带?,true时,不带\n * @returns {string}\n */\nexport const setUrlParams = (argParams: any, noMark?: boolean): string => {\n  let re = ''\n  if (!noMark) {\n    re = '?'\n  }\n  let paramsList = Object.keys(argParams)\n  let temLength = paramsList.length\n  if (!temLength) {\n    return ''\n  }\n  paramsList.map((v, k) => {\n    re += v + '=' + argParams[v]\n    if (k < temLength - 1) {\n      re += '&'\n    }\n  })\n  return re\n}\n\n/**\n * @description 获取url参数\n * @function\n * @param {string} argName 要获取的key\n * @param {string} argUrl url数据\n * @returns {string}\n */\nexport const getUrlParam = (\n  argName: string,\n  argUrl: string = globalThis.location.search || ''\n): string => {\n  let result = argUrl.match(new RegExp('[?&]' + argName + '=([^&]+)', 'i'))\n  if (!result) {\n    return ''\n  }\n  return decodeURIComponent(result[1])\n}\n\n/**\n * @description 获取所有url参数，eg: a=1&b=2 to {a:1,b:2}\n * @function\n * @param {string} argData 要处理的数据\n * @returns {any}\n */\nexport const getUrlParamObj = (\n  argData: string = globalThis.location.search || globalThis.location.hash\n): AnyObject => {\n  const res: AnyObject = {}\n  try {\n    argData\n      .slice(argData.indexOf('?') + 1)\n      .split('&')\n      .forEach((v) => {\n        const [key, val] = v.split('=')\n        if (key !== v) {\n          res[key] = decodeURIComponent(val)\n        }\n      })\n    return res\n  } catch (e) {\n    console.error('转换失败', e)\n    return res\n  }\n  // let temObj = new URLSearchParams(argData)\n  // let resObj = {}\n  // for (const [key, value] of temObj) {\n  //   resObj[key] = value\n  // }\n  // return resObj\n}\n\n/**\n * @description 通过正则匹配修改当前页面的url中的参数\n * @function\n * @param  {string} name key\n * @param  {string | number| undefined | null} value 要替换的value\n * @param  {string} url 要替换的网址,默认location.href\n * @returns {string}\n */\nexport const replaceUrlParam = (\n  name: string,\n  value: string | number | undefined | null,\n  url: string = globalThis.location.href || ''\n): string => {\n  const reg = new RegExp('([?]|&)(' + name + '=)([^&#]*)([&]?|$)', 'img')\n  const r = url.match(reg)\n  const search = url.split('?')\n  let strValue: string = url\n  if (value === undefined || value === null) {\n    if (r != null) {\n      strValue = url.replace(reg, (_match, p1, _p2, _p3, p4) => {\n        if (!p4 || !p4.length) {\n          return ''\n        } else if (p1 === p4) {\n          return p1\n        }\n        return p1 + p4\n      })\n      strValue = strValue.replace('?&', '?')\n    }\n  } else if (r != null) {\n    strValue = url.replace(reg, `$1$2${value}$4`)\n  } else if (search.length > 1) {\n    const sub = search[1].split('#')\n    if (sub.length > 1) {\n      if (sub[1].length) {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}#${sub[1]}`\n      } else {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}${sub[1]}`\n      }\n    } else {\n      strValue = `${search[0]}?${search[1]}&${name}=${value}`\n    }\n  } else {\n    // 不存在?时,搜索hash\n    const sub = url.split('#')\n    if (sub.length > 1) {\n      strValue = `${sub[0]}?${name}=${value}#${sub[1]}`\n    } else {\n      strValue = `${url}?${name}=${value}`\n    }\n  }\n  return strValue\n}\n\n/**\n * @function\n * @description 获取简单uuid\n * @returns {string} uuid\n */\nexport const getUuid = (): string => {\n  const S4 = () =>\n    (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  return S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + Date.now()\n}\n\n/**\n * @function\n * @description 获取随机数,含最大值，含最小值\n * @param  {number} min 最小值\n * @param  {number} max 最大值\n * @returns {number}\n */\nexport const randomInt = (min: number = 0, max: number = 100): number => {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  // 含最大值，含最小值\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n/**\n * @function\n * @description 设置env参数，一般在main.js中调用\n * @param  {AnyObject} env 要设置的值\n */\nexport const setEnv = (env: AnyObject) => {\n  ENV = env\n}\n/**\n * @function\n * @description 获取env参数\n * @param  {string} key 要获取的值\n * @returns {string} 获取的值\n */\nexport const getEnv = (key: string): string => {\n  return safeData(ENV, key, '')\n}\n\n/**\n * @function\n * @description 设置object参数,可做运行时缓存\n * @param  {string} key 要设置的key\n * @param  {AnyObject} data 要设置的值\n * @returns {AnyObject}\n */\nexport const setObj = (key: string, data: AnyObject): AnyObject => {\n  if (!key) {\n    DATA_OBJECT = data\n  } else {\n    DATA_OBJECT[key] = data\n  }\n  return DATA_OBJECT\n}\n\n/**\n * @function\n * @description 获取object参数\n * @param  {string} key 要获取的值\n * @param  {string} argData 要合并的值\n * @param  {boolean} isDeepCopy 是否深拷贝\n * @returns {AnyObject} 获取的值\n */\nexport const getObj = (\n  key: string,\n  argData?: AnyObject,\n  isDeepCopy?: Bool\n): AnyObject => {\n  let res: AnyObject = safeData(DATA_OBJECT, key, {})\n  if (argData) {\n    res = Object.assign(res, argData)\n  }\n  if (!isDeepCopy) {\n    return res\n  } else {\n    return JSON.parse(JSON.stringify(res))\n  }\n}\n\n/**\n * @function\n * @description 设置日志输出logLevel 1 error 2 warn 3 info 4 log 5 debug\n * @param {AnyObject} logConfig 重写配置\n * @param {function} logConfig.error 错误日志回调（做额外处理用）\n */\nexport const setLog = (logLevel?: string | number, logConfig?: AnyObject) => {\n  // 1 error 2 warn 3 info 4 log 5 debug\n  logLevel = logLevel || getEnv('VUE_APP_LOG_LEVEL') || 4\n  const logList = ['log', 'info', 'warn', 'error']\n  const log: AnyObject = {}\n  logList.forEach((v) => {\n    log[v] = (console as AnyObject)[v]\n  })\n  for (let key in logConfig) {\n    if ((console as AnyObject)[key]) {\n      ;(console as AnyObject)[key] = (...arg: any[]) => {\n        ;(log as AnyObject)[key](...arg, Error().stack?.split('\\n')[2])\n        // 回调处理\n        logConfig[key] && logConfig[key](...arg, Error().stack?.split('\\n')[2])\n      }\n    }\n  }\n  switch (+logLevel) {\n    case 1:\n      console.warn = () => {}\n    case 2:\n      console.info = () => {}\n    case 3:\n      console.log = () => {}\n    case 4:\n      console.debug = () => {}\n    default:\n      break\n  }\n  // return log\n}\n\n/**\n * 深拷贝函数\n * @param obj 需要拷贝的对象\n * @returns 拷贝后的对象\n */\nexport const deepCopy = (obj: any): any => {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj\n  }\n  let copy = Array.isArray(obj) ? [] : {}\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ;(copy as AnyObject)[key] = deepCopy(obj[key])\n    }\n  }\n  return copy\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"2002","url":"/home/runner/work/utils/utils/src/base.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12414,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":12411,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":26}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":26}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":29}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"deepCopy","ranges":[{"startOffset":929,"endOffset":943,"count":5}],"isBlockCoverage":true},{"functionName":"delCookie","ranges":[{"startOffset":958,"endOffset":973,"count":1}],"isBlockCoverage":true},{"functionName":"getCookie","ranges":[{"startOffset":988,"endOffset":1003,"count":1}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":1015,"endOffset":1027,"count":4}],"isBlockCoverage":true},{"functionName":"getInfo","ranges":[{"startOffset":1040,"endOffset":1053,"count":1}],"isBlockCoverage":true},{"functionName":"getNetworkStatus","ranges":[{"startOffset":1075,"endOffset":1097,"count":0}],"isBlockCoverage":false},{"functionName":"getObj","ranges":[{"startOffset":1109,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomColor","ranges":[{"startOffset":1141,"endOffset":1161,"count":1}],"isBlockCoverage":true},{"functionName":"getRegexp","ranges":[{"startOffset":1176,"endOffset":1191,"count":1}],"isBlockCoverage":true},{"functionName":"getStorage","ranges":[{"startOffset":1207,"endOffset":1223,"count":1}],"isBlockCoverage":true},{"functionName":"getUrlParam","ranges":[{"startOffset":1240,"endOffset":1257,"count":1}],"isBlockCoverage":true},{"functionName":"getUrlParamObj","ranges":[{"startOffset":1277,"endOffset":1297,"count":1}],"isBlockCoverage":true},{"functionName":"getUuid","ranges":[{"startOffset":1310,"endOffset":1323,"count":1}],"isBlockCoverage":true},{"functionName":"randomInt","ranges":[{"startOffset":1338,"endOffset":1353,"count":1}],"isBlockCoverage":true},{"functionName":"remInit","ranges":[{"startOffset":1366,"endOffset":1379,"count":1}],"isBlockCoverage":true},{"functionName":"replaceUrlParam","ranges":[{"startOffset":1400,"endOffset":1421,"count":1}],"isBlockCoverage":true},{"functionName":"safe","ranges":[{"startOffset":1431,"endOffset":1441,"count":1}],"isBlockCoverage":true},{"functionName":"safeData","ranges":[{"startOffset":1455,"endOffset":1469,"count":1}],"isBlockCoverage":true},{"functionName":"setCookie","ranges":[{"startOffset":1484,"endOffset":1499,"count":1}],"isBlockCoverage":true},{"functionName":"setEnv","ranges":[{"startOffset":1511,"endOffset":1523,"count":1}],"isBlockCoverage":true},{"functionName":"setLog","ranges":[{"startOffset":1535,"endOffset":1547,"count":0}],"isBlockCoverage":false},{"functionName":"setObj","ranges":[{"startOffset":1559,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"setStorage","ranges":[{"startOffset":1587,"endOffset":1603,"count":1}],"isBlockCoverage":true},{"functionName":"setTitle","ranges":[{"startOffset":1617,"endOffset":1631,"count":1}],"isBlockCoverage":true},{"functionName":"setUrlParams","ranges":[{"startOffset":1649,"endOffset":1667,"count":1}],"isBlockCoverage":true},{"functionName":"sleep","ranges":[{"startOffset":1678,"endOffset":1689,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1920,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2031,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"getNetworkStatus","ranges":[{"startOffset":2127,"endOffset":2155,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexp","ranges":[{"startOffset":2175,"endOffset":3095,"count":1}],"isBlockCoverage":true},{"functionName":"setTitle","ranges":[{"startOffset":3114,"endOffset":3506,"count":1},{"startOffset":3264,"endOffset":3504,"count":0}],"isBlockCoverage":true},{"functionName":"i.onload","ranges":[{"startOffset":3329,"endOffset":3454,"count":0}],"isBlockCoverage":false},{"functionName":"remInit","ranges":[{"startOffset":3524,"endOffset":3892,"count":1}],"isBlockCoverage":true},{"functionName":"setRem","ranges":[{"startOffset":3581,"endOffset":3826,"count":1}],"isBlockCoverage":true},{"functionName":"globalThis.onresize","ranges":[{"startOffset":3864,"endOffset":3889,"count":0}],"isBlockCoverage":false},{"functionName":"getCookie","ranges":[{"startOffset":3912,"endOffset":4176,"count":3},{"startOffset":4120,"endOffset":4168,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4015,"endOffset":4101,"count":3}],"isBlockCoverage":true},{"functionName":"setCookie","ranges":[{"startOffset":4196,"endOffset":4645,"count":5}],"isBlockCoverage":true},{"functionName":"delCookie","ranges":[{"startOffset":4665,"endOffset":4716,"count":2}],"isBlockCoverage":true},{"functionName":"getInfo","ranges":[{"startOffset":4734,"endOffset":5737,"count":2},{"startOffset":5258,"endOffset":5285,"count":0},{"startOffset":5487,"endOffset":5607,"count":0},{"startOffset":5648,"endOffset":5690,"count":0},{"startOffset":5691,"endOffset":5718,"count":0}],"isBlockCoverage":true},{"functionName":"getRandomColor","ranges":[{"startOffset":5762,"endOffset":5863,"count":1}],"isBlockCoverage":true},{"functionName":"getStorage","ranges":[{"startOffset":5884,"endOffset":6071,"count":3},{"startOffset":6009,"endOffset":6015,"count":0},{"startOffset":6017,"endOffset":6049,"count":0},{"startOffset":6063,"endOffset":6068,"count":2}],"isBlockCoverage":true},{"functionName":"setStorage","ranges":[{"startOffset":6092,"endOffset":6282,"count":3},{"startOffset":6150,"endOffset":6194,"count":1}],"isBlockCoverage":true},{"functionName":"sleep","ranges":[{"startOffset":6298,"endOffset":6369,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6329,"endOffset":6365,"count":1}],"isBlockCoverage":true},{"functionName":"safe2","ranges":[{"startOffset":6384,"endOffset":7293,"count":1},{"startOffset":6464,"endOffset":6490,"count":0},{"startOffset":6526,"endOffset":6557,"count":0},{"startOffset":6559,"endOffset":6663,"count":0},{"startOffset":6806,"endOffset":7059,"count":3},{"startOffset":6858,"endOffset":7011,"count":0},{"startOffset":7047,"endOffset":7052,"count":0},{"startOffset":7088,"endOffset":7143,"count":0},{"startOffset":7183,"endOffset":7228,"count":0},{"startOffset":7275,"endOffset":7286,"count":0}],"isBlockCoverage":true},{"functionName":"safeData","ranges":[{"startOffset":7312,"endOffset":8204,"count":20},{"startOffset":7400,"endOffset":7431,"count":0},{"startOffset":7433,"endOffset":7537,"count":0},{"startOffset":7635,"endOffset":7661,"count":1},{"startOffset":7661,"endOffset":7680,"count":19},{"startOffset":7680,"endOffset":7980,"count":8},{"startOffset":7723,"endOffset":7976,"count":14},{"startOffset":7775,"endOffset":7928,"count":3},{"startOffset":7807,"endOffset":7895,"count":1},{"startOffset":7928,"endOffset":7964,"count":11},{"startOffset":7964,"endOffset":7969,"count":0},{"startOffset":7976,"endOffset":7980,"count":5},{"startOffset":7980,"endOffset":8005,"count":16},{"startOffset":8005,"endOffset":8054,"count":2},{"startOffset":8054,"endOffset":8094,"count":16},{"startOffset":8094,"endOffset":8139,"count":4},{"startOffset":8139,"endOffset":8202,"count":12},{"startOffset":8186,"endOffset":8197,"count":6}],"isBlockCoverage":true},{"functionName":"setUrlParams","ranges":[{"startOffset":8227,"endOffset":8556,"count":3},{"startOffset":8282,"endOffset":8301,"count":1},{"startOffset":8400,"endOffset":8420,"count":1},{"startOffset":8420,"endOffset":8555,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8438,"endOffset":8539,"count":3},{"startOffset":8511,"endOffset":8535,"count":1}],"isBlockCoverage":true},{"functionName":"getUrlParam","ranges":[{"startOffset":8578,"endOffset":8790,"count":4},{"startOffset":8624,"endOffset":8629,"count":1},{"startOffset":8728,"endOffset":8748,"count":1},{"startOffset":8748,"endOffset":8789,"count":3}],"isBlockCoverage":true},{"functionName":"getUrlParamObj","ranges":[{"startOffset":8815,"endOffset":9210,"count":7},{"startOffset":8853,"endOffset":8880,"count":1},{"startOffset":9127,"endOffset":9208,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8976,"endOffset":9104,"count":9},{"startOffset":9045,"endOffset":9098,"count":7}],"isBlockCoverage":true},{"functionName":"replaceUrlParam","ranges":[{"startOffset":9236,"endOffset":10448,"count":12},{"startOffset":9281,"endOffset":9286,"count":0},{"startOffset":9474,"endOffset":9491,"count":11},{"startOffset":9493,"endOffset":9788,"count":4},{"startOffset":9788,"endOffset":10427,"count":8},{"startOffset":9809,"endOffset":9865,"count":5},{"startOffset":9865,"endOffset":10427,"count":3},{"startOffset":9894,"endOffset":10238,"count":2},{"startOffset":9958,"endOffset":10158,"count":0},{"startOffset":10238,"endOffset":10427,"count":1},{"startOffset":10302,"endOffset":10366,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9550,"endOffset":9730,"count":4},{"startOffset":9598,"endOffset":9611,"count":2},{"startOffset":9613,"endOffset":9729,"count":2},{"startOffset":9666,"endOffset":9698,"count":0}],"isBlockCoverage":true},{"functionName":"getUuid","ranges":[{"startOffset":10466,"endOffset":10635,"count":1}],"isBlockCoverage":true},{"functionName":"S4","ranges":[{"startOffset":10487,"endOffset":10552,"count":5}],"isBlockCoverage":true},{"functionName":"randomInt","ranges":[{"startOffset":10655,"endOffset":10791,"count":3}],"isBlockCoverage":true},{"functionName":"setEnv","ranges":[{"startOffset":10808,"endOffset":10833,"count":1}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":10850,"endOffset":10895,"count":4}],"isBlockCoverage":true},{"functionName":"setObj","ranges":[{"startOffset":10912,"endOffset":11034,"count":0}],"isBlockCoverage":false},{"functionName":"getObj","ranges":[{"startOffset":11051,"endOffset":11284,"count":0}],"isBlockCoverage":false},{"functionName":"setLog","ranges":[{"startOffset":11301,"endOffset":12110,"count":0}],"isBlockCoverage":false},{"functionName":"deepCopy","ranges":[{"startOffset":12129,"endOffset":12407,"count":11},{"startOffset":12170,"endOffset":12185,"count":4},{"startOffset":12187,"endOffset":12208,"count":8},{"startOffset":12208,"endOffset":12241,"count":3},{"startOffset":12241,"endOffset":12245,"count":1},{"startOffset":12246,"endOffset":12250,"count":2},{"startOffset":12275,"endOffset":12390,"count":6},{"startOffset":12390,"endOffset":12406,"count":3}],"isBlockCoverage":true}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  isBlob: () => isBlob,\n  isFile: () => isFile,\n  isIdCard: () => isIdCard,\n  isJson: () => isJson,\n  isPrime: () => isPrime\n});\nmodule.exports = __toCommonJS(stdin_exports);\nconst isPrime = (argValue) => !/^.?$|^(..+?)\\1+$/.test(\".\".repeat(argValue));\nconst isJson = (argData) => {\n  try {\n    return typeof JSON.parse(argData || \"\") === \"object\";\n  } catch (e) {\n  }\n  return false;\n};\nconst isBlob = (argData) => {\n  return argData instanceof Blob;\n};\nconst isFile = (argData) => {\n  return argData instanceof File;\n};\nconst isIdCard = (code) => {\n  let tip = \"\";\n  let city = {\n    11: \"\\u5317\\u4EAC\",\n    12: \"\\u5929\\u6D25\",\n    13: \"\\u6CB3\\u5317\",\n    14: \"\\u5C71\\u897F\",\n    15: \"\\u5185\\u8499\\u53E4\",\n    21: \"\\u8FBD\\u5B81\",\n    22: \"\\u5409\\u6797\",\n    23: \"\\u9ED1\\u9F99\\u6C5F \",\n    31: \"\\u4E0A\\u6D77\",\n    32: \"\\u6C5F\\u82CF\",\n    33: \"\\u6D59\\u6C5F\",\n    34: \"\\u5B89\\u5FBD\",\n    35: \"\\u798F\\u5EFA\",\n    36: \"\\u6C5F\\u897F\",\n    37: \"\\u5C71\\u4E1C\",\n    41: \"\\u6CB3\\u5357\",\n    42: \"\\u6E56\\u5317 \",\n    43: \"\\u6E56\\u5357\",\n    44: \"\\u5E7F\\u4E1C\",\n    45: \"\\u5E7F\\u897F\",\n    46: \"\\u6D77\\u5357\",\n    50: \"\\u91CD\\u5E86\",\n    51: \"\\u56DB\\u5DDD\",\n    52: \"\\u8D35\\u5DDE\",\n    53: \"\\u4E91\\u5357\",\n    54: \"\\u897F\\u85CF \",\n    61: \"\\u9655\\u897F\",\n    62: \"\\u7518\\u8083\",\n    63: \"\\u9752\\u6D77\",\n    64: \"\\u5B81\\u590F\",\n    65: \"\\u65B0\\u7586\",\n    71: \"\\u53F0\\u6E7E\",\n    81: \"\\u9999\\u6E2F\",\n    82: \"\\u6FB3\\u95E8\",\n    91: \"\\u56FD\\u5916 \"\n  };\n  let pass = true;\n  if (!code || !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n    code\n  )) {\n    tip = \"\\u8EAB\\u4EFD\\u8BC1\\u53F7\\u683C\\u5F0F\\u9519\\u8BEF\";\n    pass = false;\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = \"\\u5730\\u5740\\u7F16\\u7801\\u9519\\u8BEF\";\n    pass = false;\n  } else {\n    if (code.length === 18) {\n      const codeArr = code.split(\"\");\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n      let parity = [1, 0, \"X\", 9, 8, 7, 6, 5, 4, 3, 2];\n      let sum = 0;\n      let ai = 0;\n      let wi = 0;\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i]);\n        wi = factor[i];\n        sum += ai * wi;\n      }\n      let last = parity[sum % 11] + \"\";\n      if (last !== code[17]) {\n        tip = \"\\u6821\\u9A8C\\u4F4D\\u9519\\u8BEF\";\n        pass = false;\n      }\n    }\n  }\n  console.assert(!tip, tip);\n  return pass;\n};\n","originalCode":"/**\n * @module index\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 判断函数\n */\n/**\n * @function\n * @description 判断质数\n * @param {number} argValue 要判断的数据\n * @returns {boolean} 结果\n */\nexport const isPrime = (argValue: number): boolean =>\n  !/^.?$|^(..+?)\\1+$/.test('.'.repeat(argValue))\n\n/**\n * @function\n * @description 判断是否是JSON\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isJson = (argData: any): boolean => {\n  try {\n    return typeof JSON.parse(argData || '') === 'object'\n  } catch (e) {}\n  return false\n}\n/**\n * @function\n * @description 判断是否是Blob\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isBlob = (argData: any): boolean => {\n  return argData instanceof Blob\n}\n\n/**\n * @function\n * @description 判断是否是File\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isFile = (argData: any): boolean => {\n  return argData instanceof File\n}\n\n/**\n * @function\n * @description 是否为正确的身份证号码\n * @param  {string} code 身份证号码\n * @returns {boolean}\n */\nexport const isIdCard = (code: string): boolean => {\n  let tip = ''\n  let city: { [key: number]: string } = {\n    11: '北京',\n    12: '天津',\n    13: '河北',\n    14: '山西',\n    15: '内蒙古',\n    21: '辽宁',\n    22: '吉林',\n    23: '黑龙江 ',\n    31: '上海',\n    32: '江苏',\n    33: '浙江',\n    34: '安徽',\n    35: '福建',\n    36: '江西',\n    37: '山东',\n    41: '河南',\n    42: '湖北 ',\n    43: '湖南',\n    44: '广东',\n    45: '广西',\n    46: '海南',\n    50: '重庆',\n    51: '四川',\n    52: '贵州',\n    53: '云南',\n    54: '西藏 ',\n    61: '陕西',\n    62: '甘肃',\n    63: '青海',\n    64: '宁夏',\n    65: '新疆',\n    71: '台湾',\n    81: '香港',\n    82: '澳门',\n    91: '国外 ',\n  }\n  let pass = true\n  if (\n    !code ||\n    !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n      code\n    )\n  ) {\n    tip = '身份证号格式错误'\n    pass = false\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = '地址编码错误'\n    pass = false\n  } else {\n    // 18位身份证需要验证最后一位校验位\n    if (code.length === 18) {\n      const codeArr = code.split('')\n      // ∑(ai×Wi)(mod 11)\n      // 加权因子\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]\n      // 校验位\n      let parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2]\n      let sum = 0\n      let ai = 0\n      let wi = 0\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i])\n        wi = factor[i]\n        sum += ai * wi\n      }\n      let last = parity[sum % 11] + ''\n      if (last !== code[17]) {\n        tip = '校验位错误'\n        pass = false\n      }\n    }\n  }\n  console.assert(!tip, tip)\n  return pass\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"2003","url":"/home/runner/work/utils/utils/src/is.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3284,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":3281,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":5}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":3}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"isBlob","ranges":[{"startOffset":927,"endOffset":939,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":951,"endOffset":963,"count":0}],"isBlockCoverage":false},{"functionName":"isIdCard","ranges":[{"startOffset":977,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"isJson","ranges":[{"startOffset":1003,"endOffset":1015,"count":3}],"isBlockCoverage":true},{"functionName":"isPrime","ranges":[{"startOffset":1028,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"isPrime","ranges":[{"startOffset":1108,"endOffset":1168,"count":0}],"isBlockCoverage":false},{"functionName":"isJson","ranges":[{"startOffset":1185,"endOffset":1303,"count":3},{"startOffset":1245,"endOffset":1250,"count":2}],"isBlockCoverage":true},{"functionName":"isBlob","ranges":[{"startOffset":1320,"endOffset":1370,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":1387,"endOffset":1437,"count":0}],"isBlockCoverage":false},{"functionName":"isIdCard","ranges":[{"startOffset":1456,"endOffset":3277,"count":0}],"isBlockCoverage":false}]}}]},{"leaks":false,"numFailingTests":0,"numPassingTests":15,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1679538734092,"runtime":336,"slow":false,"start":1679538733756},"skipped":false,"testFilePath":"/home/runner/work/utils/utils/test/transform.spec.ts","testResults":[{"rowKey":0,"ancestorTitles":["transform"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"transform rmbPrice","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"rmbPrice"},{"rowKey":1,"ancestorTitles":["transform"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"transform formatTime","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"formatTime"},{"rowKey":2,"ancestorTitles":["transform"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"transform friendlyTime","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"friendlyTime"},{"rowKey":3,"ancestorTitles":["transform"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"transform px2vw","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"px2vw"},{"rowKey":4,"ancestorTitles":["transform"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"transform secondToTime","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"secondToTime"},{"rowKey":5,"ancestorTitles":["transform"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"transform formatSize","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"formatSize"},{"rowKey":6,"ancestorTitles":["transform"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"transform formatNumber","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"formatNumber"},{"rowKey":7,"ancestorTitles":["transform"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"transform encodeHtml","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"encodeHtml"},{"rowKey":8,"ancestorTitles":["transform"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"transform decodeHtml","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"decodeHtml"},{"rowKey":9,"ancestorTitles":["transform"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"transform hideInfo","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"hideInfo"},{"rowKey":10,"ancestorTitles":["transform"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"transform toFixed","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"toFixed"},{"rowKey":11,"ancestorTitles":["transform"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"transform toLine","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"toLine"},{"rowKey":12,"ancestorTitles":["transform"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"transform toHump","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"toHump"},{"rowKey":13,"ancestorTitles":["transform"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"transform string10to62","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"string10to62"},{"rowKey":14,"ancestorTitles":["transform"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"transform string62to10","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"string62to10"}],"failureMessage":null,"v8Coverage":[{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  decodeHtml: () => decodeHtml,\n  encodeHtml: () => encodeHtml,\n  formatNumber: () => formatNumber,\n  formatSize: () => formatSize,\n  formatTime: () => formatTime,\n  friendlyTime: () => friendlyTime,\n  hideInfo: () => hideInfo,\n  px2vw: () => px2vw,\n  rmbPrice: () => rmbPrice,\n  secondToTime: () => secondToTime,\n  string10to62: () => string10to62,\n  string62to10: () => string62to10,\n  toFixed: () => toFixed,\n  toHump: () => toHump,\n  toLine: () => toLine,\n  toList: () => toList\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar import_base = require(\"./base\");\nconst encodeHtml = (argHtml) => {\n  if (!argHtml || argHtml.length === 0) {\n    return \"\";\n  }\n  const htmlEntities = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    \"'\": \"&apos;\",\n    '\"': \"&quot;\",\n    \" \": \"&nbsp;\",\n    \"\\n\": \"<br>\"\n  };\n  return argHtml.replace(/[&<>\"' \\n]/g, function(char) {\n    return htmlEntities[char];\n  });\n};\nconst decodeHtml = (argHtml) => {\n  const htmlEntities = {\n    quot: '\"',\n    apos: \"'\",\n    lt: \"<\",\n    gt: \">\",\n    nbsp: \" \",\n    amp: \"&\"\n  };\n  return argHtml.replace(/&([^;]+);/g, (match, entity) => {\n    return htmlEntities[entity] || match;\n  });\n};\nconst rmbPrice = (argData, argRate = -1, argUnit = \"\\uFFE5\", argDef = \"--\") => {\n  if (typeof argData === \"string\" || typeof argData === \"number\") {\n    if (!argData && argData !== 0) {\n      return argDef;\n    }\n  } else {\n    return argDef;\n  }\n  argData = Number(argData);\n  if (argRate > -1) {\n    argData = +toFixed(argData, argRate);\n  }\n  return argUnit + argData;\n};\nconst formatTime = (date = +new Date(), fmt = \"YYYY-MM-DD HH:mm:ss\", emptyTip = \"\") => {\n  if (!date && date !== 0) {\n    return emptyTip;\n  }\n  if (isNaN(+date)) {\n    return emptyTip;\n  }\n  if (typeof date === \"number\") {\n    if (date.toString().length === 10) {\n      date = date * 1e3;\n    }\n  }\n  date = new Date(+date);\n  const fmtMap = {\n    \"M+\": date.getMonth() + 1,\n    \"D+\": date.getDate(),\n    \"h+\": date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,\n    \"H+\": date.getHours(),\n    \"m+\": date.getMinutes(),\n    \"s+\": date.getSeconds(),\n    \"q+\": Math.floor((date.getMonth() + 3) / 3),\n    S: date.getMilliseconds()\n  };\n  const week = {\n    0: \"\\u65E5\",\n    1: \"\\u4E00\",\n    2: \"\\u4E8C\",\n    3: \"\\u4E09\",\n    4: \"\\u56DB\",\n    5: \"\\u4E94\",\n    6: \"\\u516D\"\n  };\n  const temY = fmt.match(/(Y+)/);\n  if (temY) {\n    fmt = fmt.replace(\n      temY[0],\n      (date.getFullYear() + \"\").substring(4 - temY[0].length)\n    );\n  }\n  const temWeek = fmt.match(/(E+)/);\n  if (temWeek) {\n    const temWeekName = [\"\", \"\\u5468\"];\n    fmt = fmt.replace(\n      temWeek[0],\n      (temWeekName[temWeek[0].length] || \"\\u661F\\u671F\") + (0, import_base.safeData)(week, date.getDay().toString(), \"\")\n    );\n  }\n  for (let k in fmtMap) {\n    let temMatch = fmt.match(new RegExp(\"(\" + k + \")\"));\n    if (temMatch) {\n      fmt = fmt.replace(\n        temMatch[0],\n        temMatch[0].length === 1 ? fmtMap[k].toString() : (\"00\" + fmtMap[k].toString()).substring((\"\" + fmtMap[k]).length)\n      );\n    }\n  }\n  return fmt;\n};\nconst friendlyTime = (date = +new Date(), fmt = \"YYYY-MM-DD HH:mm:ss\", emptyTip = \"\") => {\n  if (!date && date !== 0) {\n    return emptyTip;\n  }\n  if (isNaN(+date)) {\n    return emptyTip;\n  }\n  if (typeof date === \"number\" || typeof date === \"string\") {\n    if (date.toString().length === 10) {\n      date = date.toString() + \"000\";\n    }\n  }\n  date = new Date(+date);\n  let diff = (new Date().getTime() - date.getTime()) / 1e3;\n  let dayDiff = Math.floor(diff / 86400);\n  let isValidDate = Object.prototype.toString.call(date) === \"[object Date]\" && !isNaN(date.getTime());\n  if (!isValidDate) {\n    console.warn(\"friendlyTime:\", \"not a valid date\");\n    return emptyTip || \"--\";\n  }\n  if (isNaN(dayDiff) || dayDiff < 0 || dayDiff >= 365) {\n    return formatTime(date, fmt);\n  }\n  return (dayDiff === 0 && (diff < 60 && \"\\u521A\\u521A\" || diff < 120 && \"1\\u5206\\u949F\\u524D\" || diff < 3600 && Math.floor(diff / 60) + \"\\u5206\\u949F\\u524D\" || diff < 7200 && \"1\\u5C0F\\u65F6\\u524D\" || diff < 86400 && Math.floor(diff / 3600) + \"\\u5C0F\\u65F6\\u524D\") || dayDiff === 1 && \"\\u6628\\u5929\" || dayDiff < 7 && dayDiff + \"\\u5929\\u524D\" || dayDiff < 31 && Math.ceil(dayDiff / 7) + \"\\u5468\\u524D\" || dayDiff < 365 && Math.ceil(dayDiff / 31) + \"\\u6708\\u524D\").toString();\n};\nconst px2vw = (argPx, argWith = 375, argNum = 6, argUnit = \"vw\") => {\n  return +toFixed(100 / argWith * argPx, argNum) + argUnit;\n};\nconst secondToTime = (argData, argType = \"y\", argOption = {}) => {\n  let res = [];\n  let list = [\n    {\n      size: 1,\n      type: \"s\",\n      unit: \"\",\n      index: 0\n    },\n    {\n      size: 60,\n      unit: \":\",\n      type: \"m\",\n      index: 1\n    },\n    {\n      size: 60,\n      unit: \":\",\n      type: \"h\",\n      index: 2\n    },\n    {\n      size: 24,\n      unit: \":\",\n      type: \"d\",\n      index: 3\n    },\n    {\n      size: 30,\n      unit: \":\",\n      type: \"M\",\n      index: 4\n    },\n    {\n      size: 12,\n      unit: \":\",\n      type: \"y\",\n      index: 5\n    }\n  ];\n  let temLen = list.length;\n  let second = argData;\n  let size = 1;\n  let unitList = (argOption == null ? void 0 : argOption.unit) || [\"\\u5E74\", \"\\u6708\", \"\\u5929\", \"\\u65F6\", \"\\u5206\", \"\\u79D2\"];\n  let index = 0;\n  for (let i = 0; i < temLen; i++) {\n    let lastSize = size;\n    if (argType === list[i].type) {\n      let temTime = Math.floor(second / lastSize);\n      if (temTime < 10) {\n        temTime = \"0\" + temTime;\n      }\n      res.unshift(temTime);\n      index = temLen - i - 1;\n      break;\n    }\n    size = size * list[i + 1].size;\n    let time = Math.floor(second % size / lastSize);\n    if (time < 10) {\n      time = \"0\" + time;\n    }\n    res.unshift(time);\n  }\n  let timeText = \"\";\n  let isZero = true;\n  res.map((v, k) => {\n    if (!+v && isZero) {\n    } else {\n      isZero = false;\n      timeText += v + unitList[index + k];\n    }\n  });\n  return timeText;\n};\nconst formatSize = (argData, argNum = 2, argIndex = 0, argRate = 1024, unit = [\"B\", \"K\", \"M\", \"G\", \"T\", \"P\"]) => {\n  let list = unit;\n  if (!argData) {\n    return \"0\" + list[argIndex];\n  }\n  let len = list.length;\n  let nowIndex = len - 1;\n  let temData = 0;\n  for (let i = 0; i < len; i++) {\n    temData = argData / Math.pow(argRate, i);\n    if (temData < argRate) {\n      nowIndex = argIndex + i;\n      break;\n    }\n  }\n  return +toFixed(temData, argNum) + list[nowIndex];\n};\nconst formatNumber = (argData, argNum = 2) => {\n  if (argData < 1e3) {\n    return argData.toString();\n  } else if (argData < 1e4) {\n    return +toFixed(argData / 1e3, argNum) + \"k\";\n  } else {\n    return +toFixed(argData / 1e4, argNum) + \"w\";\n  }\n};\nfunction toList(map, getItem) {\n  const list = [];\n  Object.keys(map).forEach((key) => {\n    const item = getItem(key, map[key]);\n    list.push(item);\n  });\n  return list;\n}\nconst hideInfo = (argData = \"\", argStart = 3, argEnd = 4) => {\n  argData = String(argData);\n  let temLen = argData.length;\n  let temSL = argData.length - argEnd - argStart;\n  let start = \"\";\n  if (temSL > 0) {\n    for (let i = 0; i < temSL; i++) {\n      start += \"*\";\n    }\n    argData = argData.substring(0, argStart) + start + argData.substring(temLen - argEnd, temLen);\n  }\n  return argData;\n};\nconst string10to62 = (argData) => {\n  let chars = \"0123456789abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ\".split(\"\");\n  let radix = chars.length;\n  let data = +argData;\n  let arr = [];\n  do {\n    let mod = data % radix;\n    data = (data - mod) / radix;\n    arr.unshift(chars[mod]);\n  } while (data);\n  return arr.join(\"\");\n};\nconst string62to10 = (argData) => {\n  let chars = \"0123456789abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ\";\n  let radix = chars.length;\n  let len = argData.length;\n  let i = 0;\n  let resNum = 0;\n  while (i < len) {\n    resNum += Math.pow(radix, i++) * chars.indexOf(argData.charAt(len - i) || \"0\");\n  }\n  return resNum;\n};\nconst toFixed = (argData, argNum = 2, argType = \"round\") => {\n  if (isNaN(+argData)) {\n    return \"\";\n  }\n  const data = Math[argType](+argData * Math.pow(10, argNum)) / Math.pow(10, argNum);\n  return data.toFixed(argNum);\n};\nconst toLine = (argData, argUnit = \"_\") => {\n  return argData.replace(/([A-Z])/g, argUnit + \"$1\").toLowerCase();\n};\nconst toHump = (argData, argUnit = \"_\") => {\n  return argData.replace(\n    new RegExp(\"\\\\\" + argUnit + \"(\\\\w)\", \"g\"),\n    (_, letter) => {\n      return letter.toUpperCase();\n    }\n  );\n};\n","originalCode":"/**\r\n * @module index\r\n * @author linjielinlin 993353454@qq.com\r\n * @date 2022-05-11 22:07:43\r\n * @description 类型转换相关处理\r\n */\r\nimport { safeData } from './base'\r\nimport { StringObject } from './types'\r\n\r\n/**\r\n * @function\r\n * @description 转义html标签\r\n * @param  {string} argHtml 需要转义的文本\r\n * @returns {string}\r\n */\r\nexport const encodeHtml = (argHtml: string): string => {\r\n  if (!argHtml || argHtml.length === 0) {\r\n    return ''\r\n  }\r\n  const htmlEntities: StringObject = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    \"'\": '&apos;',\r\n    '\"': '&quot;',\r\n    ' ': '&nbsp;',\r\n    '\\n': '<br>',\r\n  }\r\n  return argHtml.replace(/[&<>\"' \\n]/g, function (char) {\r\n    return htmlEntities[char]\r\n  })\r\n}\r\n\r\n/**\r\n * @function\r\n * @description 反转义html标签\r\n * @param  {string} argHtml 需要反转义的文本\r\n * @returns {string}\r\n */\r\nexport const decodeHtml = (argHtml: string): string => {\r\n  const htmlEntities: StringObject = {\r\n    quot: '\"',\r\n    apos: \"'\",\r\n    lt: '<',\r\n    gt: '>',\r\n    nbsp: ' ',\r\n    amp: '&',\r\n  }\r\n  return argHtml.replace(/&([^;]+);/g, (match, entity) => {\r\n    return htmlEntities[entity] || match\r\n  })\r\n}\r\n\r\n/**\r\n * @function\r\n * @description 显示人民币价格\r\n * @param  {unknown} argData 价格\r\n * @param  {number} argRate -1 保留多少位小数\r\n * @param  {string} argUnit ￥ 单位\r\n * @param  {string} argDef 空数据默认值\r\n * @returns {string} eg: ￥100\r\n */\r\nexport const rmbPrice = (\r\n  argData: unknown,\r\n  argRate: number = -1,\r\n  argUnit: string = '￥',\r\n  argDef: string = '--'\r\n): string => {\r\n  if (typeof argData === 'string' || typeof argData === 'number') {\r\n    if (!argData && argData !== 0) {\r\n      return argDef\r\n    }\r\n  } else {\r\n    return argDef\r\n  }\r\n  argData = Number(argData)\r\n  if (argRate > -1) {\r\n    argData = +toFixed(argData as number, argRate)\r\n  }\r\n  return argUnit + argData\r\n}\r\n\r\n/**\r\n * @description 日期格式化显示\r\n * @function\r\n * @param  {string|number} date 时间对象\\时间戳，默认当前时间\r\n * @param  {string} fmt 格式化符串，默认'YYYY-MM-DD HH:mm:ss' E为星期数，EEE:星期一 q为季度，S为毫秒数\r\n * @param  {string} emptyTip date为false时，默认''\r\n * @returns {string}\r\n */\r\nexport const formatTime = (\r\n  date: string | number | Date = +new Date(),\r\n  fmt: string = 'YYYY-MM-DD HH:mm:ss',\r\n  emptyTip: string = ''\r\n): string => {\r\n  if (!date && date !== 0) {\r\n    return emptyTip\r\n  }\r\n  if (isNaN(+date)) {\r\n    return emptyTip\r\n  }\r\n  if (typeof date === 'number') {\r\n    if (date.toString().length === 10) {\r\n      date = date * 1000\r\n    }\r\n  }\r\n  date = new Date(+date)\r\n  const fmtMap: { [key: string]: number } = {\r\n    'M+': date.getMonth() + 1,\r\n    'D+': date.getDate(),\r\n    'h+': date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,\r\n    'H+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds(),\r\n    'q+': Math.floor((date.getMonth() + 3) / 3),\r\n    S: date.getMilliseconds(),\r\n  }\r\n  const week = {\r\n    0: '\\u65e5',\r\n    1: '\\u4e00',\r\n    2: '\\u4e8c',\r\n    3: '\\u4e09',\r\n    4: '\\u56db',\r\n    5: '\\u4e94',\r\n    6: '\\u516d',\r\n  }\r\n  const temY = fmt.match(/(Y+)/)\r\n  if (temY) {\r\n    fmt = fmt.replace(\r\n      temY[0],\r\n      (date.getFullYear() + '').substring(4 - temY[0].length)\r\n    )\r\n  }\r\n  const temWeek = fmt.match(/(E+)/)\r\n  if (temWeek) {\r\n    const temWeekName = ['', '\\u5468']\r\n    fmt = fmt.replace(\r\n      temWeek[0],\r\n      (temWeekName[temWeek[0].length] || '\\u661f\\u671f') +\r\n        safeData(week, date.getDay().toString(), '')\r\n    )\r\n  }\r\n  for (let k in fmtMap) {\r\n    let temMatch = fmt.match(new RegExp('(' + k + ')'))\r\n    if (temMatch) {\r\n      fmt = fmt.replace(\r\n        temMatch[0],\r\n        temMatch[0].length === 1\r\n          ? fmtMap[k].toString()\r\n          : ('00' + fmtMap[k].toString()).substring(('' + fmtMap[k]).length)\r\n      )\r\n    }\r\n  }\r\n  return fmt\r\n}\r\n\r\n/**\r\n * @description 日期格式化友好显示 刚刚 x分钟前 ...，超过一年的按 fmt来格式化\r\n * @function\r\n * @param  {string|number|Date} date 时间对象\\时间戳，默认当前时间\r\n * @param  {string} fmt 格式化符串，默认'YYYY-MM-DD HH:mm:ss'\r\n * @param  {string} emptyTip date为false时，默认''\r\n * @returns {string}\r\n */\r\nexport const friendlyTime = (\r\n  date: string | number | Date = +new Date(),\r\n  fmt: string = 'YYYY-MM-DD HH:mm:ss',\r\n  emptyTip: string = ''\r\n): string => {\r\n  if (!date && date !== 0) {\r\n    return emptyTip\r\n  }\r\n  if (isNaN(+date)) {\r\n    return emptyTip\r\n  }\r\n  if (typeof date === 'number' || typeof date === 'string') {\r\n    if (date.toString().length === 10) {\r\n      date = date.toString() + '000'\r\n    }\r\n  }\r\n  date = new Date(+date)\r\n  let diff = (new Date().getTime() - date.getTime()) / 1000\r\n  let dayDiff = Math.floor(diff / 86400)\r\n  let isValidDate =\r\n    Object.prototype.toString.call(date) === '[object Date]' &&\r\n    !isNaN(date.getTime())\r\n  if (!isValidDate) {\r\n    console.warn('friendlyTime:', 'not a valid date')\r\n    return emptyTip || '--'\r\n  }\r\n  if (isNaN(dayDiff) || dayDiff < 0 || dayDiff >= 365) {\r\n    return formatTime(date, fmt)\r\n  }\r\n  return (\r\n    (dayDiff === 0 &&\r\n      ((diff < 60 && '刚刚') ||\r\n        (diff < 120 && '1分钟前') ||\r\n        (diff < 3600 && Math.floor(diff / 60) + '分钟前') ||\r\n        (diff < 7200 && '1小时前') ||\r\n        (diff < 86400 && Math.floor(diff / 3600) + '小时前'))) ||\r\n    (dayDiff === 1 && '昨天') ||\r\n    (dayDiff < 7 && dayDiff + '天前') ||\r\n    (dayDiff < 31 && Math.ceil(dayDiff / 7) + '周前') ||\r\n    (dayDiff < 365 && Math.ceil(dayDiff / 31) + '月前')\r\n  ).toString()\r\n}\r\n/**\r\n * @function\r\n * @description px转vw\r\n * @param {number} argPx px\r\n * @param {number} argWith px对应最大宽度\r\n * @param {number} argNum 保留小数\r\n * @param {string} argUnit 单位 'vw'||'%'\r\n * @return {string}\r\n */\r\nexport const px2vw = (\r\n  argPx: number,\r\n  argWith: number = 375,\r\n  argNum: number = 6,\r\n  argUnit: string = 'vw'\r\n): string => {\r\n  return +toFixed((100 / argWith) * argPx, argNum) + argUnit\r\n}\r\n/**\r\n * @function\r\n * @description 秒转倒计时\r\n * @param {number} argData 秒数\r\n * @param {string} argType 's,m,h,d,M,y 对应 秒 分 时 天 月 年'\r\n * @param {object} argOption 额外的处理argOption.unit 单位['年', '月', '天', '时', '分', '秒']\r\n * @returns {string}\r\n */\r\nexport const secondToTime = (\r\n  argData: number,\r\n  argType: string = 'y',\r\n  argOption: { unit?: string[] } = {}\r\n): string => {\r\n  let res = []\r\n  let list = [\r\n    {\r\n      size: 1,\r\n      type: 's',\r\n      unit: '',\r\n      index: 0,\r\n    },\r\n    {\r\n      size: 60,\r\n      unit: ':',\r\n      type: 'm',\r\n      index: 1,\r\n    },\r\n    {\r\n      size: 60,\r\n      unit: ':',\r\n      type: 'h',\r\n      index: 2,\r\n    },\r\n    {\r\n      size: 24,\r\n      unit: ':',\r\n      type: 'd',\r\n      index: 3,\r\n    },\r\n    {\r\n      size: 30,\r\n      unit: ':',\r\n      type: 'M',\r\n      index: 4,\r\n    },\r\n    {\r\n      size: 12,\r\n      unit: ':',\r\n      type: 'y',\r\n      index: 5,\r\n    },\r\n  ]\r\n  let temLen = list.length\r\n  let second = argData\r\n  let size = 1\r\n  let unitList = argOption?.unit || ['年', '月', '天', '时', '分', '秒']\r\n  let index = 0\r\n  for (let i = 0; i < temLen; i++) {\r\n    let lastSize = size\r\n    if (argType === list[i].type) {\r\n      let temTime: number | string = Math.floor(second / lastSize)\r\n      if (temTime < 10) {\r\n        temTime = '0' + temTime\r\n      }\r\n      res.unshift(temTime)\r\n      index = temLen - i - 1\r\n      break\r\n    }\r\n    size = size * list[i + 1].size\r\n    let time: number | string = Math.floor((second % size) / lastSize)\r\n    if (time < 10) {\r\n      time = '0' + time\r\n    }\r\n    res.unshift(time)\r\n  }\r\n  let timeText = ''\r\n  let isZero = true\r\n  res.map((v, k) => {\r\n    if (!+v && isZero) {\r\n    } else {\r\n      isZero = false\r\n      timeText += v + unitList[index + k]\r\n    }\r\n  })\r\n  return timeText\r\n}\r\n/**\r\n * @function\r\n * @description 容量单位转换\r\n * @param {number} argData byte数据\r\n * @param {number} argNum 保留小数位\r\n * @param {number} argIndex 起始单位偏移eg: 0:b 1:k 2:m\r\n * @param {number} argRate 进制\r\n * @param {string[]} unit 进制\r\n * @returns {string} 计算结果\r\n */\r\nexport const formatSize = (\r\n  argData: number,\r\n  argNum: number = 2,\r\n  argIndex: number = 0,\r\n  argRate: number = 1024,\r\n  unit: string[] = ['B', 'K', 'M', 'G', 'T', 'P']\r\n): string => {\r\n  let list = unit\r\n  if (!argData) {\r\n    return '0' + list[argIndex]\r\n  }\r\n  let len = list.length\r\n  let nowIndex = len - 1\r\n  let temData: number = 0\r\n  for (let i = 0; i < len; i++) {\r\n    temData = argData / Math.pow(argRate, i)\r\n    if (temData < argRate) {\r\n      nowIndex = argIndex + i\r\n      break\r\n    }\r\n  }\r\n  return +toFixed(temData, argNum) + list[nowIndex]\r\n}\r\n/**\r\n * @function\r\n * @description 数量单位转换k/w\r\n * @param {number} argData 数据\r\n * @param {number} argNum 保留小数位\r\n * @returns {string} 计算结果\r\n */\r\nexport const formatNumber = (argData: number, argNum: number = 2): string => {\r\n  if (argData < 1000) {\r\n    return argData.toString()\r\n  } else if (argData < 10000) {\r\n    return +toFixed(argData / 1000, argNum) + 'k'\r\n  } else {\r\n    return +toFixed(argData / 10000, argNum) + 'w'\r\n  }\r\n}\r\n\r\n/**\r\n * object 转为 list，list item 具体是什么取决于传入的 getItem 函数\r\n * @param map\r\n * @param getItem\r\n * @return getItem()[]\r\n */\r\nexport function toList<V, K extends string, Item>(\r\n  map: Record<K, V>,\r\n  getItem: (key: K, value: V) => Item\r\n) {\r\n  const list = [] as Item[]\r\n  Object.keys(map).forEach((key: any) => {\r\n    // @ts-ignore, trust me.\r\n    const item = getItem(key, map[key])\r\n    list.push(item)\r\n  })\r\n  return list\r\n}\r\n\r\n/**\r\n * 描述\r\n * @function\r\n * @description 数据中间加星号\r\n * @param {string|number} argData 要处理的数据\r\n * @param {number} argStart=3 前端显示多少位\r\n * @param {number} argEnd=4 后面显示多少位\r\n * @returns {string} 返回处理好的数据\r\n */\r\nexport const hideInfo = (\r\n  argData: string | number = '',\r\n  argStart: number = 3,\r\n  argEnd: number = 4\r\n): string => {\r\n  argData = String(argData)\r\n  let temLen = argData.length\r\n  let temSL = argData.length - argEnd - argStart\r\n  let start = ''\r\n  if (temSL > 0) {\r\n    for (let i = 0; i < temSL; i++) {\r\n      start += '*'\r\n    }\r\n    argData =\r\n      argData.substring(0, argStart) +\r\n      start +\r\n      argData.substring(temLen - argEnd, temLen)\r\n  }\r\n  return argData\r\n}\r\n\r\n/**\r\n * 描述\r\n * @function\r\n * @description 10进制转62进制,用于短网址转换\r\n * @date 2020-03-01\r\n * @param {number|string} argData 要处理的数据\r\n * @returns {string} 返回处理好的数据\r\n */\r\nexport const string10to62 = (argData: number | string): string => {\r\n  let chars =\r\n    '0123456789abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ'.split('')\r\n  let radix = chars.length\r\n  let data = +argData\r\n  let arr = []\r\n  do {\r\n    let mod = data % radix\r\n    data = (data - mod) / radix\r\n    arr.unshift(chars[mod])\r\n  } while (data)\r\n  return arr.join('')\r\n}\r\n\r\n/**\r\n * 描述\r\n * @function\r\n * @description 62进制转10进制,用于短网址转换\r\n * @date 2020-03-01\r\n * @param {string} argData 要处理的数据\r\n * @returns {number} 返回处理好的数据\r\n */\r\nexport const string62to10 = (argData: string): number => {\r\n  let chars = '0123456789abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ'\r\n  let radix = chars.length\r\n  let len = argData.length\r\n  let i = 0\r\n  let resNum = 0\r\n  while (i < len) {\r\n    resNum +=\r\n      Math.pow(radix, i++) * chars.indexOf(argData.charAt(len - i) || '0')\r\n  }\r\n  return resNum\r\n}\r\n\r\n/**\r\n * 描述\r\n * @function\r\n * @description toFixed处理\r\n * @date 2020-03-01\r\n * @param {string|number} argData 要处理的数据\r\n * @param {number} argNum 要保留位数,默认返回2位小数\r\n * @param {string} argType 返回类型，round:默认四舍五入,floor:向下取整,ceil:向上取整,abs:绝对值\r\n * @returns {string} 返回处理好的数据\r\n */\r\nexport const toFixed = (\r\n  argData: string | number,\r\n  argNum: number = 2,\r\n  argType: 'round' | 'floor' | 'ceil' | 'abs' = 'round'\r\n): string => {\r\n  if (isNaN(+argData)) {\r\n    return ''\r\n  }\r\n  const data =\r\n    Math[argType](+argData * Math.pow(10, argNum)) / Math.pow(10, argNum)\r\n  return data.toFixed(argNum)\r\n}\r\n\r\n/**\r\n * @function\r\n * @description 将驼峰字符串转换为下划线字符串\r\n * @param {string} argData 要转换的字符串\r\n * @param {string} argUnit 要转换的字符，默认为“_”\r\n * @return {string} 转换后的下划线字符串\r\n */\r\nexport const toLine = (argData: string, argUnit: string = '_'): string => {\r\n  return argData.replace(/([A-Z])/g, argUnit + '$1').toLowerCase()\r\n}\r\n\r\n/**\r\n * @function\r\n * @description 将下划线字符串转换为驼峰字符串\r\n * @param {string} argData 要转换的字符串\r\n * @param {string} argUnit 要转换的字符，默认为“_”\r\n * @return {string} 转换后的驼峰字符串\r\n */\r\nexport const toHump = (argData: string, argUnit: string = '_'): string => {\r\n  return argData.replace(\r\n    new RegExp('\\\\' + argUnit + '(\\\\w)', 'g'),\r\n    (_, letter) => {\r\n      return letter.toUpperCase()\r\n    }\r\n  )\r\n}\r\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"2265","url":"/home/runner/work/utils/utils/src/transform.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9315,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":9312,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":16}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":16}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":15}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"decodeHtml","ranges":[{"startOffset":931,"endOffset":947,"count":1}],"isBlockCoverage":true},{"functionName":"encodeHtml","ranges":[{"startOffset":963,"endOffset":979,"count":1}],"isBlockCoverage":true},{"functionName":"formatNumber","ranges":[{"startOffset":997,"endOffset":1015,"count":1}],"isBlockCoverage":true},{"functionName":"formatSize","ranges":[{"startOffset":1031,"endOffset":1047,"count":1}],"isBlockCoverage":true},{"functionName":"formatTime","ranges":[{"startOffset":1063,"endOffset":1079,"count":1}],"isBlockCoverage":true},{"functionName":"friendlyTime","ranges":[{"startOffset":1097,"endOffset":1115,"count":1}],"isBlockCoverage":true},{"functionName":"hideInfo","ranges":[{"startOffset":1129,"endOffset":1143,"count":1}],"isBlockCoverage":true},{"functionName":"px2vw","ranges":[{"startOffset":1154,"endOffset":1165,"count":1}],"isBlockCoverage":true},{"functionName":"rmbPrice","ranges":[{"startOffset":1179,"endOffset":1193,"count":1}],"isBlockCoverage":true},{"functionName":"secondToTime","ranges":[{"startOffset":1211,"endOffset":1229,"count":1}],"isBlockCoverage":true},{"functionName":"string10to62","ranges":[{"startOffset":1247,"endOffset":1265,"count":1}],"isBlockCoverage":true},{"functionName":"string62to10","ranges":[{"startOffset":1283,"endOffset":1301,"count":1}],"isBlockCoverage":true},{"functionName":"toFixed","ranges":[{"startOffset":1314,"endOffset":1327,"count":1}],"isBlockCoverage":true},{"functionName":"toHump","ranges":[{"startOffset":1339,"endOffset":1351,"count":1}],"isBlockCoverage":true},{"functionName":"toLine","ranges":[{"startOffset":1363,"endOffset":1375,"count":1}],"isBlockCoverage":true},{"functionName":"toList","ranges":[{"startOffset":1387,"endOffset":1399,"count":0}],"isBlockCoverage":false},{"functionName":"encodeHtml","ranges":[{"startOffset":1506,"endOffset":1833,"count":2},{"startOffset":1536,"endOffset":1559,"count":1},{"startOffset":1561,"endOffset":1832,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1778,"endOffset":1829,"count":8}],"isBlockCoverage":true},{"functionName":"decodeHtml","ranges":[{"startOffset":1854,"endOffset":2092,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2022,"endOffset":2088,"count":8},{"startOffset":2075,"endOffset":2083,"count":0}],"isBlockCoverage":true},{"functionName":"rmbPrice","ranges":[{"startOffset":2111,"endOffset":2467,"count":3},{"startOffset":2241,"endOffset":2310,"count":2},{"startOffset":2260,"endOffset":2276,"count":0},{"startOffset":2278,"endOffset":2306,"count":0},{"startOffset":2310,"endOffset":2340,"count":1},{"startOffset":2340,"endOffset":2390,"count":2},{"startOffset":2390,"endOffset":2437,"count":1},{"startOffset":2437,"endOffset":2466,"count":2}],"isBlockCoverage":true},{"functionName":"formatTime","ranges":[{"startOffset":2488,"endOffset":3978,"count":11},{"startOffset":2570,"endOffset":2583,"count":2},{"startOffset":2585,"endOffset":2611,"count":1},{"startOffset":2611,"endOffset":2632,"count":10},{"startOffset":2632,"endOffset":2658,"count":0},{"startOffset":2658,"endOffset":2691,"count":10},{"startOffset":2691,"endOffset":2768,"count":6},{"startOffset":2732,"endOffset":2764,"count":1},{"startOffset":2768,"endOffset":2908,"count":10},{"startOffset":2908,"endOffset":2912,"count":5},{"startOffset":2913,"endOffset":2935,"count":5},{"startOffset":3292,"endOffset":3457,"count":10},{"startOffset":3457,"endOffset":3671,"count":2},{"startOffset":3578,"endOffset":3595,"count":1},{"startOffset":3671,"endOffset":3696,"count":10},{"startOffset":3696,"endOffset":3962,"count":80},{"startOffset":3773,"endOffset":3958,"count":19},{"startOffset":3854,"endOffset":3876,"count":1},{"startOffset":3877,"endOffset":3943,"count":18},{"startOffset":3962,"endOffset":3977,"count":10}],"isBlockCoverage":true},{"functionName":"friendlyTime","ranges":[{"startOffset":4001,"endOffset":5237,"count":12},{"startOffset":4083,"endOffset":4096,"count":2},{"startOffset":4098,"endOffset":4124,"count":1},{"startOffset":4124,"endOffset":4145,"count":11},{"startOffset":4145,"endOffset":4171,"count":0},{"startOffset":4171,"endOffset":4203,"count":11},{"startOffset":4203,"endOffset":4230,"count":0},{"startOffset":4232,"endOffset":4553,"count":11},{"startOffset":4273,"endOffset":4318,"count":1},{"startOffset":4575,"endOffset":4664,"count":0},{"startOffset":4664,"endOffset":4700,"count":11},{"startOffset":4701,"endOffset":4718,"count":11},{"startOffset":4720,"endOffset":4759,"count":1},{"startOffset":4759,"endOffset":4784,"count":10},{"startOffset":4784,"endOffset":5024,"count":6},{"startOffset":4798,"endOffset":4815,"count":2},{"startOffset":4816,"endOffset":4854,"count":4},{"startOffset":4830,"endOffset":4854,"count":1},{"startOffset":4855,"endOffset":4917,"count":3},{"startOffset":4870,"endOffset":4917,"count":1},{"startOffset":4918,"endOffset":4957,"count":2},{"startOffset":4933,"endOffset":4957,"count":1},{"startOffset":4958,"endOffset":5023,"count":1},{"startOffset":5025,"endOffset":5059,"count":4},{"startOffset":5042,"endOffset":5059,"count":1},{"startOffset":5060,"endOffset":5102,"count":3},{"startOffset":5075,"endOffset":5102,"count":1},{"startOffset":5103,"endOffset":5161,"count":2},{"startOffset":5119,"endOffset":5161,"count":1},{"startOffset":5162,"endOffset":5222,"count":1}],"isBlockCoverage":true},{"functionName":"px2vw","ranges":[{"startOffset":5253,"endOffset":5370,"count":4}],"isBlockCoverage":true},{"functionName":"secondToTime","ranges":[{"startOffset":5393,"endOffset":6813,"count":9},{"startOffset":6044,"endOffset":6052,"count":0},{"startOffset":6071,"endOffset":6134,"count":8},{"startOffset":6188,"endOffset":6613,"count":44},{"startOffset":6249,"endOffset":6445,"count":9},{"startOffset":6326,"endOffset":6368,"count":7},{"startOffset":6445,"endOffset":6554,"count":35},{"startOffset":6554,"endOffset":6586,"count":23},{"startOffset":6586,"endOffset":6613,"count":35}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6666,"endOffset":6790,"count":44},{"startOffset":6690,"endOffset":6699,"count":21},{"startOffset":6701,"endOffset":6708,"count":17},{"startOffset":6708,"endOffset":6786,"count":27}],"isBlockCoverage":true},{"functionName":"formatSize","ranges":[{"startOffset":6834,"endOffset":7291,"count":7},{"startOffset":6965,"endOffset":7003,"count":0},{"startOffset":7106,"endOffset":7236,"count":17},{"startOffset":7181,"endOffset":7232,"count":7}],"isBlockCoverage":true},{"functionName":"formatNumber","ranges":[{"startOffset":7314,"endOffset":7541,"count":6},{"startOffset":7362,"endOffset":7398,"count":1},{"startOffset":7398,"endOffset":7539,"count":5},{"startOffset":7423,"endOffset":7478,"count":3},{"startOffset":7478,"endOffset":7539,"count":2}],"isBlockCoverage":true},{"functionName":"toList","ranges":[{"startOffset":7543,"endOffset":7716,"count":0}],"isBlockCoverage":false},{"functionName":"hideInfo","ranges":[{"startOffset":7734,"endOffset":8113,"count":5},{"startOffset":7925,"endOffset":8093,"count":3},{"startOffset":7963,"endOffset":7990,"count":6}],"isBlockCoverage":true},{"functionName":"string10to62","ranges":[{"startOffset":8136,"endOffset":8447,"count":1},{"startOffset":8313,"endOffset":8408,"count":2}],"isBlockCoverage":true},{"functionName":"string62to10","ranges":[{"startOffset":8470,"endOffset":8778,"count":1},{"startOffset":8670,"endOffset":8759,"count":2},{"startOffset":8747,"endOffset":8753,"count":0}],"isBlockCoverage":true},{"functionName":"toFixed","ranges":[{"startOffset":8796,"endOffset":9004,"count":29},{"startOffset":8865,"endOffset":8885,"count":2},{"startOffset":8885,"endOffset":9003,"count":27}],"isBlockCoverage":true},{"functionName":"toLine","ranges":[{"startOffset":9021,"endOffset":9120,"count":2}],"isBlockCoverage":true},{"functionName":"toHump","ranges":[{"startOffset":9137,"endOffset":9308,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9244,"endOffset":9301,"count":2}],"isBlockCoverage":true}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  deepCopy: () => deepCopy,\n  delCookie: () => delCookie,\n  getCookie: () => getCookie,\n  getEnv: () => getEnv,\n  getInfo: () => getInfo,\n  getNetworkStatus: () => getNetworkStatus,\n  getObj: () => getObj,\n  getRandomColor: () => getRandomColor,\n  getRegexp: () => getRegexp,\n  getStorage: () => getStorage,\n  getUrlParam: () => getUrlParam,\n  getUrlParamObj: () => getUrlParamObj,\n  getUuid: () => getUuid,\n  randomInt: () => randomInt,\n  remInit: () => remInit,\n  replaceUrlParam: () => replaceUrlParam,\n  safe: () => safe,\n  safeData: () => safeData,\n  setCookie: () => setCookie,\n  setEnv: () => setEnv,\n  setLog: () => setLog,\n  setObj: () => setObj,\n  setStorage: () => setStorage,\n  setTitle: () => setTitle,\n  setUrlParams: () => setUrlParams,\n  sleep: () => sleep\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar import_is = require(\"./is\");\nlet isOnline = true;\nlet ENV = {};\nlet DATA_OBJECT = {};\nif (globalThis && globalThis.addEventListener) {\n  globalThis.addEventListener(\"offline\", function() {\n    console.debug(\"offLine\");\n    isOnline = false;\n  });\n  globalThis.addEventListener(\"online\", function() {\n    console.debug(\"onLine\");\n    isOnline = true;\n  });\n}\nconst getNetworkStatus = () => {\n  return isOnline;\n};\nconst getRegexp = () => {\n  return {\n    html: /<[^>]+>/gim,\n    password: /^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[\\W_]).{8,16}$/,\n    idCard: /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/,\n    idCardNormal: /^[0-9]\\d+([0-9]|X|x)*$/,\n    phone: /^1\\d{10}$/,\n    email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n    http: /http:\\/\\/|https:\\/\\//,\n    score: /^[1-9]\\d*|0$/,\n    int: /^[1-9]\\d*$/,\n    number: /^\\d*$/,\n    float1: /^(([1-9]\\d*)|0|(0.\\d{0,1})|([1-9]\\d*.\\d{0,1}))$/,\n    float2: /^(([1-9]\\d*)|0|(0.\\d{0,2})|([1-9]\\d*.\\d{0,2}))$/,\n    float3: /^(([1-9]\\d*)|0|(0.\\d{0,3})|([1-9]\\d*.\\d{0,3}))$/,\n    letterNumber: /^[a-zA-Z0-9]*$/,\n    letter: /^[a-zA-Z]*$/,\n    account: /^[a-zA-Z0-9_\\-\\u4e00-\\u9fa5]{1,50}$/,\n    realName: /^([\\u4e00-\\u9fa5]{1,50}|[\\u4e00-\\u9fa5]{1,25}[\\s][\\u4e00-\\u9fa5]{1,24}|[a-zA-Z_\\-.]{1,50}|[a-zA-Z_\\-.]{1,25}[\\s][a-zA-Z_\\-.]{1,24})$/,\n    cn: /^[\\u4e00-\\u9fa5]*$/,\n    ascii: /^[\\x20-\\x7E]+$/\n  };\n};\nconst setTitle = (argTitle) => {\n  if (typeof globalThis.document === \"object\") {\n    globalThis.document.title = String(argTitle);\n  }\n  if (getInfo().isAppleMobile) {\n    const i = document.createElement(\"iframe\");\n    i.onload = () => {\n      setTimeout(() => {\n        console.debug(\"apple mobile setting title\");\n        i.remove();\n      }, 10);\n    };\n    globalThis.document.body.appendChild(i);\n  }\n};\nconst remInit = (argBaseSize = 16, argWidth = 375) => {\n  const setRem = () => {\n    const scale = safeData(globalThis, \"document.documentElement.clientWidth\", argWidth) / argWidth;\n    safeData(\n      globalThis,\n      \"document.documentElement.style.fontSize\",\n      argBaseSize * scale + \"px\",\n      true\n    );\n  };\n  setRem();\n  globalThis.onresize = () => {\n    setRem();\n  };\n};\nconst getCookie = (argName) => {\n  const cookies = globalThis.document.cookie.split(\"; \");\n  const cookie = cookies.find((cookie2) => {\n    const [name] = cookie2.split(\"=\");\n    return argName === name;\n  });\n  return cookie ? decodeURIComponent(cookie.split(\"=\")[1] || \"\") : \"\";\n};\nconst setCookie = (argName, argValue = \"\", argTime = 24) => {\n  let now = new Date();\n  let offset = 8;\n  let utc = now.getTime() + now.getTimezoneOffset() * 6e4;\n  let nd = utc + 36e5 * offset;\n  let exp = new Date(nd);\n  let domain = globalThis.document.domain;\n  exp.setTime(exp.getTime() + argTime * 60 * 60 * 1e3);\n  globalThis.document.cookie = argName + \"=\" + encodeURIComponent(argValue) + \";path=/;expires=\" + exp.toUTCString() + \";domain=\" + domain + \";\";\n};\nconst delCookie = (argName = \"\") => {\n  setCookie(argName, \"\", -1);\n};\nconst getInfo = () => {\n  let ua = safeData(globalThis, \"navigator.userAgent\", \"\").toLowerCase();\n  let platform = safeData(\n    globalThis,\n    \"navigator.userAgentData.platform\",\n    \"\"\n  ).toLowerCase();\n  let info = {\n    ua,\n    platform,\n    isMobile: !!ua.match(/mobile/),\n    isWin: !!platform.match(\"win\"),\n    isIphone: !!ua.match(/iphone/),\n    isIpad: !!ua.match(/ipad/),\n    isMac: !!platform.match(\"mac\"),\n    isIos: !!platform.match(\"ios\"),\n    isAndroid: !!platform.match(\"android\"),\n    isSafari: ua.indexOf(\"safari\") > -1 && ua.indexOf(\"chrome\") < 1,\n    isIE: \"ActiveXObject\" in globalThis,\n    ieVersion: 0,\n    isAppleMobile: false,\n    isWeixin: !!ua.match(/MicroMessenger/i),\n    isAlipay: !!ua.match(/Alipay/i)\n  };\n  if (info.ua.match(\"msie\")) {\n    let IE = info.ua.match(/msie\\s([0-9]*)/);\n    if (IE && IE.length >= 2) {\n      info.ieVersion = +IE[1];\n    }\n  }\n  info.isAppleMobile = !!(info.isMobile && ua.toLowerCase().indexOf(\"applewebkit\") && ua.indexOf(\"chrome\") < 1);\n  return info;\n};\nconst getRandomColor = function() {\n  return \"#\" + (\"00000\" + (Math.random() * 16777216 << 0).toString(16)).substring(-6);\n};\nconst getStorage = (argKey, argNoJson) => {\n  let res = globalThis.localStorage.getItem(argKey);\n  if (!argNoJson && (0, import_is.isJson)(res) && res) {\n    res = JSON.parse(res);\n  }\n  return res || \"\";\n};\nconst setStorage = (argKey, argData) => {\n  if (typeof argData === \"object\") {\n    argData = JSON.stringify(argData);\n  }\n  globalThis.localStorage.setItem(argKey, String(argData));\n  return String(argData);\n};\nconst sleep = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\nconst safe = function safe2(argData, argCheck, argValue, argSetValueForce) {\n  if (!argData) {\n    return argValue;\n  }\n  if (typeof argCheck !== \"string\" && typeof argCheck !== \"number\") {\n    console.warn(\"argCheck\\u8BF7\\u4F20\\u5165string\\u5F53\\u524D\\u4E3A:\" + argCheck);\n    return \"\";\n  }\n  const temKey = argCheck.toString().split(\".\");\n  const temLen = temKey.length;\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== \"object\") {\n        if (argSetValueForce) {\n          console.warn(\"safeData setValue err\\uFF1A\", argData, \"index:\", i);\n        }\n        return argValue;\n      }\n      argData = argData[temKey[i]] || {};\n    }\n  }\n  if (argSetValueForce) {\n    ;\n    argData[temKey[temLen - 1]] = argValue;\n  }\n  if (typeof argValue === \"undefined\") {\n    return argData[temKey[temLen - 1]];\n  } else {\n    return argData[temKey[temLen - 1]] || argValue;\n  }\n};\nconst safeData = (argData, argCheck, argValue, argSetValueForce) => {\n  if (typeof argCheck !== \"string\" && typeof argCheck !== \"number\") {\n    console.warn(\"argCheck\\u8BF7\\u4F20\\u5165string\\u5F53\\u524D\\u4E3A:\" + argCheck);\n    return \"\";\n  }\n  const temKey = argCheck.toString().split(\".\");\n  const temLen = temKey.length;\n  if (!argData) {\n    return argValue;\n  }\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== \"object\") {\n        if (argSetValueForce) {\n          console.warn(\"safeData setValue err\\uFF1A\", argData, \"index:\", i);\n        }\n        return argValue;\n      }\n      argData = argData[temKey[i]] || {};\n    }\n  }\n  if (argSetValueForce) {\n    argData[temKey[temLen - 1]] = argValue;\n  }\n  if (typeof argValue === \"undefined\") {\n    return argData[temKey[temLen - 1]];\n  } else {\n    return argData[temKey[temLen - 1]] || argValue;\n  }\n};\nconst setUrlParams = (argParams, noMark) => {\n  let re = \"\";\n  if (!noMark) {\n    re = \"?\";\n  }\n  let paramsList = Object.keys(argParams);\n  let temLength = paramsList.length;\n  if (!temLength) {\n    return \"\";\n  }\n  paramsList.map((v, k) => {\n    re += v + \"=\" + argParams[v];\n    if (k < temLength - 1) {\n      re += \"&\";\n    }\n  });\n  return re;\n};\nconst getUrlParam = (argName, argUrl = globalThis.location.search || \"\") => {\n  let result = argUrl.match(new RegExp(\"[?&]\" + argName + \"=([^&]+)\", \"i\"));\n  if (!result) {\n    return \"\";\n  }\n  return decodeURIComponent(result[1]);\n};\nconst getUrlParamObj = (argData = globalThis.location.search || globalThis.location.hash) => {\n  const res = {};\n  try {\n    argData.slice(argData.indexOf(\"?\") + 1).split(\"&\").forEach((v) => {\n      const [key, val] = v.split(\"=\");\n      if (key !== v) {\n        res[key] = decodeURIComponent(val);\n      }\n    });\n    return res;\n  } catch (e) {\n    console.error(\"\\u8F6C\\u6362\\u5931\\u8D25\", e);\n    return res;\n  }\n};\nconst replaceUrlParam = (name, value, url = globalThis.location.href || \"\") => {\n  const reg = new RegExp(\"([?]|&)(\" + name + \"=)([^&#]*)([&]?|$)\", \"img\");\n  const r = url.match(reg);\n  const search = url.split(\"?\");\n  let strValue = url;\n  if (value === void 0 || value === null) {\n    if (r != null) {\n      strValue = url.replace(reg, (_match, p1, _p2, _p3, p4) => {\n        if (!p4 || !p4.length) {\n          return \"\";\n        } else if (p1 === p4) {\n          return p1;\n        }\n        return p1 + p4;\n      });\n      strValue = strValue.replace(\"?&\", \"?\");\n    }\n  } else if (r != null) {\n    strValue = url.replace(reg, `$1$2${value}$4`);\n  } else if (search.length > 1) {\n    const sub = search[1].split(\"#\");\n    if (sub.length > 1) {\n      if (sub[1].length) {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}#${sub[1]}`;\n      } else {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}${sub[1]}`;\n      }\n    } else {\n      strValue = `${search[0]}?${search[1]}&${name}=${value}`;\n    }\n  } else {\n    const sub = url.split(\"#\");\n    if (sub.length > 1) {\n      strValue = `${sub[0]}?${name}=${value}#${sub[1]}`;\n    } else {\n      strValue = `${url}?${name}=${value}`;\n    }\n  }\n  return strValue;\n};\nconst getUuid = () => {\n  const S4 = () => ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);\n  return S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + Date.now();\n};\nconst randomInt = (min = 0, max = 100) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst setEnv = (env) => {\n  ENV = env;\n};\nconst getEnv = (key) => {\n  return safeData(ENV, key, \"\");\n};\nconst setObj = (key, data) => {\n  if (!key) {\n    DATA_OBJECT = data;\n  } else {\n    DATA_OBJECT[key] = data;\n  }\n  return DATA_OBJECT;\n};\nconst getObj = (key, argData, isDeepCopy) => {\n  let res = safeData(DATA_OBJECT, key, {});\n  if (argData) {\n    res = Object.assign(res, argData);\n  }\n  if (!isDeepCopy) {\n    return res;\n  } else {\n    return JSON.parse(JSON.stringify(res));\n  }\n};\nconst setLog = (logLevel, logConfig) => {\n  logLevel = logLevel || getEnv(\"VUE_APP_LOG_LEVEL\") || 4;\n  const logList = [\"log\", \"info\", \"warn\", \"error\"];\n  const log = {};\n  logList.forEach((v) => {\n    log[v] = console[v];\n  });\n  for (let key in logConfig) {\n    if (console[key]) {\n      ;\n      console[key] = (...arg) => {\n        var _a, _b;\n        ;\n        log[key](...arg, (_a = Error().stack) == null ? void 0 : _a.split(\"\\n\")[2]);\n        logConfig[key] && logConfig[key](...arg, (_b = Error().stack) == null ? void 0 : _b.split(\"\\n\")[2]);\n      };\n    }\n  }\n  switch (+logLevel) {\n    case 1:\n      console.warn = () => {\n      };\n    case 2:\n      console.info = () => {\n      };\n    case 3:\n      console.log = () => {\n      };\n    case 4:\n      console.debug = () => {\n      };\n    default:\n      break;\n  }\n};\nconst deepCopy = (obj) => {\n  if (typeof obj !== \"object\" || obj === null) {\n    return obj;\n  }\n  let copy = Array.isArray(obj) ? [] : {};\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ;\n      copy[key] = deepCopy(obj[key]);\n    }\n  }\n  return copy;\n};\n","originalCode":"/**\n * @module index\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 公共函数，使用'lj-utils'引入\n */\n\nimport { isJson } from './is'\nimport { Info, AnyObject, Bool } from './types'\n\nlet isOnline: boolean = true\nlet ENV: AnyObject = {}\nlet DATA_OBJECT: AnyObject = {}\n// 断网监听\nif (globalThis && globalThis.addEventListener) {\n  // #ifdef H5\n  globalThis.addEventListener('offline', function () {\n    console.debug('offLine')\n    isOnline = false\n  })\n  globalThis.addEventListener('online', function () {\n    console.debug('onLine')\n    isOnline = true\n  })\n  // #endif\n}\n\n/**\n * @function\n * @description 获取当前网络状态（H5）\n * @return boolean\n */\nexport const getNetworkStatus = () => {\n  return isOnline\n}\n\n/**\n * @function\n * @description 正则收集\n * @returns {object}\n */\nexport const getRegexp = (): AnyObject => {\n  return {\n    // 匹配html标签，提取html文字： htmlCode.replace(reg.html,'')\n    html: /<[^>]+>/gim,\n    // 至少1数字1字母1字符，8-16位\n    password: /^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[\\W_]).{8,16}$/,\n    // 普通身份证号正则，isIdCard更为严格\n    idCard: /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/,\n    // 简易身份证号 数字+x\n    idCardNormal: /^[0-9]\\d+([0-9]|X|x)*$/,\n    // 手机号\n    phone: /^1\\d{10}$/,\n    // 邮箱\n    email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n    // 网址\n    http: /http:\\/\\/|https:\\/\\//,\n    // 含0整数（得分）\n    score: /^[1-9]\\d*|0$/,\n    // 整数\n    int: /^[1-9]\\d*$/,\n    // 匹配数字\n    number: /^\\d*$/,\n    // >=0||1位小数\n    float1: /^(([1-9]\\d*)|0|(0.\\d{0,1})|([1-9]\\d*.\\d{0,1}))$/,\n    // >=0||2位小数\n    float2: /^(([1-9]\\d*)|0|(0.\\d{0,2})|([1-9]\\d*.\\d{0,2}))$/,\n    // >=0||3位小数\n    float3: /^(([1-9]\\d*)|0|(0.\\d{0,3})|([1-9]\\d*.\\d{0,3}))$/,\n    // 字母+数字组合\n    letterNumber: /^[a-zA-Z0-9]*$/,\n    // 字母\n    letter: /^[a-zA-Z]*$/,\n    // 帐号50个字内：大小写+数字+中文+'_'+'-'\n    account: /^[a-zA-Z0-9_\\-\\u4e00-\\u9fa5]{1,50}$/,\n    // 中英文姓名 50个字内/中文 中文/英文-. 英文-./\n    realName:\n      /^([\\u4e00-\\u9fa5]{1,50}|[\\u4e00-\\u9fa5]{1,25}[\\s][\\u4e00-\\u9fa5]{1,24}|[a-zA-Z_\\-.]{1,50}|[a-zA-Z_\\-.]{1,25}[\\s][a-zA-Z_\\-.]{1,24})$/,\n    // 匹配中文\n    cn: /^[\\u4e00-\\u9fa5]*$/,\n    // 匹配ASCII,非中文之外的字符（全角字符）\n    ascii: /^[\\x20-\\x7E]+$/,\n  }\n}\n\n/**\n * @function\n * @description 设置标题\n * @param  {string} argTitle 标题\n */\nexport const setTitle = (argTitle: string | number) => {\n  if (typeof globalThis.document === 'object') {\n    globalThis.document.title = String(argTitle)\n  }\n  if (getInfo().isAppleMobile) {\n    const i = document.createElement('iframe')\n    i.onload = () => {\n      setTimeout(() => {\n        console.debug('apple mobile setting title')\n        i.remove()\n      }, 10)\n    }\n    globalThis.document.body.appendChild(i)\n  }\n}\n\n/**\n * @function\n * @description 使用postcss-px2rem时使用\n * @param {number} argBaseSize 基础大小 16px（要跟配置一致）\n * @param {number} argWidth 基准宽度\n */\nexport const remInit = (argBaseSize: number = 16, argWidth: number = 375) => {\n  // 设置 rem 函数\n  const setRem = () => {\n    // 当前页面宽度相对于 argWidth 宽的缩放比例，可根据自己需要修改。\n    const scale =\n      safeData(globalThis, 'document.documentElement.clientWidth', argWidth) /\n      argWidth\n    // 设置页面根节点字体大小\n    safeData(\n      globalThis,\n      'document.documentElement.style.fontSize',\n      argBaseSize * scale + 'px',\n      true\n    )\n  }\n  // 初始化\n  setRem()\n  // 改变窗口大小时重新设置 rem\n  globalThis.onresize = () => {\n    setRem()\n  }\n}\n\n/**\n * @function\n * @description 获取cookie\n * @param  {string} argName 要获取的值\n * @returns {string}\n */\nexport const getCookie = (argName: string): string => {\n  const cookies = globalThis.document.cookie.split('; ')\n  const cookie = cookies.find((cookie) => {\n    const [name] = cookie.split('=')\n    return argName === name\n  })\n  return cookie ? decodeURIComponent(cookie.split('=')[1] || '') : ''\n}\n\n/**\n * @function\n * @description 设置cookie\n * @param  {string} argName 要设置的key\n * @param  {string} argValue 要设置的value\n * @param  {number} argTime 过期时间/时 默认24小时\n */\nexport const setCookie = (\n  argName: string,\n  argValue: string | number | boolean = '',\n  argTime: number = 24\n) => {\n  let now = new Date()\n  let offset = 8\n  let utc = now.getTime() + now.getTimezoneOffset() * 60000\n  let nd = utc + 3600000 * offset\n  let exp = new Date(nd)\n  let domain = globalThis.document.domain\n  exp.setTime(exp.getTime() + argTime * 60 * 60 * 1000)\n  globalThis.document.cookie =\n    argName +\n    '=' +\n    encodeURIComponent(argValue) +\n    ';path=/;expires=' +\n    exp.toUTCString() +\n    ';domain=' +\n    domain +\n    ';'\n}\n\n/**\n * @function\n * @description 清除cookie\n * @param  {string} argName 要清除的值\n */\nexport const delCookie = (argName: string = '') => {\n  setCookie(argName, '', -1)\n}\n\n/**\n * @function\n * @description 检测浏览器状态，系统状态 *\n * @returns {Info} {\n * ua: ua,\n * platform: 平台,\n * isMobile: 移动端,\n * isWin: winPC端,\n * isIphone: iphone,\n * isIpad: ipad,\n * isMac: mac,\n * isAppleMobile: 苹果移动端webview\n * isSafari: Safari浏览器,\n * isIos: Ios平台,\n * isAndroid: android平台,\n * isIE: 显示8 9 10, true为11以上\n * ...\n * }\n */\nexport const getInfo = (): Info => {\n  let ua = safeData(globalThis, 'navigator.userAgent', '').toLowerCase()\n  let platform: string = safeData(\n    globalThis,\n    'navigator.userAgentData.platform',\n    ''\n  ).toLowerCase()\n  let info: Info = {\n    ua: ua,\n    platform: platform,\n    isMobile: !!ua.match(/mobile/),\n    isWin: !!platform.match('win'),\n    isIphone: !!ua.match(/iphone/),\n    isIpad: !!ua.match(/ipad/),\n    isMac: !!platform.match('mac'),\n    isIos: !!platform.match('ios'),\n    isAndroid: !!platform.match('android'),\n    isSafari: ua.indexOf('safari') > -1 && ua.indexOf('chrome') < 1,\n    isIE: 'ActiveXObject' in globalThis,\n    ieVersion: 0,\n    isAppleMobile: false,\n    isWeixin: !!ua.match(/MicroMessenger/i),\n    isAlipay: !!ua.match(/Alipay/i),\n  }\n  if (info.ua.match('msie')) {\n    let IE = info.ua.match(/msie\\s([0-9]*)/)\n    if (IE && IE.length >= 2) {\n      info.ieVersion = +IE[1]\n    }\n  }\n  info.isAppleMobile = !!(\n    info.isMobile &&\n    ua.toLowerCase().indexOf('applewebkit') &&\n    ua.indexOf('chrome') < 1\n  )\n  return info\n}\n\n/**\n * @function\n * @description 获取随机颜色\n * @return string\n */\nexport const getRandomColor = function () {\n  return (\n    '#' +\n    ('00000' + ((Math.random() * 0x1000000) << 0).toString(16)).substring(-6)\n  )\n}\n\n/**\n * @function\n * @description 获取storage的值，默认将json转为obj\n * @param {string} argKey 要获取的key\n * @param {string} argNoJson true时不自动转换JSON字符串\n * @returns {any} key对应的数据\n */\nexport const getStorage = (argKey: string, argNoJson?: string): any => {\n  let res = globalThis.localStorage.getItem(argKey)\n  // 默认转义JSON字符串\n  if (!argNoJson && isJson(res) && res) {\n    res = JSON.parse(res)\n  }\n  return res || ''\n}\n\n/**\n * @function\n * @description 设置storage的值，默认将obj转为json\n * @param {string} argKey 要获取的key\n * @param {unknown} argData 要保存的数据\n * @returns {string} 保存的数据String\n */\nexport const setStorage = (argKey: string, argData: unknown): string => {\n  if (typeof argData === 'object') {\n    argData = JSON.stringify(argData)\n  }\n  globalThis.localStorage.setItem(argKey, String(argData))\n  return String(argData)\n}\n\n/**\n * @function\n * @description setTimeout promise版\n * @param  {number} ms 时间，毫秒\n */\nexport const sleep = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n// 返回T下的key对应类型\ntype KeyOf<T extends Record<string, any>, K = keyof T> = K extends string\n  ? T[K] extends Function\n    ? never\n    : K\n  : never\ntype DotField<T extends Record<string, any>, K = KeyOf<T>> = K extends string\n  ? K | `${K}.${DotField<T[K]>}`\n  : never\n// 返回传入K或T[K]对应的类型\ntype ValueOf<\n  T extends Record<string, any>,\n  K\n> = K extends `${infer I}.${infer R}`\n  ? ValueOf<T[I], R>\n  : K extends string\n  ? T[K]\n  : never\n\n/**\n * @function\n * @description 数据安全访问\n * @param  {any} argData  [原始数据]\n * @param  {string} argCheck [要返回的数据，用'.'连接，数组用'.+数字表示']\n * @param  {any} argValue [如果数据有误，返回的值，选填]\n * @param  {boolean|0|1} argSetValueForce [是否强制赋值argValue]\n * @returns {any}\n */\nexport const safe = function safe<\n  T extends Record<string, any>,\n  K extends DotField<T>\n>(\n  argData: T,\n  argCheck: K,\n  argValue?: ValueOf<T, K>,\n  argSetValueForce?: Bool\n): ValueOf<T, K> | undefined | string {\n  if (!argData) {\n    return argValue\n  }\n  if (typeof argCheck !== 'string' && typeof argCheck !== 'number') {\n    console.warn('argCheck请传入string当前为:' + argCheck)\n    return ''\n  }\n  const temKey = argCheck.toString().split('.')\n  const temLen = temKey.length\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== 'object') {\n        if (argSetValueForce) {\n          console.warn('safeData setValue err：', argData, 'index:', i)\n        }\n        return argValue\n      }\n      argData = argData[temKey[i]] || {}\n    }\n  }\n  if (argSetValueForce) {\n    ;(argData as AnyObject)[temKey[temLen - 1]] = argValue\n  }\n  if (typeof argValue === 'undefined') {\n    return argData[temKey[temLen - 1]]\n  } else {\n    return argData[temKey[temLen - 1]] || argValue\n  }\n}\n/**\n * @function\n * @description 数据安全访问\n * @param  {any} argData  [原始数据]\n * @param  {string} argCheck [要返回的数据，用'.'连接，数组用'.+数字表示']\n * @param  {any} argValue [如果数据有误，返回的值，选填]\n * @param  {boolean|0|1} argSetValueForce [是否强制赋值argValue]\n * @returns {any}\n */\nexport const safeData = (\n  argData: any,\n  argCheck: string,\n  argValue?: any,\n  argSetValueForce?: Bool\n): any => {\n  if (typeof argCheck !== 'string' && typeof argCheck !== 'number') {\n    console.warn('argCheck请传入string当前为:' + argCheck)\n    return ''\n  }\n  const temKey = argCheck.toString().split('.')\n  const temLen = temKey.length\n  if (!argData) {\n    return argValue\n  }\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== 'object') {\n        if (argSetValueForce) {\n          console.warn('safeData setValue err：', argData, 'index:', i)\n        }\n        return argValue\n      }\n      argData = argData[temKey[i]] || {}\n    }\n  }\n  if (argSetValueForce) {\n    argData[temKey[temLen - 1]] = argValue\n  }\n  if (typeof argValue === 'undefined') {\n    return argData[temKey[temLen - 1]]\n  } else {\n    return argData[temKey[temLen - 1]] || argValue\n  }\n}\n\n/**\n * @description obj转url参数\n * @function\n * @param {any} argParams 参数对象\n * @param {boolean?} noMark 默认带?,true时,不带\n * @returns {string}\n */\nexport const setUrlParams = (argParams: any, noMark?: boolean): string => {\n  let re = ''\n  if (!noMark) {\n    re = '?'\n  }\n  let paramsList = Object.keys(argParams)\n  let temLength = paramsList.length\n  if (!temLength) {\n    return ''\n  }\n  paramsList.map((v, k) => {\n    re += v + '=' + argParams[v]\n    if (k < temLength - 1) {\n      re += '&'\n    }\n  })\n  return re\n}\n\n/**\n * @description 获取url参数\n * @function\n * @param {string} argName 要获取的key\n * @param {string} argUrl url数据\n * @returns {string}\n */\nexport const getUrlParam = (\n  argName: string,\n  argUrl: string = globalThis.location.search || ''\n): string => {\n  let result = argUrl.match(new RegExp('[?&]' + argName + '=([^&]+)', 'i'))\n  if (!result) {\n    return ''\n  }\n  return decodeURIComponent(result[1])\n}\n\n/**\n * @description 获取所有url参数，eg: a=1&b=2 to {a:1,b:2}\n * @function\n * @param {string} argData 要处理的数据\n * @returns {any}\n */\nexport const getUrlParamObj = (\n  argData: string = globalThis.location.search || globalThis.location.hash\n): AnyObject => {\n  const res: AnyObject = {}\n  try {\n    argData\n      .slice(argData.indexOf('?') + 1)\n      .split('&')\n      .forEach((v) => {\n        const [key, val] = v.split('=')\n        if (key !== v) {\n          res[key] = decodeURIComponent(val)\n        }\n      })\n    return res\n  } catch (e) {\n    console.error('转换失败', e)\n    return res\n  }\n  // let temObj = new URLSearchParams(argData)\n  // let resObj = {}\n  // for (const [key, value] of temObj) {\n  //   resObj[key] = value\n  // }\n  // return resObj\n}\n\n/**\n * @description 通过正则匹配修改当前页面的url中的参数\n * @function\n * @param  {string} name key\n * @param  {string | number| undefined | null} value 要替换的value\n * @param  {string} url 要替换的网址,默认location.href\n * @returns {string}\n */\nexport const replaceUrlParam = (\n  name: string,\n  value: string | number | undefined | null,\n  url: string = globalThis.location.href || ''\n): string => {\n  const reg = new RegExp('([?]|&)(' + name + '=)([^&#]*)([&]?|$)', 'img')\n  const r = url.match(reg)\n  const search = url.split('?')\n  let strValue: string = url\n  if (value === undefined || value === null) {\n    if (r != null) {\n      strValue = url.replace(reg, (_match, p1, _p2, _p3, p4) => {\n        if (!p4 || !p4.length) {\n          return ''\n        } else if (p1 === p4) {\n          return p1\n        }\n        return p1 + p4\n      })\n      strValue = strValue.replace('?&', '?')\n    }\n  } else if (r != null) {\n    strValue = url.replace(reg, `$1$2${value}$4`)\n  } else if (search.length > 1) {\n    const sub = search[1].split('#')\n    if (sub.length > 1) {\n      if (sub[1].length) {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}#${sub[1]}`\n      } else {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}${sub[1]}`\n      }\n    } else {\n      strValue = `${search[0]}?${search[1]}&${name}=${value}`\n    }\n  } else {\n    // 不存在?时,搜索hash\n    const sub = url.split('#')\n    if (sub.length > 1) {\n      strValue = `${sub[0]}?${name}=${value}#${sub[1]}`\n    } else {\n      strValue = `${url}?${name}=${value}`\n    }\n  }\n  return strValue\n}\n\n/**\n * @function\n * @description 获取简单uuid\n * @returns {string} uuid\n */\nexport const getUuid = (): string => {\n  const S4 = () =>\n    (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  return S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + Date.now()\n}\n\n/**\n * @function\n * @description 获取随机数,含最大值，含最小值\n * @param  {number} min 最小值\n * @param  {number} max 最大值\n * @returns {number}\n */\nexport const randomInt = (min: number = 0, max: number = 100): number => {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  // 含最大值，含最小值\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n/**\n * @function\n * @description 设置env参数，一般在main.js中调用\n * @param  {AnyObject} env 要设置的值\n */\nexport const setEnv = (env: AnyObject) => {\n  ENV = env\n}\n/**\n * @function\n * @description 获取env参数\n * @param  {string} key 要获取的值\n * @returns {string} 获取的值\n */\nexport const getEnv = (key: string): string => {\n  return safeData(ENV, key, '')\n}\n\n/**\n * @function\n * @description 设置object参数,可做运行时缓存\n * @param  {string} key 要设置的key\n * @param  {AnyObject} data 要设置的值\n * @returns {AnyObject}\n */\nexport const setObj = (key: string, data: AnyObject): AnyObject => {\n  if (!key) {\n    DATA_OBJECT = data\n  } else {\n    DATA_OBJECT[key] = data\n  }\n  return DATA_OBJECT\n}\n\n/**\n * @function\n * @description 获取object参数\n * @param  {string} key 要获取的值\n * @param  {string} argData 要合并的值\n * @param  {boolean} isDeepCopy 是否深拷贝\n * @returns {AnyObject} 获取的值\n */\nexport const getObj = (\n  key: string,\n  argData?: AnyObject,\n  isDeepCopy?: Bool\n): AnyObject => {\n  let res: AnyObject = safeData(DATA_OBJECT, key, {})\n  if (argData) {\n    res = Object.assign(res, argData)\n  }\n  if (!isDeepCopy) {\n    return res\n  } else {\n    return JSON.parse(JSON.stringify(res))\n  }\n}\n\n/**\n * @function\n * @description 设置日志输出logLevel 1 error 2 warn 3 info 4 log 5 debug\n * @param {AnyObject} logConfig 重写配置\n * @param {function} logConfig.error 错误日志回调（做额外处理用）\n */\nexport const setLog = (logLevel?: string | number, logConfig?: AnyObject) => {\n  // 1 error 2 warn 3 info 4 log 5 debug\n  logLevel = logLevel || getEnv('VUE_APP_LOG_LEVEL') || 4\n  const logList = ['log', 'info', 'warn', 'error']\n  const log: AnyObject = {}\n  logList.forEach((v) => {\n    log[v] = (console as AnyObject)[v]\n  })\n  for (let key in logConfig) {\n    if ((console as AnyObject)[key]) {\n      ;(console as AnyObject)[key] = (...arg: any[]) => {\n        ;(log as AnyObject)[key](...arg, Error().stack?.split('\\n')[2])\n        // 回调处理\n        logConfig[key] && logConfig[key](...arg, Error().stack?.split('\\n')[2])\n      }\n    }\n  }\n  switch (+logLevel) {\n    case 1:\n      console.warn = () => {}\n    case 2:\n      console.info = () => {}\n    case 3:\n      console.log = () => {}\n    case 4:\n      console.debug = () => {}\n    default:\n      break\n  }\n  // return log\n}\n\n/**\n * 深拷贝函数\n * @param obj 需要拷贝的对象\n * @returns 拷贝后的对象\n */\nexport const deepCopy = (obj: any): any => {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj\n  }\n  let copy = Array.isArray(obj) ? [] : {}\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ;(copy as AnyObject)[key] = deepCopy(obj[key])\n    }\n  }\n  return copy\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"2266","url":"/home/runner/work/utils/utils/src/base.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12414,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":12411,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":26}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":26}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":2}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"deepCopy","ranges":[{"startOffset":929,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"delCookie","ranges":[{"startOffset":958,"endOffset":973,"count":0}],"isBlockCoverage":false},{"functionName":"getCookie","ranges":[{"startOffset":988,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"getEnv","ranges":[{"startOffset":1015,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":1040,"endOffset":1053,"count":0}],"isBlockCoverage":false},{"functionName":"getNetworkStatus","ranges":[{"startOffset":1075,"endOffset":1097,"count":0}],"isBlockCoverage":false},{"functionName":"getObj","ranges":[{"startOffset":1109,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomColor","ranges":[{"startOffset":1141,"endOffset":1161,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexp","ranges":[{"startOffset":1176,"endOffset":1191,"count":0}],"isBlockCoverage":false},{"functionName":"getStorage","ranges":[{"startOffset":1207,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParam","ranges":[{"startOffset":1240,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParamObj","ranges":[{"startOffset":1277,"endOffset":1297,"count":0}],"isBlockCoverage":false},{"functionName":"getUuid","ranges":[{"startOffset":1310,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":1338,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"remInit","ranges":[{"startOffset":1366,"endOffset":1379,"count":0}],"isBlockCoverage":false},{"functionName":"replaceUrlParam","ranges":[{"startOffset":1400,"endOffset":1421,"count":0}],"isBlockCoverage":false},{"functionName":"safe","ranges":[{"startOffset":1431,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"safeData","ranges":[{"startOffset":1455,"endOffset":1469,"count":2}],"isBlockCoverage":true},{"functionName":"setCookie","ranges":[{"startOffset":1484,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"setEnv","ranges":[{"startOffset":1511,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"setLog","ranges":[{"startOffset":1535,"endOffset":1547,"count":0}],"isBlockCoverage":false},{"functionName":"setObj","ranges":[{"startOffset":1559,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"setStorage","ranges":[{"startOffset":1587,"endOffset":1603,"count":0}],"isBlockCoverage":false},{"functionName":"setTitle","ranges":[{"startOffset":1617,"endOffset":1631,"count":0}],"isBlockCoverage":false},{"functionName":"setUrlParams","ranges":[{"startOffset":1649,"endOffset":1667,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":1678,"endOffset":1689,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1920,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2031,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"getNetworkStatus","ranges":[{"startOffset":2127,"endOffset":2155,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexp","ranges":[{"startOffset":2175,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"setTitle","ranges":[{"startOffset":3114,"endOffset":3506,"count":0}],"isBlockCoverage":false},{"functionName":"remInit","ranges":[{"startOffset":3524,"endOffset":3892,"count":0}],"isBlockCoverage":false},{"functionName":"getCookie","ranges":[{"startOffset":3912,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"setCookie","ranges":[{"startOffset":4196,"endOffset":4645,"count":0}],"isBlockCoverage":false},{"functionName":"delCookie","ranges":[{"startOffset":4665,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":4734,"endOffset":5737,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomColor","ranges":[{"startOffset":5762,"endOffset":5863,"count":0}],"isBlockCoverage":false},{"functionName":"getStorage","ranges":[{"startOffset":5884,"endOffset":6071,"count":0}],"isBlockCoverage":false},{"functionName":"setStorage","ranges":[{"startOffset":6092,"endOffset":6282,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":6298,"endOffset":6369,"count":0}],"isBlockCoverage":false},{"functionName":"safe2","ranges":[{"startOffset":6384,"endOffset":7293,"count":0}],"isBlockCoverage":false},{"functionName":"safeData","ranges":[{"startOffset":7312,"endOffset":8204,"count":2},{"startOffset":7400,"endOffset":7431,"count":0},{"startOffset":7433,"endOffset":7537,"count":0},{"startOffset":7635,"endOffset":7661,"count":0},{"startOffset":7680,"endOffset":7980,"count":0},{"startOffset":8005,"endOffset":8054,"count":0},{"startOffset":8094,"endOffset":8139,"count":0},{"startOffset":8186,"endOffset":8197,"count":0}],"isBlockCoverage":true},{"functionName":"setUrlParams","ranges":[{"startOffset":8227,"endOffset":8556,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParam","ranges":[{"startOffset":8578,"endOffset":8790,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParamObj","ranges":[{"startOffset":8815,"endOffset":9210,"count":0}],"isBlockCoverage":false},{"functionName":"replaceUrlParam","ranges":[{"startOffset":9236,"endOffset":10448,"count":0}],"isBlockCoverage":false},{"functionName":"getUuid","ranges":[{"startOffset":10466,"endOffset":10635,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":10655,"endOffset":10791,"count":0}],"isBlockCoverage":false},{"functionName":"setEnv","ranges":[{"startOffset":10808,"endOffset":10833,"count":0}],"isBlockCoverage":false},{"functionName":"getEnv","ranges":[{"startOffset":10850,"endOffset":10895,"count":0}],"isBlockCoverage":false},{"functionName":"setObj","ranges":[{"startOffset":10912,"endOffset":11034,"count":0}],"isBlockCoverage":false},{"functionName":"getObj","ranges":[{"startOffset":11051,"endOffset":11284,"count":0}],"isBlockCoverage":false},{"functionName":"setLog","ranges":[{"startOffset":11301,"endOffset":12110,"count":0}],"isBlockCoverage":false},{"functionName":"deepCopy","ranges":[{"startOffset":12129,"endOffset":12407,"count":0}],"isBlockCoverage":false}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  isBlob: () => isBlob,\n  isFile: () => isFile,\n  isIdCard: () => isIdCard,\n  isJson: () => isJson,\n  isPrime: () => isPrime\n});\nmodule.exports = __toCommonJS(stdin_exports);\nconst isPrime = (argValue) => !/^.?$|^(..+?)\\1+$/.test(\".\".repeat(argValue));\nconst isJson = (argData) => {\n  try {\n    return typeof JSON.parse(argData || \"\") === \"object\";\n  } catch (e) {\n  }\n  return false;\n};\nconst isBlob = (argData) => {\n  return argData instanceof Blob;\n};\nconst isFile = (argData) => {\n  return argData instanceof File;\n};\nconst isIdCard = (code) => {\n  let tip = \"\";\n  let city = {\n    11: \"\\u5317\\u4EAC\",\n    12: \"\\u5929\\u6D25\",\n    13: \"\\u6CB3\\u5317\",\n    14: \"\\u5C71\\u897F\",\n    15: \"\\u5185\\u8499\\u53E4\",\n    21: \"\\u8FBD\\u5B81\",\n    22: \"\\u5409\\u6797\",\n    23: \"\\u9ED1\\u9F99\\u6C5F \",\n    31: \"\\u4E0A\\u6D77\",\n    32: \"\\u6C5F\\u82CF\",\n    33: \"\\u6D59\\u6C5F\",\n    34: \"\\u5B89\\u5FBD\",\n    35: \"\\u798F\\u5EFA\",\n    36: \"\\u6C5F\\u897F\",\n    37: \"\\u5C71\\u4E1C\",\n    41: \"\\u6CB3\\u5357\",\n    42: \"\\u6E56\\u5317 \",\n    43: \"\\u6E56\\u5357\",\n    44: \"\\u5E7F\\u4E1C\",\n    45: \"\\u5E7F\\u897F\",\n    46: \"\\u6D77\\u5357\",\n    50: \"\\u91CD\\u5E86\",\n    51: \"\\u56DB\\u5DDD\",\n    52: \"\\u8D35\\u5DDE\",\n    53: \"\\u4E91\\u5357\",\n    54: \"\\u897F\\u85CF \",\n    61: \"\\u9655\\u897F\",\n    62: \"\\u7518\\u8083\",\n    63: \"\\u9752\\u6D77\",\n    64: \"\\u5B81\\u590F\",\n    65: \"\\u65B0\\u7586\",\n    71: \"\\u53F0\\u6E7E\",\n    81: \"\\u9999\\u6E2F\",\n    82: \"\\u6FB3\\u95E8\",\n    91: \"\\u56FD\\u5916 \"\n  };\n  let pass = true;\n  if (!code || !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n    code\n  )) {\n    tip = \"\\u8EAB\\u4EFD\\u8BC1\\u53F7\\u683C\\u5F0F\\u9519\\u8BEF\";\n    pass = false;\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = \"\\u5730\\u5740\\u7F16\\u7801\\u9519\\u8BEF\";\n    pass = false;\n  } else {\n    if (code.length === 18) {\n      const codeArr = code.split(\"\");\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n      let parity = [1, 0, \"X\", 9, 8, 7, 6, 5, 4, 3, 2];\n      let sum = 0;\n      let ai = 0;\n      let wi = 0;\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i]);\n        wi = factor[i];\n        sum += ai * wi;\n      }\n      let last = parity[sum % 11] + \"\";\n      if (last !== code[17]) {\n        tip = \"\\u6821\\u9A8C\\u4F4D\\u9519\\u8BEF\";\n        pass = false;\n      }\n    }\n  }\n  console.assert(!tip, tip);\n  return pass;\n};\n","originalCode":"/**\n * @module index\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 判断函数\n */\n/**\n * @function\n * @description 判断质数\n * @param {number} argValue 要判断的数据\n * @returns {boolean} 结果\n */\nexport const isPrime = (argValue: number): boolean =>\n  !/^.?$|^(..+?)\\1+$/.test('.'.repeat(argValue))\n\n/**\n * @function\n * @description 判断是否是JSON\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isJson = (argData: any): boolean => {\n  try {\n    return typeof JSON.parse(argData || '') === 'object'\n  } catch (e) {}\n  return false\n}\n/**\n * @function\n * @description 判断是否是Blob\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isBlob = (argData: any): boolean => {\n  return argData instanceof Blob\n}\n\n/**\n * @function\n * @description 判断是否是File\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isFile = (argData: any): boolean => {\n  return argData instanceof File\n}\n\n/**\n * @function\n * @description 是否为正确的身份证号码\n * @param  {string} code 身份证号码\n * @returns {boolean}\n */\nexport const isIdCard = (code: string): boolean => {\n  let tip = ''\n  let city: { [key: number]: string } = {\n    11: '北京',\n    12: '天津',\n    13: '河北',\n    14: '山西',\n    15: '内蒙古',\n    21: '辽宁',\n    22: '吉林',\n    23: '黑龙江 ',\n    31: '上海',\n    32: '江苏',\n    33: '浙江',\n    34: '安徽',\n    35: '福建',\n    36: '江西',\n    37: '山东',\n    41: '河南',\n    42: '湖北 ',\n    43: '湖南',\n    44: '广东',\n    45: '广西',\n    46: '海南',\n    50: '重庆',\n    51: '四川',\n    52: '贵州',\n    53: '云南',\n    54: '西藏 ',\n    61: '陕西',\n    62: '甘肃',\n    63: '青海',\n    64: '宁夏',\n    65: '新疆',\n    71: '台湾',\n    81: '香港',\n    82: '澳门',\n    91: '国外 ',\n  }\n  let pass = true\n  if (\n    !code ||\n    !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n      code\n    )\n  ) {\n    tip = '身份证号格式错误'\n    pass = false\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = '地址编码错误'\n    pass = false\n  } else {\n    // 18位身份证需要验证最后一位校验位\n    if (code.length === 18) {\n      const codeArr = code.split('')\n      // ∑(ai×Wi)(mod 11)\n      // 加权因子\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]\n      // 校验位\n      let parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2]\n      let sum = 0\n      let ai = 0\n      let wi = 0\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i])\n        wi = factor[i]\n        sum += ai * wi\n      }\n      let last = parity[sum % 11] + ''\n      if (last !== code[17]) {\n        tip = '校验位错误'\n        pass = false\n      }\n    }\n  }\n  console.assert(!tip, tip)\n  return pass\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"2267","url":"/home/runner/work/utils/utils/src/is.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3284,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":3281,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":5}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":0}],"isBlockCoverage":false},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"isBlob","ranges":[{"startOffset":927,"endOffset":939,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":951,"endOffset":963,"count":0}],"isBlockCoverage":false},{"functionName":"isIdCard","ranges":[{"startOffset":977,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"isJson","ranges":[{"startOffset":1003,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"isPrime","ranges":[{"startOffset":1028,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"isPrime","ranges":[{"startOffset":1108,"endOffset":1168,"count":0}],"isBlockCoverage":false},{"functionName":"isJson","ranges":[{"startOffset":1185,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"isBlob","ranges":[{"startOffset":1320,"endOffset":1370,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":1387,"endOffset":1437,"count":0}],"isBlockCoverage":false},{"functionName":"isIdCard","ranges":[{"startOffset":1456,"endOffset":3277,"count":0}],"isBlockCoverage":false}]}}]},{"leaks":false,"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1679538734504,"runtime":382,"slow":false,"start":1679538734122},"skipped":false,"testFilePath":"/home/runner/work/utils/utils/test/file.spec.ts","testResults":[{"rowKey":0,"ancestorTitles":["file"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"file blobToBase64","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"blobToBase64"},{"rowKey":1,"ancestorTitles":["file"],"duration":29,"failureDetails":[],"failureMessages":[],"fullName":"file blobUrlToFileMock","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"blobUrlToFileMock"},{"rowKey":2,"ancestorTitles":["file"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"file dataURLtoBlob","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"dataURLtoBlob"},{"rowKey":3,"ancestorTitles":["file"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"file blobToFile","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"blobToFile"},{"rowKey":4,"ancestorTitles":["file"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"file dlFileMock","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"dlFileMock"},{"rowKey":5,"ancestorTitles":["file"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"file getDuration","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getDuration"},{"rowKey":6,"ancestorTitles":["file"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"file loadFileMock","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"loadFileMock"}],"failureMessage":null,"v8Coverage":[{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\nmodule.exports = __toCommonJS(stdin_exports);\n__reExport(stdin_exports, require(\"./is\"), module.exports);\n__reExport(stdin_exports, require(\"./base\"), module.exports);\n__reExport(stdin_exports, require(\"./file\"), module.exports);\n__reExport(stdin_exports, require(\"./transform\"), module.exports);\n","originalCode":"/**\r\n * @author linjielinlin 993353454@qq.com\r\n * @date 2022-05-11 22:07:43\r\n * @description no\r\n */\r\nexport * from './is'\r\nexport * from './base'\r\nexport * from './file'\r\nexport * from './transform'\r\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"8","url":"/home/runner/work/utils/utils/src/index.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1211,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":1208,"count":1}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":299,"endOffset":645,"count":9},{"startOffset":368,"endOffset":397,"count":0},{"startOffset":452,"endOffset":626,"count":116},{"startOffset":484,"endOffset":501,"count":109},{"startOffset":511,"endOffset":626,"count":109}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":537,"endOffset":552,"count":9}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":664,"endOffset":791,"count":4}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":812,"endOffset":883,"count":1}],"isBlockCoverage":true}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  isBlob: () => isBlob,\n  isFile: () => isFile,\n  isIdCard: () => isIdCard,\n  isJson: () => isJson,\n  isPrime: () => isPrime\n});\nmodule.exports = __toCommonJS(stdin_exports);\nconst isPrime = (argValue) => !/^.?$|^(..+?)\\1+$/.test(\".\".repeat(argValue));\nconst isJson = (argData) => {\n  try {\n    return typeof JSON.parse(argData || \"\") === \"object\";\n  } catch (e) {\n  }\n  return false;\n};\nconst isBlob = (argData) => {\n  return argData instanceof Blob;\n};\nconst isFile = (argData) => {\n  return argData instanceof File;\n};\nconst isIdCard = (code) => {\n  let tip = \"\";\n  let city = {\n    11: \"\\u5317\\u4EAC\",\n    12: \"\\u5929\\u6D25\",\n    13: \"\\u6CB3\\u5317\",\n    14: \"\\u5C71\\u897F\",\n    15: \"\\u5185\\u8499\\u53E4\",\n    21: \"\\u8FBD\\u5B81\",\n    22: \"\\u5409\\u6797\",\n    23: \"\\u9ED1\\u9F99\\u6C5F \",\n    31: \"\\u4E0A\\u6D77\",\n    32: \"\\u6C5F\\u82CF\",\n    33: \"\\u6D59\\u6C5F\",\n    34: \"\\u5B89\\u5FBD\",\n    35: \"\\u798F\\u5EFA\",\n    36: \"\\u6C5F\\u897F\",\n    37: \"\\u5C71\\u4E1C\",\n    41: \"\\u6CB3\\u5357\",\n    42: \"\\u6E56\\u5317 \",\n    43: \"\\u6E56\\u5357\",\n    44: \"\\u5E7F\\u4E1C\",\n    45: \"\\u5E7F\\u897F\",\n    46: \"\\u6D77\\u5357\",\n    50: \"\\u91CD\\u5E86\",\n    51: \"\\u56DB\\u5DDD\",\n    52: \"\\u8D35\\u5DDE\",\n    53: \"\\u4E91\\u5357\",\n    54: \"\\u897F\\u85CF \",\n    61: \"\\u9655\\u897F\",\n    62: \"\\u7518\\u8083\",\n    63: \"\\u9752\\u6D77\",\n    64: \"\\u5B81\\u590F\",\n    65: \"\\u65B0\\u7586\",\n    71: \"\\u53F0\\u6E7E\",\n    81: \"\\u9999\\u6E2F\",\n    82: \"\\u6FB3\\u95E8\",\n    91: \"\\u56FD\\u5916 \"\n  };\n  let pass = true;\n  if (!code || !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n    code\n  )) {\n    tip = \"\\u8EAB\\u4EFD\\u8BC1\\u53F7\\u683C\\u5F0F\\u9519\\u8BEF\";\n    pass = false;\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = \"\\u5730\\u5740\\u7F16\\u7801\\u9519\\u8BEF\";\n    pass = false;\n  } else {\n    if (code.length === 18) {\n      const codeArr = code.split(\"\");\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n      let parity = [1, 0, \"X\", 9, 8, 7, 6, 5, 4, 3, 2];\n      let sum = 0;\n      let ai = 0;\n      let wi = 0;\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i]);\n        wi = factor[i];\n        sum += ai * wi;\n      }\n      let last = parity[sum % 11] + \"\";\n      if (last !== code[17]) {\n        tip = \"\\u6821\\u9A8C\\u4F4D\\u9519\\u8BEF\";\n        pass = false;\n      }\n    }\n  }\n  console.assert(!tip, tip);\n  return pass;\n};\n","originalCode":"/**\n * @module index\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 判断函数\n */\n/**\n * @function\n * @description 判断质数\n * @param {number} argValue 要判断的数据\n * @returns {boolean} 结果\n */\nexport const isPrime = (argValue: number): boolean =>\n  !/^.?$|^(..+?)\\1+$/.test('.'.repeat(argValue))\n\n/**\n * @function\n * @description 判断是否是JSON\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isJson = (argData: any): boolean => {\n  try {\n    return typeof JSON.parse(argData || '') === 'object'\n  } catch (e) {}\n  return false\n}\n/**\n * @function\n * @description 判断是否是Blob\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isBlob = (argData: any): boolean => {\n  return argData instanceof Blob\n}\n\n/**\n * @function\n * @description 判断是否是File\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isFile = (argData: any): boolean => {\n  return argData instanceof File\n}\n\n/**\n * @function\n * @description 是否为正确的身份证号码\n * @param  {string} code 身份证号码\n * @returns {boolean}\n */\nexport const isIdCard = (code: string): boolean => {\n  let tip = ''\n  let city: { [key: number]: string } = {\n    11: '北京',\n    12: '天津',\n    13: '河北',\n    14: '山西',\n    15: '内蒙古',\n    21: '辽宁',\n    22: '吉林',\n    23: '黑龙江 ',\n    31: '上海',\n    32: '江苏',\n    33: '浙江',\n    34: '安徽',\n    35: '福建',\n    36: '江西',\n    37: '山东',\n    41: '河南',\n    42: '湖北 ',\n    43: '湖南',\n    44: '广东',\n    45: '广西',\n    46: '海南',\n    50: '重庆',\n    51: '四川',\n    52: '贵州',\n    53: '云南',\n    54: '西藏 ',\n    61: '陕西',\n    62: '甘肃',\n    63: '青海',\n    64: '宁夏',\n    65: '新疆',\n    71: '台湾',\n    81: '香港',\n    82: '澳门',\n    91: '国外 ',\n  }\n  let pass = true\n  if (\n    !code ||\n    !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n      code\n    )\n  ) {\n    tip = '身份证号格式错误'\n    pass = false\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = '地址编码错误'\n    pass = false\n  } else {\n    // 18位身份证需要验证最后一位校验位\n    if (code.length === 18) {\n      const codeArr = code.split('')\n      // ∑(ai×Wi)(mod 11)\n      // 加权因子\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]\n      // 校验位\n      let parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2]\n      let sum = 0\n      let ai = 0\n      let wi = 0\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i])\n        wi = factor[i]\n        sum += ai * wi\n      }\n      let last = parity[sum % 11] + ''\n      if (last !== code[17]) {\n        tip = '校验位错误'\n        pass = false\n      }\n    }\n  }\n  console.assert(!tip, tip)\n  return pass\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"2524","url":"/home/runner/work/utils/utils/src/is.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3284,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":3281,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":5}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":3}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"isBlob","ranges":[{"startOffset":927,"endOffset":939,"count":3}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":951,"endOffset":963,"count":0}],"isBlockCoverage":false},{"functionName":"isIdCard","ranges":[{"startOffset":977,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"isJson","ranges":[{"startOffset":1003,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"isPrime","ranges":[{"startOffset":1028,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"isPrime","ranges":[{"startOffset":1108,"endOffset":1168,"count":0}],"isBlockCoverage":false},{"functionName":"isJson","ranges":[{"startOffset":1185,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"isBlob","ranges":[{"startOffset":1320,"endOffset":1370,"count":3}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":1387,"endOffset":1437,"count":0}],"isBlockCoverage":false},{"functionName":"isIdCard","ranges":[{"startOffset":1456,"endOffset":3277,"count":0}],"isBlockCoverage":false}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  deepCopy: () => deepCopy,\n  delCookie: () => delCookie,\n  getCookie: () => getCookie,\n  getEnv: () => getEnv,\n  getInfo: () => getInfo,\n  getNetworkStatus: () => getNetworkStatus,\n  getObj: () => getObj,\n  getRandomColor: () => getRandomColor,\n  getRegexp: () => getRegexp,\n  getStorage: () => getStorage,\n  getUrlParam: () => getUrlParam,\n  getUrlParamObj: () => getUrlParamObj,\n  getUuid: () => getUuid,\n  randomInt: () => randomInt,\n  remInit: () => remInit,\n  replaceUrlParam: () => replaceUrlParam,\n  safe: () => safe,\n  safeData: () => safeData,\n  setCookie: () => setCookie,\n  setEnv: () => setEnv,\n  setLog: () => setLog,\n  setObj: () => setObj,\n  setStorage: () => setStorage,\n  setTitle: () => setTitle,\n  setUrlParams: () => setUrlParams,\n  sleep: () => sleep\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar import_is = require(\"./is\");\nlet isOnline = true;\nlet ENV = {};\nlet DATA_OBJECT = {};\nif (globalThis && globalThis.addEventListener) {\n  globalThis.addEventListener(\"offline\", function() {\n    console.debug(\"offLine\");\n    isOnline = false;\n  });\n  globalThis.addEventListener(\"online\", function() {\n    console.debug(\"onLine\");\n    isOnline = true;\n  });\n}\nconst getNetworkStatus = () => {\n  return isOnline;\n};\nconst getRegexp = () => {\n  return {\n    html: /<[^>]+>/gim,\n    password: /^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[\\W_]).{8,16}$/,\n    idCard: /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/,\n    idCardNormal: /^[0-9]\\d+([0-9]|X|x)*$/,\n    phone: /^1\\d{10}$/,\n    email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n    http: /http:\\/\\/|https:\\/\\//,\n    score: /^[1-9]\\d*|0$/,\n    int: /^[1-9]\\d*$/,\n    number: /^\\d*$/,\n    float1: /^(([1-9]\\d*)|0|(0.\\d{0,1})|([1-9]\\d*.\\d{0,1}))$/,\n    float2: /^(([1-9]\\d*)|0|(0.\\d{0,2})|([1-9]\\d*.\\d{0,2}))$/,\n    float3: /^(([1-9]\\d*)|0|(0.\\d{0,3})|([1-9]\\d*.\\d{0,3}))$/,\n    letterNumber: /^[a-zA-Z0-9]*$/,\n    letter: /^[a-zA-Z]*$/,\n    account: /^[a-zA-Z0-9_\\-\\u4e00-\\u9fa5]{1,50}$/,\n    realName: /^([\\u4e00-\\u9fa5]{1,50}|[\\u4e00-\\u9fa5]{1,25}[\\s][\\u4e00-\\u9fa5]{1,24}|[a-zA-Z_\\-.]{1,50}|[a-zA-Z_\\-.]{1,25}[\\s][a-zA-Z_\\-.]{1,24})$/,\n    cn: /^[\\u4e00-\\u9fa5]*$/,\n    ascii: /^[\\x20-\\x7E]+$/\n  };\n};\nconst setTitle = (argTitle) => {\n  if (typeof globalThis.document === \"object\") {\n    globalThis.document.title = String(argTitle);\n  }\n  if (getInfo().isAppleMobile) {\n    const i = document.createElement(\"iframe\");\n    i.onload = () => {\n      setTimeout(() => {\n        console.debug(\"apple mobile setting title\");\n        i.remove();\n      }, 10);\n    };\n    globalThis.document.body.appendChild(i);\n  }\n};\nconst remInit = (argBaseSize = 16, argWidth = 375) => {\n  const setRem = () => {\n    const scale = safeData(globalThis, \"document.documentElement.clientWidth\", argWidth) / argWidth;\n    safeData(\n      globalThis,\n      \"document.documentElement.style.fontSize\",\n      argBaseSize * scale + \"px\",\n      true\n    );\n  };\n  setRem();\n  globalThis.onresize = () => {\n    setRem();\n  };\n};\nconst getCookie = (argName) => {\n  const cookies = globalThis.document.cookie.split(\"; \");\n  const cookie = cookies.find((cookie2) => {\n    const [name] = cookie2.split(\"=\");\n    return argName === name;\n  });\n  return cookie ? decodeURIComponent(cookie.split(\"=\")[1] || \"\") : \"\";\n};\nconst setCookie = (argName, argValue = \"\", argTime = 24) => {\n  let now = new Date();\n  let offset = 8;\n  let utc = now.getTime() + now.getTimezoneOffset() * 6e4;\n  let nd = utc + 36e5 * offset;\n  let exp = new Date(nd);\n  let domain = globalThis.document.domain;\n  exp.setTime(exp.getTime() + argTime * 60 * 60 * 1e3);\n  globalThis.document.cookie = argName + \"=\" + encodeURIComponent(argValue) + \";path=/;expires=\" + exp.toUTCString() + \";domain=\" + domain + \";\";\n};\nconst delCookie = (argName = \"\") => {\n  setCookie(argName, \"\", -1);\n};\nconst getInfo = () => {\n  let ua = safeData(globalThis, \"navigator.userAgent\", \"\").toLowerCase();\n  let platform = safeData(\n    globalThis,\n    \"navigator.userAgentData.platform\",\n    \"\"\n  ).toLowerCase();\n  let info = {\n    ua,\n    platform,\n    isMobile: !!ua.match(/mobile/),\n    isWin: !!platform.match(\"win\"),\n    isIphone: !!ua.match(/iphone/),\n    isIpad: !!ua.match(/ipad/),\n    isMac: !!platform.match(\"mac\"),\n    isIos: !!platform.match(\"ios\"),\n    isAndroid: !!platform.match(\"android\"),\n    isSafari: ua.indexOf(\"safari\") > -1 && ua.indexOf(\"chrome\") < 1,\n    isIE: \"ActiveXObject\" in globalThis,\n    ieVersion: 0,\n    isAppleMobile: false,\n    isWeixin: !!ua.match(/MicroMessenger/i),\n    isAlipay: !!ua.match(/Alipay/i)\n  };\n  if (info.ua.match(\"msie\")) {\n    let IE = info.ua.match(/msie\\s([0-9]*)/);\n    if (IE && IE.length >= 2) {\n      info.ieVersion = +IE[1];\n    }\n  }\n  info.isAppleMobile = !!(info.isMobile && ua.toLowerCase().indexOf(\"applewebkit\") && ua.indexOf(\"chrome\") < 1);\n  return info;\n};\nconst getRandomColor = function() {\n  return \"#\" + (\"00000\" + (Math.random() * 16777216 << 0).toString(16)).substring(-6);\n};\nconst getStorage = (argKey, argNoJson) => {\n  let res = globalThis.localStorage.getItem(argKey);\n  if (!argNoJson && (0, import_is.isJson)(res) && res) {\n    res = JSON.parse(res);\n  }\n  return res || \"\";\n};\nconst setStorage = (argKey, argData) => {\n  if (typeof argData === \"object\") {\n    argData = JSON.stringify(argData);\n  }\n  globalThis.localStorage.setItem(argKey, String(argData));\n  return String(argData);\n};\nconst sleep = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\nconst safe = function safe2(argData, argCheck, argValue, argSetValueForce) {\n  if (!argData) {\n    return argValue;\n  }\n  if (typeof argCheck !== \"string\" && typeof argCheck !== \"number\") {\n    console.warn(\"argCheck\\u8BF7\\u4F20\\u5165string\\u5F53\\u524D\\u4E3A:\" + argCheck);\n    return \"\";\n  }\n  const temKey = argCheck.toString().split(\".\");\n  const temLen = temKey.length;\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== \"object\") {\n        if (argSetValueForce) {\n          console.warn(\"safeData setValue err\\uFF1A\", argData, \"index:\", i);\n        }\n        return argValue;\n      }\n      argData = argData[temKey[i]] || {};\n    }\n  }\n  if (argSetValueForce) {\n    ;\n    argData[temKey[temLen - 1]] = argValue;\n  }\n  if (typeof argValue === \"undefined\") {\n    return argData[temKey[temLen - 1]];\n  } else {\n    return argData[temKey[temLen - 1]] || argValue;\n  }\n};\nconst safeData = (argData, argCheck, argValue, argSetValueForce) => {\n  if (typeof argCheck !== \"string\" && typeof argCheck !== \"number\") {\n    console.warn(\"argCheck\\u8BF7\\u4F20\\u5165string\\u5F53\\u524D\\u4E3A:\" + argCheck);\n    return \"\";\n  }\n  const temKey = argCheck.toString().split(\".\");\n  const temLen = temKey.length;\n  if (!argData) {\n    return argValue;\n  }\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== \"object\") {\n        if (argSetValueForce) {\n          console.warn(\"safeData setValue err\\uFF1A\", argData, \"index:\", i);\n        }\n        return argValue;\n      }\n      argData = argData[temKey[i]] || {};\n    }\n  }\n  if (argSetValueForce) {\n    argData[temKey[temLen - 1]] = argValue;\n  }\n  if (typeof argValue === \"undefined\") {\n    return argData[temKey[temLen - 1]];\n  } else {\n    return argData[temKey[temLen - 1]] || argValue;\n  }\n};\nconst setUrlParams = (argParams, noMark) => {\n  let re = \"\";\n  if (!noMark) {\n    re = \"?\";\n  }\n  let paramsList = Object.keys(argParams);\n  let temLength = paramsList.length;\n  if (!temLength) {\n    return \"\";\n  }\n  paramsList.map((v, k) => {\n    re += v + \"=\" + argParams[v];\n    if (k < temLength - 1) {\n      re += \"&\";\n    }\n  });\n  return re;\n};\nconst getUrlParam = (argName, argUrl = globalThis.location.search || \"\") => {\n  let result = argUrl.match(new RegExp(\"[?&]\" + argName + \"=([^&]+)\", \"i\"));\n  if (!result) {\n    return \"\";\n  }\n  return decodeURIComponent(result[1]);\n};\nconst getUrlParamObj = (argData = globalThis.location.search || globalThis.location.hash) => {\n  const res = {};\n  try {\n    argData.slice(argData.indexOf(\"?\") + 1).split(\"&\").forEach((v) => {\n      const [key, val] = v.split(\"=\");\n      if (key !== v) {\n        res[key] = decodeURIComponent(val);\n      }\n    });\n    return res;\n  } catch (e) {\n    console.error(\"\\u8F6C\\u6362\\u5931\\u8D25\", e);\n    return res;\n  }\n};\nconst replaceUrlParam = (name, value, url = globalThis.location.href || \"\") => {\n  const reg = new RegExp(\"([?]|&)(\" + name + \"=)([^&#]*)([&]?|$)\", \"img\");\n  const r = url.match(reg);\n  const search = url.split(\"?\");\n  let strValue = url;\n  if (value === void 0 || value === null) {\n    if (r != null) {\n      strValue = url.replace(reg, (_match, p1, _p2, _p3, p4) => {\n        if (!p4 || !p4.length) {\n          return \"\";\n        } else if (p1 === p4) {\n          return p1;\n        }\n        return p1 + p4;\n      });\n      strValue = strValue.replace(\"?&\", \"?\");\n    }\n  } else if (r != null) {\n    strValue = url.replace(reg, `$1$2${value}$4`);\n  } else if (search.length > 1) {\n    const sub = search[1].split(\"#\");\n    if (sub.length > 1) {\n      if (sub[1].length) {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}#${sub[1]}`;\n      } else {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}${sub[1]}`;\n      }\n    } else {\n      strValue = `${search[0]}?${search[1]}&${name}=${value}`;\n    }\n  } else {\n    const sub = url.split(\"#\");\n    if (sub.length > 1) {\n      strValue = `${sub[0]}?${name}=${value}#${sub[1]}`;\n    } else {\n      strValue = `${url}?${name}=${value}`;\n    }\n  }\n  return strValue;\n};\nconst getUuid = () => {\n  const S4 = () => ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);\n  return S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + Date.now();\n};\nconst randomInt = (min = 0, max = 100) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst setEnv = (env) => {\n  ENV = env;\n};\nconst getEnv = (key) => {\n  return safeData(ENV, key, \"\");\n};\nconst setObj = (key, data) => {\n  if (!key) {\n    DATA_OBJECT = data;\n  } else {\n    DATA_OBJECT[key] = data;\n  }\n  return DATA_OBJECT;\n};\nconst getObj = (key, argData, isDeepCopy) => {\n  let res = safeData(DATA_OBJECT, key, {});\n  if (argData) {\n    res = Object.assign(res, argData);\n  }\n  if (!isDeepCopy) {\n    return res;\n  } else {\n    return JSON.parse(JSON.stringify(res));\n  }\n};\nconst setLog = (logLevel, logConfig) => {\n  logLevel = logLevel || getEnv(\"VUE_APP_LOG_LEVEL\") || 4;\n  const logList = [\"log\", \"info\", \"warn\", \"error\"];\n  const log = {};\n  logList.forEach((v) => {\n    log[v] = console[v];\n  });\n  for (let key in logConfig) {\n    if (console[key]) {\n      ;\n      console[key] = (...arg) => {\n        var _a, _b;\n        ;\n        log[key](...arg, (_a = Error().stack) == null ? void 0 : _a.split(\"\\n\")[2]);\n        logConfig[key] && logConfig[key](...arg, (_b = Error().stack) == null ? void 0 : _b.split(\"\\n\")[2]);\n      };\n    }\n  }\n  switch (+logLevel) {\n    case 1:\n      console.warn = () => {\n      };\n    case 2:\n      console.info = () => {\n      };\n    case 3:\n      console.log = () => {\n      };\n    case 4:\n      console.debug = () => {\n      };\n    default:\n      break;\n  }\n};\nconst deepCopy = (obj) => {\n  if (typeof obj !== \"object\" || obj === null) {\n    return obj;\n  }\n  let copy = Array.isArray(obj) ? [] : {};\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ;\n      copy[key] = deepCopy(obj[key]);\n    }\n  }\n  return copy;\n};\n","originalCode":"/**\n * @module index\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 公共函数，使用'lj-utils'引入\n */\n\nimport { isJson } from './is'\nimport { Info, AnyObject, Bool } from './types'\n\nlet isOnline: boolean = true\nlet ENV: AnyObject = {}\nlet DATA_OBJECT: AnyObject = {}\n// 断网监听\nif (globalThis && globalThis.addEventListener) {\n  // #ifdef H5\n  globalThis.addEventListener('offline', function () {\n    console.debug('offLine')\n    isOnline = false\n  })\n  globalThis.addEventListener('online', function () {\n    console.debug('onLine')\n    isOnline = true\n  })\n  // #endif\n}\n\n/**\n * @function\n * @description 获取当前网络状态（H5）\n * @return boolean\n */\nexport const getNetworkStatus = () => {\n  return isOnline\n}\n\n/**\n * @function\n * @description 正则收集\n * @returns {object}\n */\nexport const getRegexp = (): AnyObject => {\n  return {\n    // 匹配html标签，提取html文字： htmlCode.replace(reg.html,'')\n    html: /<[^>]+>/gim,\n    // 至少1数字1字母1字符，8-16位\n    password: /^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[\\W_]).{8,16}$/,\n    // 普通身份证号正则，isIdCard更为严格\n    idCard: /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/,\n    // 简易身份证号 数字+x\n    idCardNormal: /^[0-9]\\d+([0-9]|X|x)*$/,\n    // 手机号\n    phone: /^1\\d{10}$/,\n    // 邮箱\n    email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n    // 网址\n    http: /http:\\/\\/|https:\\/\\//,\n    // 含0整数（得分）\n    score: /^[1-9]\\d*|0$/,\n    // 整数\n    int: /^[1-9]\\d*$/,\n    // 匹配数字\n    number: /^\\d*$/,\n    // >=0||1位小数\n    float1: /^(([1-9]\\d*)|0|(0.\\d{0,1})|([1-9]\\d*.\\d{0,1}))$/,\n    // >=0||2位小数\n    float2: /^(([1-9]\\d*)|0|(0.\\d{0,2})|([1-9]\\d*.\\d{0,2}))$/,\n    // >=0||3位小数\n    float3: /^(([1-9]\\d*)|0|(0.\\d{0,3})|([1-9]\\d*.\\d{0,3}))$/,\n    // 字母+数字组合\n    letterNumber: /^[a-zA-Z0-9]*$/,\n    // 字母\n    letter: /^[a-zA-Z]*$/,\n    // 帐号50个字内：大小写+数字+中文+'_'+'-'\n    account: /^[a-zA-Z0-9_\\-\\u4e00-\\u9fa5]{1,50}$/,\n    // 中英文姓名 50个字内/中文 中文/英文-. 英文-./\n    realName:\n      /^([\\u4e00-\\u9fa5]{1,50}|[\\u4e00-\\u9fa5]{1,25}[\\s][\\u4e00-\\u9fa5]{1,24}|[a-zA-Z_\\-.]{1,50}|[a-zA-Z_\\-.]{1,25}[\\s][a-zA-Z_\\-.]{1,24})$/,\n    // 匹配中文\n    cn: /^[\\u4e00-\\u9fa5]*$/,\n    // 匹配ASCII,非中文之外的字符（全角字符）\n    ascii: /^[\\x20-\\x7E]+$/,\n  }\n}\n\n/**\n * @function\n * @description 设置标题\n * @param  {string} argTitle 标题\n */\nexport const setTitle = (argTitle: string | number) => {\n  if (typeof globalThis.document === 'object') {\n    globalThis.document.title = String(argTitle)\n  }\n  if (getInfo().isAppleMobile) {\n    const i = document.createElement('iframe')\n    i.onload = () => {\n      setTimeout(() => {\n        console.debug('apple mobile setting title')\n        i.remove()\n      }, 10)\n    }\n    globalThis.document.body.appendChild(i)\n  }\n}\n\n/**\n * @function\n * @description 使用postcss-px2rem时使用\n * @param {number} argBaseSize 基础大小 16px（要跟配置一致）\n * @param {number} argWidth 基准宽度\n */\nexport const remInit = (argBaseSize: number = 16, argWidth: number = 375) => {\n  // 设置 rem 函数\n  const setRem = () => {\n    // 当前页面宽度相对于 argWidth 宽的缩放比例，可根据自己需要修改。\n    const scale =\n      safeData(globalThis, 'document.documentElement.clientWidth', argWidth) /\n      argWidth\n    // 设置页面根节点字体大小\n    safeData(\n      globalThis,\n      'document.documentElement.style.fontSize',\n      argBaseSize * scale + 'px',\n      true\n    )\n  }\n  // 初始化\n  setRem()\n  // 改变窗口大小时重新设置 rem\n  globalThis.onresize = () => {\n    setRem()\n  }\n}\n\n/**\n * @function\n * @description 获取cookie\n * @param  {string} argName 要获取的值\n * @returns {string}\n */\nexport const getCookie = (argName: string): string => {\n  const cookies = globalThis.document.cookie.split('; ')\n  const cookie = cookies.find((cookie) => {\n    const [name] = cookie.split('=')\n    return argName === name\n  })\n  return cookie ? decodeURIComponent(cookie.split('=')[1] || '') : ''\n}\n\n/**\n * @function\n * @description 设置cookie\n * @param  {string} argName 要设置的key\n * @param  {string} argValue 要设置的value\n * @param  {number} argTime 过期时间/时 默认24小时\n */\nexport const setCookie = (\n  argName: string,\n  argValue: string | number | boolean = '',\n  argTime: number = 24\n) => {\n  let now = new Date()\n  let offset = 8\n  let utc = now.getTime() + now.getTimezoneOffset() * 60000\n  let nd = utc + 3600000 * offset\n  let exp = new Date(nd)\n  let domain = globalThis.document.domain\n  exp.setTime(exp.getTime() + argTime * 60 * 60 * 1000)\n  globalThis.document.cookie =\n    argName +\n    '=' +\n    encodeURIComponent(argValue) +\n    ';path=/;expires=' +\n    exp.toUTCString() +\n    ';domain=' +\n    domain +\n    ';'\n}\n\n/**\n * @function\n * @description 清除cookie\n * @param  {string} argName 要清除的值\n */\nexport const delCookie = (argName: string = '') => {\n  setCookie(argName, '', -1)\n}\n\n/**\n * @function\n * @description 检测浏览器状态，系统状态 *\n * @returns {Info} {\n * ua: ua,\n * platform: 平台,\n * isMobile: 移动端,\n * isWin: winPC端,\n * isIphone: iphone,\n * isIpad: ipad,\n * isMac: mac,\n * isAppleMobile: 苹果移动端webview\n * isSafari: Safari浏览器,\n * isIos: Ios平台,\n * isAndroid: android平台,\n * isIE: 显示8 9 10, true为11以上\n * ...\n * }\n */\nexport const getInfo = (): Info => {\n  let ua = safeData(globalThis, 'navigator.userAgent', '').toLowerCase()\n  let platform: string = safeData(\n    globalThis,\n    'navigator.userAgentData.platform',\n    ''\n  ).toLowerCase()\n  let info: Info = {\n    ua: ua,\n    platform: platform,\n    isMobile: !!ua.match(/mobile/),\n    isWin: !!platform.match('win'),\n    isIphone: !!ua.match(/iphone/),\n    isIpad: !!ua.match(/ipad/),\n    isMac: !!platform.match('mac'),\n    isIos: !!platform.match('ios'),\n    isAndroid: !!platform.match('android'),\n    isSafari: ua.indexOf('safari') > -1 && ua.indexOf('chrome') < 1,\n    isIE: 'ActiveXObject' in globalThis,\n    ieVersion: 0,\n    isAppleMobile: false,\n    isWeixin: !!ua.match(/MicroMessenger/i),\n    isAlipay: !!ua.match(/Alipay/i),\n  }\n  if (info.ua.match('msie')) {\n    let IE = info.ua.match(/msie\\s([0-9]*)/)\n    if (IE && IE.length >= 2) {\n      info.ieVersion = +IE[1]\n    }\n  }\n  info.isAppleMobile = !!(\n    info.isMobile &&\n    ua.toLowerCase().indexOf('applewebkit') &&\n    ua.indexOf('chrome') < 1\n  )\n  return info\n}\n\n/**\n * @function\n * @description 获取随机颜色\n * @return string\n */\nexport const getRandomColor = function () {\n  return (\n    '#' +\n    ('00000' + ((Math.random() * 0x1000000) << 0).toString(16)).substring(-6)\n  )\n}\n\n/**\n * @function\n * @description 获取storage的值，默认将json转为obj\n * @param {string} argKey 要获取的key\n * @param {string} argNoJson true时不自动转换JSON字符串\n * @returns {any} key对应的数据\n */\nexport const getStorage = (argKey: string, argNoJson?: string): any => {\n  let res = globalThis.localStorage.getItem(argKey)\n  // 默认转义JSON字符串\n  if (!argNoJson && isJson(res) && res) {\n    res = JSON.parse(res)\n  }\n  return res || ''\n}\n\n/**\n * @function\n * @description 设置storage的值，默认将obj转为json\n * @param {string} argKey 要获取的key\n * @param {unknown} argData 要保存的数据\n * @returns {string} 保存的数据String\n */\nexport const setStorage = (argKey: string, argData: unknown): string => {\n  if (typeof argData === 'object') {\n    argData = JSON.stringify(argData)\n  }\n  globalThis.localStorage.setItem(argKey, String(argData))\n  return String(argData)\n}\n\n/**\n * @function\n * @description setTimeout promise版\n * @param  {number} ms 时间，毫秒\n */\nexport const sleep = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n// 返回T下的key对应类型\ntype KeyOf<T extends Record<string, any>, K = keyof T> = K extends string\n  ? T[K] extends Function\n    ? never\n    : K\n  : never\ntype DotField<T extends Record<string, any>, K = KeyOf<T>> = K extends string\n  ? K | `${K}.${DotField<T[K]>}`\n  : never\n// 返回传入K或T[K]对应的类型\ntype ValueOf<\n  T extends Record<string, any>,\n  K\n> = K extends `${infer I}.${infer R}`\n  ? ValueOf<T[I], R>\n  : K extends string\n  ? T[K]\n  : never\n\n/**\n * @function\n * @description 数据安全访问\n * @param  {any} argData  [原始数据]\n * @param  {string} argCheck [要返回的数据，用'.'连接，数组用'.+数字表示']\n * @param  {any} argValue [如果数据有误，返回的值，选填]\n * @param  {boolean|0|1} argSetValueForce [是否强制赋值argValue]\n * @returns {any}\n */\nexport const safe = function safe<\n  T extends Record<string, any>,\n  K extends DotField<T>\n>(\n  argData: T,\n  argCheck: K,\n  argValue?: ValueOf<T, K>,\n  argSetValueForce?: Bool\n): ValueOf<T, K> | undefined | string {\n  if (!argData) {\n    return argValue\n  }\n  if (typeof argCheck !== 'string' && typeof argCheck !== 'number') {\n    console.warn('argCheck请传入string当前为:' + argCheck)\n    return ''\n  }\n  const temKey = argCheck.toString().split('.')\n  const temLen = temKey.length\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== 'object') {\n        if (argSetValueForce) {\n          console.warn('safeData setValue err：', argData, 'index:', i)\n        }\n        return argValue\n      }\n      argData = argData[temKey[i]] || {}\n    }\n  }\n  if (argSetValueForce) {\n    ;(argData as AnyObject)[temKey[temLen - 1]] = argValue\n  }\n  if (typeof argValue === 'undefined') {\n    return argData[temKey[temLen - 1]]\n  } else {\n    return argData[temKey[temLen - 1]] || argValue\n  }\n}\n/**\n * @function\n * @description 数据安全访问\n * @param  {any} argData  [原始数据]\n * @param  {string} argCheck [要返回的数据，用'.'连接，数组用'.+数字表示']\n * @param  {any} argValue [如果数据有误，返回的值，选填]\n * @param  {boolean|0|1} argSetValueForce [是否强制赋值argValue]\n * @returns {any}\n */\nexport const safeData = (\n  argData: any,\n  argCheck: string,\n  argValue?: any,\n  argSetValueForce?: Bool\n): any => {\n  if (typeof argCheck !== 'string' && typeof argCheck !== 'number') {\n    console.warn('argCheck请传入string当前为:' + argCheck)\n    return ''\n  }\n  const temKey = argCheck.toString().split('.')\n  const temLen = temKey.length\n  if (!argData) {\n    return argValue\n  }\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== 'object') {\n        if (argSetValueForce) {\n          console.warn('safeData setValue err：', argData, 'index:', i)\n        }\n        return argValue\n      }\n      argData = argData[temKey[i]] || {}\n    }\n  }\n  if (argSetValueForce) {\n    argData[temKey[temLen - 1]] = argValue\n  }\n  if (typeof argValue === 'undefined') {\n    return argData[temKey[temLen - 1]]\n  } else {\n    return argData[temKey[temLen - 1]] || argValue\n  }\n}\n\n/**\n * @description obj转url参数\n * @function\n * @param {any} argParams 参数对象\n * @param {boolean?} noMark 默认带?,true时,不带\n * @returns {string}\n */\nexport const setUrlParams = (argParams: any, noMark?: boolean): string => {\n  let re = ''\n  if (!noMark) {\n    re = '?'\n  }\n  let paramsList = Object.keys(argParams)\n  let temLength = paramsList.length\n  if (!temLength) {\n    return ''\n  }\n  paramsList.map((v, k) => {\n    re += v + '=' + argParams[v]\n    if (k < temLength - 1) {\n      re += '&'\n    }\n  })\n  return re\n}\n\n/**\n * @description 获取url参数\n * @function\n * @param {string} argName 要获取的key\n * @param {string} argUrl url数据\n * @returns {string}\n */\nexport const getUrlParam = (\n  argName: string,\n  argUrl: string = globalThis.location.search || ''\n): string => {\n  let result = argUrl.match(new RegExp('[?&]' + argName + '=([^&]+)', 'i'))\n  if (!result) {\n    return ''\n  }\n  return decodeURIComponent(result[1])\n}\n\n/**\n * @description 获取所有url参数，eg: a=1&b=2 to {a:1,b:2}\n * @function\n * @param {string} argData 要处理的数据\n * @returns {any}\n */\nexport const getUrlParamObj = (\n  argData: string = globalThis.location.search || globalThis.location.hash\n): AnyObject => {\n  const res: AnyObject = {}\n  try {\n    argData\n      .slice(argData.indexOf('?') + 1)\n      .split('&')\n      .forEach((v) => {\n        const [key, val] = v.split('=')\n        if (key !== v) {\n          res[key] = decodeURIComponent(val)\n        }\n      })\n    return res\n  } catch (e) {\n    console.error('转换失败', e)\n    return res\n  }\n  // let temObj = new URLSearchParams(argData)\n  // let resObj = {}\n  // for (const [key, value] of temObj) {\n  //   resObj[key] = value\n  // }\n  // return resObj\n}\n\n/**\n * @description 通过正则匹配修改当前页面的url中的参数\n * @function\n * @param  {string} name key\n * @param  {string | number| undefined | null} value 要替换的value\n * @param  {string} url 要替换的网址,默认location.href\n * @returns {string}\n */\nexport const replaceUrlParam = (\n  name: string,\n  value: string | number | undefined | null,\n  url: string = globalThis.location.href || ''\n): string => {\n  const reg = new RegExp('([?]|&)(' + name + '=)([^&#]*)([&]?|$)', 'img')\n  const r = url.match(reg)\n  const search = url.split('?')\n  let strValue: string = url\n  if (value === undefined || value === null) {\n    if (r != null) {\n      strValue = url.replace(reg, (_match, p1, _p2, _p3, p4) => {\n        if (!p4 || !p4.length) {\n          return ''\n        } else if (p1 === p4) {\n          return p1\n        }\n        return p1 + p4\n      })\n      strValue = strValue.replace('?&', '?')\n    }\n  } else if (r != null) {\n    strValue = url.replace(reg, `$1$2${value}$4`)\n  } else if (search.length > 1) {\n    const sub = search[1].split('#')\n    if (sub.length > 1) {\n      if (sub[1].length) {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}#${sub[1]}`\n      } else {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}${sub[1]}`\n      }\n    } else {\n      strValue = `${search[0]}?${search[1]}&${name}=${value}`\n    }\n  } else {\n    // 不存在?时,搜索hash\n    const sub = url.split('#')\n    if (sub.length > 1) {\n      strValue = `${sub[0]}?${name}=${value}#${sub[1]}`\n    } else {\n      strValue = `${url}?${name}=${value}`\n    }\n  }\n  return strValue\n}\n\n/**\n * @function\n * @description 获取简单uuid\n * @returns {string} uuid\n */\nexport const getUuid = (): string => {\n  const S4 = () =>\n    (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  return S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + Date.now()\n}\n\n/**\n * @function\n * @description 获取随机数,含最大值，含最小值\n * @param  {number} min 最小值\n * @param  {number} max 最大值\n * @returns {number}\n */\nexport const randomInt = (min: number = 0, max: number = 100): number => {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  // 含最大值，含最小值\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n/**\n * @function\n * @description 设置env参数，一般在main.js中调用\n * @param  {AnyObject} env 要设置的值\n */\nexport const setEnv = (env: AnyObject) => {\n  ENV = env\n}\n/**\n * @function\n * @description 获取env参数\n * @param  {string} key 要获取的值\n * @returns {string} 获取的值\n */\nexport const getEnv = (key: string): string => {\n  return safeData(ENV, key, '')\n}\n\n/**\n * @function\n * @description 设置object参数,可做运行时缓存\n * @param  {string} key 要设置的key\n * @param  {AnyObject} data 要设置的值\n * @returns {AnyObject}\n */\nexport const setObj = (key: string, data: AnyObject): AnyObject => {\n  if (!key) {\n    DATA_OBJECT = data\n  } else {\n    DATA_OBJECT[key] = data\n  }\n  return DATA_OBJECT\n}\n\n/**\n * @function\n * @description 获取object参数\n * @param  {string} key 要获取的值\n * @param  {string} argData 要合并的值\n * @param  {boolean} isDeepCopy 是否深拷贝\n * @returns {AnyObject} 获取的值\n */\nexport const getObj = (\n  key: string,\n  argData?: AnyObject,\n  isDeepCopy?: Bool\n): AnyObject => {\n  let res: AnyObject = safeData(DATA_OBJECT, key, {})\n  if (argData) {\n    res = Object.assign(res, argData)\n  }\n  if (!isDeepCopy) {\n    return res\n  } else {\n    return JSON.parse(JSON.stringify(res))\n  }\n}\n\n/**\n * @function\n * @description 设置日志输出logLevel 1 error 2 warn 3 info 4 log 5 debug\n * @param {AnyObject} logConfig 重写配置\n * @param {function} logConfig.error 错误日志回调（做额外处理用）\n */\nexport const setLog = (logLevel?: string | number, logConfig?: AnyObject) => {\n  // 1 error 2 warn 3 info 4 log 5 debug\n  logLevel = logLevel || getEnv('VUE_APP_LOG_LEVEL') || 4\n  const logList = ['log', 'info', 'warn', 'error']\n  const log: AnyObject = {}\n  logList.forEach((v) => {\n    log[v] = (console as AnyObject)[v]\n  })\n  for (let key in logConfig) {\n    if ((console as AnyObject)[key]) {\n      ;(console as AnyObject)[key] = (...arg: any[]) => {\n        ;(log as AnyObject)[key](...arg, Error().stack?.split('\\n')[2])\n        // 回调处理\n        logConfig[key] && logConfig[key](...arg, Error().stack?.split('\\n')[2])\n      }\n    }\n  }\n  switch (+logLevel) {\n    case 1:\n      console.warn = () => {}\n    case 2:\n      console.info = () => {}\n    case 3:\n      console.log = () => {}\n    case 4:\n      console.debug = () => {}\n    default:\n      break\n  }\n  // return log\n}\n\n/**\n * 深拷贝函数\n * @param obj 需要拷贝的对象\n * @returns 拷贝后的对象\n */\nexport const deepCopy = (obj: any): any => {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj\n  }\n  let copy = Array.isArray(obj) ? [] : {}\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ;(copy as AnyObject)[key] = deepCopy(obj[key])\n    }\n  }\n  return copy\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"2525","url":"/home/runner/work/utils/utils/src/base.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12414,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":12411,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":26}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":26}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":1}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"deepCopy","ranges":[{"startOffset":929,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"delCookie","ranges":[{"startOffset":958,"endOffset":973,"count":0}],"isBlockCoverage":false},{"functionName":"getCookie","ranges":[{"startOffset":988,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"getEnv","ranges":[{"startOffset":1015,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":1040,"endOffset":1053,"count":0}],"isBlockCoverage":false},{"functionName":"getNetworkStatus","ranges":[{"startOffset":1075,"endOffset":1097,"count":0}],"isBlockCoverage":false},{"functionName":"getObj","ranges":[{"startOffset":1109,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomColor","ranges":[{"startOffset":1141,"endOffset":1161,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexp","ranges":[{"startOffset":1176,"endOffset":1191,"count":0}],"isBlockCoverage":false},{"functionName":"getStorage","ranges":[{"startOffset":1207,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParam","ranges":[{"startOffset":1240,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParamObj","ranges":[{"startOffset":1277,"endOffset":1297,"count":0}],"isBlockCoverage":false},{"functionName":"getUuid","ranges":[{"startOffset":1310,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":1338,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"remInit","ranges":[{"startOffset":1366,"endOffset":1379,"count":0}],"isBlockCoverage":false},{"functionName":"replaceUrlParam","ranges":[{"startOffset":1400,"endOffset":1421,"count":0}],"isBlockCoverage":false},{"functionName":"safe","ranges":[{"startOffset":1431,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"safeData","ranges":[{"startOffset":1455,"endOffset":1469,"count":1}],"isBlockCoverage":true},{"functionName":"setCookie","ranges":[{"startOffset":1484,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"setEnv","ranges":[{"startOffset":1511,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"setLog","ranges":[{"startOffset":1535,"endOffset":1547,"count":0}],"isBlockCoverage":false},{"functionName":"setObj","ranges":[{"startOffset":1559,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"setStorage","ranges":[{"startOffset":1587,"endOffset":1603,"count":0}],"isBlockCoverage":false},{"functionName":"setTitle","ranges":[{"startOffset":1617,"endOffset":1631,"count":0}],"isBlockCoverage":false},{"functionName":"setUrlParams","ranges":[{"startOffset":1649,"endOffset":1667,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":1678,"endOffset":1689,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1920,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2031,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"getNetworkStatus","ranges":[{"startOffset":2127,"endOffset":2155,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexp","ranges":[{"startOffset":2175,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"setTitle","ranges":[{"startOffset":3114,"endOffset":3506,"count":0}],"isBlockCoverage":false},{"functionName":"remInit","ranges":[{"startOffset":3524,"endOffset":3892,"count":0}],"isBlockCoverage":false},{"functionName":"getCookie","ranges":[{"startOffset":3912,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"setCookie","ranges":[{"startOffset":4196,"endOffset":4645,"count":0}],"isBlockCoverage":false},{"functionName":"delCookie","ranges":[{"startOffset":4665,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":4734,"endOffset":5737,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomColor","ranges":[{"startOffset":5762,"endOffset":5863,"count":0}],"isBlockCoverage":false},{"functionName":"getStorage","ranges":[{"startOffset":5884,"endOffset":6071,"count":0}],"isBlockCoverage":false},{"functionName":"setStorage","ranges":[{"startOffset":6092,"endOffset":6282,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":6298,"endOffset":6369,"count":0}],"isBlockCoverage":false},{"functionName":"safe2","ranges":[{"startOffset":6384,"endOffset":7293,"count":0}],"isBlockCoverage":false},{"functionName":"safeData","ranges":[{"startOffset":7312,"endOffset":8204,"count":1},{"startOffset":7400,"endOffset":7431,"count":0},{"startOffset":7433,"endOffset":7537,"count":0},{"startOffset":7635,"endOffset":7661,"count":0},{"startOffset":7680,"endOffset":7980,"count":0},{"startOffset":8005,"endOffset":8054,"count":0},{"startOffset":8094,"endOffset":8139,"count":0},{"startOffset":8186,"endOffset":8197,"count":0}],"isBlockCoverage":true},{"functionName":"setUrlParams","ranges":[{"startOffset":8227,"endOffset":8556,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParam","ranges":[{"startOffset":8578,"endOffset":8790,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParamObj","ranges":[{"startOffset":8815,"endOffset":9210,"count":0}],"isBlockCoverage":false},{"functionName":"replaceUrlParam","ranges":[{"startOffset":9236,"endOffset":10448,"count":0}],"isBlockCoverage":false},{"functionName":"getUuid","ranges":[{"startOffset":10466,"endOffset":10635,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":10655,"endOffset":10791,"count":0}],"isBlockCoverage":false},{"functionName":"setEnv","ranges":[{"startOffset":10808,"endOffset":10833,"count":0}],"isBlockCoverage":false},{"functionName":"getEnv","ranges":[{"startOffset":10850,"endOffset":10895,"count":0}],"isBlockCoverage":false},{"functionName":"setObj","ranges":[{"startOffset":10912,"endOffset":11034,"count":0}],"isBlockCoverage":false},{"functionName":"getObj","ranges":[{"startOffset":11051,"endOffset":11284,"count":0}],"isBlockCoverage":false},{"functionName":"setLog","ranges":[{"startOffset":11301,"endOffset":12110,"count":0}],"isBlockCoverage":false},{"functionName":"deepCopy","ranges":[{"startOffset":12129,"endOffset":12407,"count":0}],"isBlockCoverage":false}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  blobToBase64: () => blobToBase64,\n  blobToFile: () => blobToFile,\n  blobUrlToFile: () => blobUrlToFile,\n  dataURLtoBlob: () => dataURLtoBlob,\n  dlFile: () => dlFile,\n  getDuration: () => getDuration,\n  loadFile: () => loadFile\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar import_base = require(\"./base\");\nconst blobToBase64 = async (argBlob) => {\n  const fileReader = new FileReader();\n  fileReader.readAsDataURL(argBlob);\n  fileReader.onload = (e) => {\n    return Promise.resolve(e && e.target && e.target.result);\n  };\n  fileReader.onerror = () => {\n    return Promise.reject(new Error(\"\\u6587\\u4EF6\\u6D41\\u5F02\\u5E38\"));\n  };\n};\nconst blobUrlToFile = async (argData) => {\n  return new Promise(function(resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", argData, true);\n    xhr.responseType = \"blob\";\n    xhr.onload = function(e) {\n      if (this.status === 200) {\n        return resolve(this.response);\n      }\n    };\n    xhr.onerror = (err) => {\n      return reject(err);\n    };\n    xhr.send();\n  });\n};\nconst dataURLtoBlob = (argData) => {\n  if (!argData.match(/;base64,/)) {\n    return new Blob();\n  }\n  let arr = argData.split(\",\");\n  let mime = (0, import_base.safeData)(arr[0].match(/:(.*?);/), \"1\", \"\");\n  if (!mime) {\n    return new Blob();\n  }\n  let bstr = globalThis.atob(arr[1]);\n  let n = bstr.length;\n  let u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new Blob([u8arr], { type: mime });\n};\nconst blobToFile = (argBlob, argName = Date.now().toString()) => {\n  let file = new File([argBlob], argName, {\n    type: argBlob.type\n  });\n  return file;\n};\nconst dlFile = (argData, argName = Date.now().toString(), argDelTime = 1e4) => {\n  let downNode = globalThis.document.createElement(\"a\");\n  downNode.download = argName;\n  let href = \"\";\n  if (typeof argData === \"string\") {\n    if (argData.startsWith(\"blob:\")) {\n      href = argData;\n    } else if (argData.startsWith(\"data:image\")) {\n      href = argData;\n    }\n    argData = new Blob([argData]);\n  }\n  href = href || URL.createObjectURL(argData);\n  downNode.href = href;\n  setTimeout(() => {\n    URL.revokeObjectURL(href);\n  }, argDelTime);\n  globalThis.document.body.appendChild(downNode);\n  downNode.click();\n  globalThis.document.body.removeChild(downNode);\n};\nconst getDuration = async (argFile) => {\n  let filePath;\n  if (typeof argFile === \"string\") {\n    filePath = argFile;\n  } else {\n    filePath = URL.createObjectURL(argFile);\n  }\n  return new Promise((resolve, reject) => {\n    const audio = new Audio(filePath);\n    audio.addEventListener(\"loadedmetadata\", function(e) {\n      if (filePath.startsWith(\"blob:\")) {\n        URL.revokeObjectURL(filePath);\n      }\n      const duration = audio.duration;\n      audio.src = \"\";\n      return resolve(duration);\n    });\n    setTimeout(() => {\n      return reject(new Error(\"\\u8BFB\\u53D6\\u65F6\\u957F\\u8D85\\u65F6\"));\n    }, 5e3);\n  });\n};\nconst loadFile = (argUrl, argType = \"js\", argOptions = {}) => {\n  let temId = argType + \"-\" + argUrl.split(\"/\").pop();\n  let head = globalThis.document.getElementsByTagName(\"head\")[0];\n  let nodeTag;\n  if (!argOptions.disCheck) {\n    let checkTag = globalThis.document.getElementById(temId);\n    if (checkTag) {\n      if (argOptions.force) {\n        head.removeChild(checkTag);\n      } else {\n        return Promise.resolve({ msg: \"\\u5DF2\\u5B58\\u5728\\uFF0C\\u4E2D\\u65AD\\u52A0\\u8F7D\\uFF01\" });\n      }\n    }\n  }\n  switch (argType) {\n    case \"css\":\n      nodeTag = globalThis.document.createElement(\"link\");\n      nodeTag.type = \"text/css\";\n      nodeTag.rel = \"stylesheet\";\n      nodeTag.href = argUrl;\n      break;\n    case \"js\":\n      nodeTag = globalThis.document.createElement(\"script\");\n      nodeTag.src = argUrl;\n      nodeTag.type = \"text/javascript\";\n      break;\n    default:\n      console.error(\"\\u6682\\u4E0D\\u652F\\u6301\\uFF1A\" + argType);\n      return Promise.reject({ msg: \"\\u6682\\u4E0D\\u652F\\u6301\\uFF1A\" + argType });\n  }\n  nodeTag.id = temId;\n  head.appendChild(nodeTag);\n  return new Promise((resolve) => {\n    if (nodeTag.readyState) {\n      ;\n      nodeTag.onreadystatechange = function() {\n        if (nodeTag.readyState === \"complete\") {\n          ;\n          nodeTag.onreadystatechange = null;\n          return resolve(argUrl);\n        }\n      };\n    } else {\n      nodeTag.onload = function() {\n        return resolve(argUrl);\n      };\n    }\n  });\n};\n","originalCode":"/**\r\n * @module index\r\n * @author linjielinlin 993353454@qq.com\r\n * @date 2022-05-11 22:07:43\r\n * @description 文件相关处理\r\n */\r\n\r\nimport { safeData } from './base'\r\n\r\n/**\r\n * 描述\r\n * @function\r\n * @description blob转base64\r\n * @date 2020-03-01\r\n * @param {Blob} argBlob 要处理的数据\r\n * @returns {Promise} 返回base64\r\n */\r\nexport const blobToBase64 = async (argBlob: Blob): Promise<any> => {\r\n  // eslint-disable-next-line no-undef\r\n  const fileReader = new FileReader()\r\n  fileReader.readAsDataURL(argBlob)\r\n  fileReader.onload = (e) => {\r\n    return Promise.resolve(e && e.target && e.target.result)\r\n  }\r\n  fileReader.onerror = () => {\r\n    return Promise.reject(new Error('文件流异常'))\r\n  }\r\n}\r\n/**\r\n * 描述\r\n * @function\r\n * @description blobUrl 转 file文件\r\n * @date 2020-03-01\r\n * @param {string} argData blobUrl\r\n * @returns {Promise} 返回文件流\r\n */\r\nexport const blobUrlToFile = async (argData: string): Promise<any> => {\r\n  return new Promise(function (resolve, reject) {\r\n    // eslint-disable-next-line no-undef\r\n    var xhr = new XMLHttpRequest()\r\n    xhr.open('GET', argData, true)\r\n    xhr.responseType = 'blob'\r\n    xhr.onload = function (e) {\r\n      if (this.status === 200) {\r\n        return resolve(this.response)\r\n      }\r\n    }\r\n    xhr.onerror = (err) => {\r\n      return reject(err)\r\n    }\r\n    xhr.send()\r\n  })\r\n}\r\n\r\n/**\r\n * @function\r\n * @description 图片dataUrl base64转blob对象\r\n * @param {string} argData dataUrl\r\n * @returns {Blob}\r\n */\r\nexport const dataURLtoBlob = (argData: string): Blob => {\r\n  if (!argData.match(/;base64,/)) {\r\n    return new Blob()\r\n  }\r\n  let arr = argData.split(',')\r\n  let mime: string = safeData(arr[0].match(/:(.*?);/), '1', '')\r\n  if (!mime) {\r\n    return new Blob()\r\n  }\r\n  let bstr = globalThis.atob(arr[1])\r\n  let n = bstr.length\r\n  let u8arr = new Uint8Array(n)\r\n  while (n--) {\r\n    u8arr[n] = bstr.charCodeAt(n)\r\n  }\r\n  return new Blob([u8arr], { type: mime })\r\n}\r\n\r\n/**\r\n * @function\r\n * @description blob转file对象\r\n * @param {Blob} argBlob blob对像\r\n * @param {string} argName filename\r\n * @returns {File}\r\n */\r\nexport const blobToFile = (\r\n  argBlob: Blob,\r\n  argName: string = Date.now().toString()\r\n): File => {\r\n  let file = new File([argBlob], argName, {\r\n    type: argBlob.type,\r\n  })\r\n  return file\r\n}\r\n/**\r\n * @function\r\n * @description 下载文件\r\n * @param {string|Blob|File} argData blob对像/file对象/dataUrl/base64\r\n * @param {string} argName filename\r\n * @param {number} argDelTime 移除dateUrl时间\r\n */\r\nexport const dlFile = (\r\n  argData: string | Blob | File,\r\n  argName: string = Date.now().toString(),\r\n  argDelTime: number = 10000\r\n) => {\r\n  let downNode = globalThis.document.createElement('a')\r\n  downNode.download = argName\r\n  // 字符内容转换为blob地址\r\n  let href = ''\r\n  if (typeof argData === 'string') {\r\n    if (argData.startsWith('blob:')) {\r\n      href = argData\r\n    } else if (argData.startsWith('data:image')) {\r\n      href = argData\r\n    }\r\n    argData = new Blob([argData])\r\n  }\r\n  href = href || URL.createObjectURL(argData)\r\n  downNode.href = href\r\n  setTimeout(() => {\r\n    URL.revokeObjectURL(href)\r\n  }, argDelTime)\r\n  globalThis.document.body.appendChild(downNode)\r\n  downNode.click()\r\n  globalThis.document.body.removeChild(downNode)\r\n}\r\n/**\r\n * @function\r\n * @description 获取音视频时长\r\n * @param {Blob|File|string} argFile 音视频数据，string时为链接\r\n * @returns {Promise} 时长单位秒\r\n */\r\nexport const getDuration = async (\r\n  argFile: Blob | File | string\r\n): Promise<any> => {\r\n  let filePath: string\r\n  if (typeof argFile === 'string') {\r\n    filePath = argFile\r\n  } else {\r\n    filePath = URL.createObjectURL(argFile)\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    const audio = new Audio(filePath)\r\n    audio.addEventListener('loadedmetadata', function (e) {\r\n      if (filePath.startsWith('blob:')) {\r\n        URL.revokeObjectURL(filePath)\r\n      }\r\n      const duration = audio.duration\r\n      audio.src = ''\r\n      return resolve(duration)\r\n    })\r\n    setTimeout(() => {\r\n      return reject(new Error('读取时长超时'))\r\n    }, 5000)\r\n  })\r\n}\r\n/**\r\n * @function\r\n * @description 动态加载html文件标签\r\n * @param {string} argUrl 要加载的url\r\n * @param {string} argType 加载类型 js/css\r\n * @param {object} argOptions{\r\n * disCheck:'不检查是否有相同标签'\r\n * force:'如果有相同标签，先删除再添加'\r\n * } 是否强制添加\r\n * @return {Promise}\r\n */\r\nexport const loadFile = (\r\n  argUrl: string,\r\n  argType: 'js' | 'css' = 'js',\r\n  argOptions: { [key: string]: any } = {}\r\n): Promise<any> => {\r\n  let temId = argType + '-' + argUrl.split('/').pop()\r\n  let head = globalThis.document.getElementsByTagName('head')[0]\r\n  let nodeTag: HTMLLinkElement | HTMLScriptElement\r\n  if (!argOptions.disCheck) {\r\n    let checkTag = globalThis.document.getElementById(temId)\r\n    // 已经存在对应tag\r\n    if (checkTag) {\r\n      if (argOptions.force) {\r\n        head.removeChild(checkTag)\r\n      } else {\r\n        return Promise.resolve({ msg: '已存在，中断加载！' })\r\n      }\r\n    }\r\n  }\r\n  switch (argType) {\r\n    case 'css':\r\n      nodeTag = globalThis.document.createElement('link')\r\n      nodeTag.type = 'text/css'\r\n      nodeTag.rel = 'stylesheet'\r\n      nodeTag.href = argUrl\r\n      break\r\n    case 'js':\r\n      nodeTag = globalThis.document.createElement('script')\r\n      nodeTag.src = argUrl\r\n      nodeTag.type = 'text/javascript'\r\n      break\r\n    default:\r\n      console.error('暂不支持：' + argType)\r\n      return Promise.reject({ msg: '暂不支持：' + argType })\r\n  }\r\n  nodeTag.id = temId\r\n  head.appendChild(nodeTag)\r\n  return new Promise((resolve) => {\r\n    if ((nodeTag as unknown as Document).readyState) {\r\n      // ljTodo 2022-04-12 11:53:50\r\n      // nodeTag.onreadystatechange = function () {\r\n      //   if (\r\n      //     nodeTag.readyState === 'loaded' ||\r\n      //     nodeTag.readyState === 'complete'\r\n      //   ) {\r\n      //     nodeTag.onreadystatechange = null\r\n      //     return resolve(argUrl)\r\n      //   }\r\n      // }\r\n      ;(nodeTag as unknown as Document).onreadystatechange = function () {\r\n        if ((nodeTag as unknown as Document).readyState === 'complete') {\r\n          ;(nodeTag as unknown as Document).onreadystatechange = null\r\n          return resolve(argUrl)\r\n        }\r\n      }\r\n    } else {\r\n      // Others\r\n      nodeTag.onload = function () {\r\n        return resolve(argUrl)\r\n      }\r\n    }\r\n  })\r\n}\r\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"7","url":"/home/runner/work/utils/utils/src/file.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5333,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":5330,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":7}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":7}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"blobToBase64","ranges":[{"startOffset":933,"endOffset":951,"count":1}],"isBlockCoverage":true},{"functionName":"blobToFile","ranges":[{"startOffset":967,"endOffset":983,"count":1}],"isBlockCoverage":true},{"functionName":"blobUrlToFile","ranges":[{"startOffset":1002,"endOffset":1021,"count":1}],"isBlockCoverage":true},{"functionName":"dataURLtoBlob","ranges":[{"startOffset":1040,"endOffset":1059,"count":1}],"isBlockCoverage":true},{"functionName":"dlFile","ranges":[{"startOffset":1071,"endOffset":1083,"count":1}],"isBlockCoverage":true},{"functionName":"getDuration","ranges":[{"startOffset":1100,"endOffset":1117,"count":1}],"isBlockCoverage":true},{"functionName":"loadFile","ranges":[{"startOffset":1131,"endOffset":1145,"count":1}],"isBlockCoverage":true},{"functionName":"blobToBase64","ranges":[{"startOffset":1254,"endOffset":1558,"count":1}],"isBlockCoverage":true},{"functionName":"fileReader.onload","ranges":[{"startOffset":1373,"endOffset":1447,"count":0}],"isBlockCoverage":false},{"functionName":"fileReader.onerror","ranges":[{"startOffset":1472,"endOffset":1555,"count":0}],"isBlockCoverage":false},{"functionName":"blobUrlToFile","ranges":[{"startOffset":1582,"endOffset":1958,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1624,"endOffset":1954,"count":1}],"isBlockCoverage":true},{"functionName":"xhr.onload","ranges":[{"startOffset":1772,"endOffset":1871,"count":0}],"isBlockCoverage":false},{"functionName":"xhr.onerror","ranges":[{"startOffset":1891,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"dataURLtoBlob","ranges":[{"startOffset":1982,"endOffset":2402,"count":2},{"startOffset":2031,"endOffset":2179,"count":1},{"startOffset":2179,"endOffset":2207,"count":0},{"startOffset":2207,"endOffset":2316,"count":1},{"startOffset":2316,"endOffset":2356,"count":9},{"startOffset":2356,"endOffset":2401,"count":1}],"isBlockCoverage":true},{"functionName":"blobToFile","ranges":[{"startOffset":2423,"endOffset":2560,"count":1}],"isBlockCoverage":true},{"functionName":"dlFile","ranges":[{"startOffset":2577,"endOffset":3226,"count":2},{"startOffset":2783,"endOffset":2963,"count":1},{"startOffset":2822,"endOffset":2851,"count":0},{"startOffset":2895,"endOffset":2924,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3048,"endOffset":3090,"count":0}],"isBlockCoverage":false},{"functionName":"getDuration","ranges":[{"startOffset":3248,"endOffset":3853,"count":2},{"startOffset":3320,"endOffset":3405,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3427,"endOffset":3849,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3534,"endOffset":3735,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3753,"endOffset":3838,"count":0}],"isBlockCoverage":false},{"functionName":"loadFile","ranges":[{"startOffset":3872,"endOffset":5326,"count":1},{"startOffset":4165,"endOffset":4360,"count":0},{"startOffset":4390,"endOffset":4569,"count":0},{"startOffset":4731,"endOffset":4886,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4963,"endOffset":5322,"count":1},{"startOffset":5006,"endOffset":5228,"count":0}],"isBlockCoverage":true},{"functionName":"nodeTag.onreadystatechange","ranges":[{"startOffset":5051,"endOffset":5221,"count":0}],"isBlockCoverage":false},{"functionName":"nodeTag.onload","ranges":[{"startOffset":5259,"endOffset":5311,"count":0}],"isBlockCoverage":false}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  decodeHtml: () => decodeHtml,\n  encodeHtml: () => encodeHtml,\n  formatNumber: () => formatNumber,\n  formatSize: () => formatSize,\n  formatTime: () => formatTime,\n  friendlyTime: () => friendlyTime,\n  hideInfo: () => hideInfo,\n  px2vw: () => px2vw,\n  rmbPrice: () => rmbPrice,\n  secondToTime: () => secondToTime,\n  string10to62: () => string10to62,\n  string62to10: () => string62to10,\n  toFixed: () => toFixed,\n  toHump: () => toHump,\n  toLine: () => toLine,\n  toList: () => toList\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar import_base = require(\"./base\");\nconst encodeHtml = (argHtml) => {\n  if (!argHtml || argHtml.length === 0) {\n    return \"\";\n  }\n  const htmlEntities = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    \"'\": \"&apos;\",\n    '\"': \"&quot;\",\n    \" \": \"&nbsp;\",\n    \"\\n\": \"<br>\"\n  };\n  return argHtml.replace(/[&<>\"' \\n]/g, function(char) {\n    return htmlEntities[char];\n  });\n};\nconst decodeHtml = (argHtml) => {\n  const htmlEntities = {\n    quot: '\"',\n    apos: \"'\",\n    lt: \"<\",\n    gt: \">\",\n    nbsp: \" \",\n    amp: \"&\"\n  };\n  return argHtml.replace(/&([^;]+);/g, (match, entity) => {\n    return htmlEntities[entity] || match;\n  });\n};\nconst rmbPrice = (argData, argRate = -1, argUnit = \"\\uFFE5\", argDef = \"--\") => {\n  if (typeof argData === \"string\" || typeof argData === \"number\") {\n    if (!argData && argData !== 0) {\n      return argDef;\n    }\n  } else {\n    return argDef;\n  }\n  argData = Number(argData);\n  if (argRate > -1) {\n    argData = +toFixed(argData, argRate);\n  }\n  return argUnit + argData;\n};\nconst formatTime = (date = +new Date(), fmt = \"YYYY-MM-DD HH:mm:ss\", emptyTip = \"\") => {\n  if (!date && date !== 0) {\n    return emptyTip;\n  }\n  if (isNaN(+date)) {\n    return emptyTip;\n  }\n  if (typeof date === \"number\") {\n    if (date.toString().length === 10) {\n      date = date * 1e3;\n    }\n  }\n  date = new Date(+date);\n  const fmtMap = {\n    \"M+\": date.getMonth() + 1,\n    \"D+\": date.getDate(),\n    \"h+\": date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,\n    \"H+\": date.getHours(),\n    \"m+\": date.getMinutes(),\n    \"s+\": date.getSeconds(),\n    \"q+\": Math.floor((date.getMonth() + 3) / 3),\n    S: date.getMilliseconds()\n  };\n  const week = {\n    0: \"\\u65E5\",\n    1: \"\\u4E00\",\n    2: \"\\u4E8C\",\n    3: \"\\u4E09\",\n    4: \"\\u56DB\",\n    5: \"\\u4E94\",\n    6: \"\\u516D\"\n  };\n  const temY = fmt.match(/(Y+)/);\n  if (temY) {\n    fmt = fmt.replace(\n      temY[0],\n      (date.getFullYear() + \"\").substring(4 - temY[0].length)\n    );\n  }\n  const temWeek = fmt.match(/(E+)/);\n  if (temWeek) {\n    const temWeekName = [\"\", \"\\u5468\"];\n    fmt = fmt.replace(\n      temWeek[0],\n      (temWeekName[temWeek[0].length] || \"\\u661F\\u671F\") + (0, import_base.safeData)(week, date.getDay().toString(), \"\")\n    );\n  }\n  for (let k in fmtMap) {\n    let temMatch = fmt.match(new RegExp(\"(\" + k + \")\"));\n    if (temMatch) {\n      fmt = fmt.replace(\n        temMatch[0],\n        temMatch[0].length === 1 ? fmtMap[k].toString() : (\"00\" + fmtMap[k].toString()).substring((\"\" + fmtMap[k]).length)\n      );\n    }\n  }\n  return fmt;\n};\nconst friendlyTime = (date = +new Date(), fmt = \"YYYY-MM-DD HH:mm:ss\", emptyTip = \"\") => {\n  if (!date && date !== 0) {\n    return emptyTip;\n  }\n  if (isNaN(+date)) {\n    return emptyTip;\n  }\n  if (typeof date === \"number\" || typeof date === \"string\") {\n    if (date.toString().length === 10) {\n      date = date.toString() + \"000\";\n    }\n  }\n  date = new Date(+date);\n  let diff = (new Date().getTime() - date.getTime()) / 1e3;\n  let dayDiff = Math.floor(diff / 86400);\n  let isValidDate = Object.prototype.toString.call(date) === \"[object Date]\" && !isNaN(date.getTime());\n  if (!isValidDate) {\n    console.warn(\"friendlyTime:\", \"not a valid date\");\n    return emptyTip || \"--\";\n  }\n  if (isNaN(dayDiff) || dayDiff < 0 || dayDiff >= 365) {\n    return formatTime(date, fmt);\n  }\n  return (dayDiff === 0 && (diff < 60 && \"\\u521A\\u521A\" || diff < 120 && \"1\\u5206\\u949F\\u524D\" || diff < 3600 && Math.floor(diff / 60) + \"\\u5206\\u949F\\u524D\" || diff < 7200 && \"1\\u5C0F\\u65F6\\u524D\" || diff < 86400 && Math.floor(diff / 3600) + \"\\u5C0F\\u65F6\\u524D\") || dayDiff === 1 && \"\\u6628\\u5929\" || dayDiff < 7 && dayDiff + \"\\u5929\\u524D\" || dayDiff < 31 && Math.ceil(dayDiff / 7) + \"\\u5468\\u524D\" || dayDiff < 365 && Math.ceil(dayDiff / 31) + \"\\u6708\\u524D\").toString();\n};\nconst px2vw = (argPx, argWith = 375, argNum = 6, argUnit = \"vw\") => {\n  return +toFixed(100 / argWith * argPx, argNum) + argUnit;\n};\nconst secondToTime = (argData, argType = \"y\", argOption = {}) => {\n  let res = [];\n  let list = [\n    {\n      size: 1,\n      type: \"s\",\n      unit: \"\",\n      index: 0\n    },\n    {\n      size: 60,\n      unit: \":\",\n      type: \"m\",\n      index: 1\n    },\n    {\n      size: 60,\n      unit: \":\",\n      type: \"h\",\n      index: 2\n    },\n    {\n      size: 24,\n      unit: \":\",\n      type: \"d\",\n      index: 3\n    },\n    {\n      size: 30,\n      unit: \":\",\n      type: \"M\",\n      index: 4\n    },\n    {\n      size: 12,\n      unit: \":\",\n      type: \"y\",\n      index: 5\n    }\n  ];\n  let temLen = list.length;\n  let second = argData;\n  let size = 1;\n  let unitList = (argOption == null ? void 0 : argOption.unit) || [\"\\u5E74\", \"\\u6708\", \"\\u5929\", \"\\u65F6\", \"\\u5206\", \"\\u79D2\"];\n  let index = 0;\n  for (let i = 0; i < temLen; i++) {\n    let lastSize = size;\n    if (argType === list[i].type) {\n      let temTime = Math.floor(second / lastSize);\n      if (temTime < 10) {\n        temTime = \"0\" + temTime;\n      }\n      res.unshift(temTime);\n      index = temLen - i - 1;\n      break;\n    }\n    size = size * list[i + 1].size;\n    let time = Math.floor(second % size / lastSize);\n    if (time < 10) {\n      time = \"0\" + time;\n    }\n    res.unshift(time);\n  }\n  let timeText = \"\";\n  let isZero = true;\n  res.map((v, k) => {\n    if (!+v && isZero) {\n    } else {\n      isZero = false;\n      timeText += v + unitList[index + k];\n    }\n  });\n  return timeText;\n};\nconst formatSize = (argData, argNum = 2, argIndex = 0, argRate = 1024, unit = [\"B\", \"K\", \"M\", \"G\", \"T\", \"P\"]) => {\n  let list = unit;\n  if (!argData) {\n    return \"0\" + list[argIndex];\n  }\n  let len = list.length;\n  let nowIndex = len - 1;\n  let temData = 0;\n  for (let i = 0; i < len; i++) {\n    temData = argData / Math.pow(argRate, i);\n    if (temData < argRate) {\n      nowIndex = argIndex + i;\n      break;\n    }\n  }\n  return +toFixed(temData, argNum) + list[nowIndex];\n};\nconst formatNumber = (argData, argNum = 2) => {\n  if (argData < 1e3) {\n    return argData.toString();\n  } else if (argData < 1e4) {\n    return +toFixed(argData / 1e3, argNum) + \"k\";\n  } else {\n    return +toFixed(argData / 1e4, argNum) + \"w\";\n  }\n};\nfunction toList(map, getItem) {\n  const list = [];\n  Object.keys(map).forEach((key) => {\n    const item = getItem(key, map[key]);\n    list.push(item);\n  });\n  return list;\n}\nconst hideInfo = (argData = \"\", argStart = 3, argEnd = 4) => {\n  argData = String(argData);\n  let temLen = argData.length;\n  let temSL = argData.length - argEnd - argStart;\n  let start = \"\";\n  if (temSL > 0) {\n    for (let i = 0; i < temSL; i++) {\n      start += \"*\";\n    }\n    argData = argData.substring(0, argStart) + start + argData.substring(temLen - argEnd, temLen);\n  }\n  return argData;\n};\nconst string10to62 = (argData) => {\n  let chars = \"0123456789abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ\".split(\"\");\n  let radix = chars.length;\n  let data = +argData;\n  let arr = [];\n  do {\n    let mod = data % radix;\n    data = (data - mod) / radix;\n    arr.unshift(chars[mod]);\n  } while (data);\n  return arr.join(\"\");\n};\nconst string62to10 = (argData) => {\n  let chars = \"0123456789abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ\";\n  let radix = chars.length;\n  let len = argData.length;\n  let i = 0;\n  let resNum = 0;\n  while (i < len) {\n    resNum += Math.pow(radix, i++) * chars.indexOf(argData.charAt(len - i) || \"0\");\n  }\n  return resNum;\n};\nconst toFixed = (argData, argNum = 2, argType = \"round\") => {\n  if (isNaN(+argData)) {\n    return \"\";\n  }\n  const data = Math[argType](+argData * Math.pow(10, argNum)) / Math.pow(10, argNum);\n  return data.toFixed(argNum);\n};\nconst toLine = (argData, argUnit = \"_\") => {\n  return argData.replace(/([A-Z])/g, argUnit + \"$1\").toLowerCase();\n};\nconst toHump = (argData, argUnit = \"_\") => {\n  return argData.replace(\n    new RegExp(\"\\\\\" + argUnit + \"(\\\\w)\", \"g\"),\n    (_, letter) => {\n      return letter.toUpperCase();\n    }\n  );\n};\n","originalCode":"/**\r\n * @module index\r\n * @author linjielinlin 993353454@qq.com\r\n * @date 2022-05-11 22:07:43\r\n * @description 类型转换相关处理\r\n */\r\nimport { safeData } from './base'\r\nimport { StringObject } from './types'\r\n\r\n/**\r\n * @function\r\n * @description 转义html标签\r\n * @param  {string} argHtml 需要转义的文本\r\n * @returns {string}\r\n */\r\nexport const encodeHtml = (argHtml: string): string => {\r\n  if (!argHtml || argHtml.length === 0) {\r\n    return ''\r\n  }\r\n  const htmlEntities: StringObject = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    \"'\": '&apos;',\r\n    '\"': '&quot;',\r\n    ' ': '&nbsp;',\r\n    '\\n': '<br>',\r\n  }\r\n  return argHtml.replace(/[&<>\"' \\n]/g, function (char) {\r\n    return htmlEntities[char]\r\n  })\r\n}\r\n\r\n/**\r\n * @function\r\n * @description 反转义html标签\r\n * @param  {string} argHtml 需要反转义的文本\r\n * @returns {string}\r\n */\r\nexport const decodeHtml = (argHtml: string): string => {\r\n  const htmlEntities: StringObject = {\r\n    quot: '\"',\r\n    apos: \"'\",\r\n    lt: '<',\r\n    gt: '>',\r\n    nbsp: ' ',\r\n    amp: '&',\r\n  }\r\n  return argHtml.replace(/&([^;]+);/g, (match, entity) => {\r\n    return htmlEntities[entity] || match\r\n  })\r\n}\r\n\r\n/**\r\n * @function\r\n * @description 显示人民币价格\r\n * @param  {unknown} argData 价格\r\n * @param  {number} argRate -1 保留多少位小数\r\n * @param  {string} argUnit ￥ 单位\r\n * @param  {string} argDef 空数据默认值\r\n * @returns {string} eg: ￥100\r\n */\r\nexport const rmbPrice = (\r\n  argData: unknown,\r\n  argRate: number = -1,\r\n  argUnit: string = '￥',\r\n  argDef: string = '--'\r\n): string => {\r\n  if (typeof argData === 'string' || typeof argData === 'number') {\r\n    if (!argData && argData !== 0) {\r\n      return argDef\r\n    }\r\n  } else {\r\n    return argDef\r\n  }\r\n  argData = Number(argData)\r\n  if (argRate > -1) {\r\n    argData = +toFixed(argData as number, argRate)\r\n  }\r\n  return argUnit + argData\r\n}\r\n\r\n/**\r\n * @description 日期格式化显示\r\n * @function\r\n * @param  {string|number} date 时间对象\\时间戳，默认当前时间\r\n * @param  {string} fmt 格式化符串，默认'YYYY-MM-DD HH:mm:ss' E为星期数，EEE:星期一 q为季度，S为毫秒数\r\n * @param  {string} emptyTip date为false时，默认''\r\n * @returns {string}\r\n */\r\nexport const formatTime = (\r\n  date: string | number | Date = +new Date(),\r\n  fmt: string = 'YYYY-MM-DD HH:mm:ss',\r\n  emptyTip: string = ''\r\n): string => {\r\n  if (!date && date !== 0) {\r\n    return emptyTip\r\n  }\r\n  if (isNaN(+date)) {\r\n    return emptyTip\r\n  }\r\n  if (typeof date === 'number') {\r\n    if (date.toString().length === 10) {\r\n      date = date * 1000\r\n    }\r\n  }\r\n  date = new Date(+date)\r\n  const fmtMap: { [key: string]: number } = {\r\n    'M+': date.getMonth() + 1,\r\n    'D+': date.getDate(),\r\n    'h+': date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,\r\n    'H+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds(),\r\n    'q+': Math.floor((date.getMonth() + 3) / 3),\r\n    S: date.getMilliseconds(),\r\n  }\r\n  const week = {\r\n    0: '\\u65e5',\r\n    1: '\\u4e00',\r\n    2: '\\u4e8c',\r\n    3: '\\u4e09',\r\n    4: '\\u56db',\r\n    5: '\\u4e94',\r\n    6: '\\u516d',\r\n  }\r\n  const temY = fmt.match(/(Y+)/)\r\n  if (temY) {\r\n    fmt = fmt.replace(\r\n      temY[0],\r\n      (date.getFullYear() + '').substring(4 - temY[0].length)\r\n    )\r\n  }\r\n  const temWeek = fmt.match(/(E+)/)\r\n  if (temWeek) {\r\n    const temWeekName = ['', '\\u5468']\r\n    fmt = fmt.replace(\r\n      temWeek[0],\r\n      (temWeekName[temWeek[0].length] || '\\u661f\\u671f') +\r\n        safeData(week, date.getDay().toString(), '')\r\n    )\r\n  }\r\n  for (let k in fmtMap) {\r\n    let temMatch = fmt.match(new RegExp('(' + k + ')'))\r\n    if (temMatch) {\r\n      fmt = fmt.replace(\r\n        temMatch[0],\r\n        temMatch[0].length === 1\r\n          ? fmtMap[k].toString()\r\n          : ('00' + fmtMap[k].toString()).substring(('' + fmtMap[k]).length)\r\n      )\r\n    }\r\n  }\r\n  return fmt\r\n}\r\n\r\n/**\r\n * @description 日期格式化友好显示 刚刚 x分钟前 ...，超过一年的按 fmt来格式化\r\n * @function\r\n * @param  {string|number|Date} date 时间对象\\时间戳，默认当前时间\r\n * @param  {string} fmt 格式化符串，默认'YYYY-MM-DD HH:mm:ss'\r\n * @param  {string} emptyTip date为false时，默认''\r\n * @returns {string}\r\n */\r\nexport const friendlyTime = (\r\n  date: string | number | Date = +new Date(),\r\n  fmt: string = 'YYYY-MM-DD HH:mm:ss',\r\n  emptyTip: string = ''\r\n): string => {\r\n  if (!date && date !== 0) {\r\n    return emptyTip\r\n  }\r\n  if (isNaN(+date)) {\r\n    return emptyTip\r\n  }\r\n  if (typeof date === 'number' || typeof date === 'string') {\r\n    if (date.toString().length === 10) {\r\n      date = date.toString() + '000'\r\n    }\r\n  }\r\n  date = new Date(+date)\r\n  let diff = (new Date().getTime() - date.getTime()) / 1000\r\n  let dayDiff = Math.floor(diff / 86400)\r\n  let isValidDate =\r\n    Object.prototype.toString.call(date) === '[object Date]' &&\r\n    !isNaN(date.getTime())\r\n  if (!isValidDate) {\r\n    console.warn('friendlyTime:', 'not a valid date')\r\n    return emptyTip || '--'\r\n  }\r\n  if (isNaN(dayDiff) || dayDiff < 0 || dayDiff >= 365) {\r\n    return formatTime(date, fmt)\r\n  }\r\n  return (\r\n    (dayDiff === 0 &&\r\n      ((diff < 60 && '刚刚') ||\r\n        (diff < 120 && '1分钟前') ||\r\n        (diff < 3600 && Math.floor(diff / 60) + '分钟前') ||\r\n        (diff < 7200 && '1小时前') ||\r\n        (diff < 86400 && Math.floor(diff / 3600) + '小时前'))) ||\r\n    (dayDiff === 1 && '昨天') ||\r\n    (dayDiff < 7 && dayDiff + '天前') ||\r\n    (dayDiff < 31 && Math.ceil(dayDiff / 7) + '周前') ||\r\n    (dayDiff < 365 && Math.ceil(dayDiff / 31) + '月前')\r\n  ).toString()\r\n}\r\n/**\r\n * @function\r\n * @description px转vw\r\n * @param {number} argPx px\r\n * @param {number} argWith px对应最大宽度\r\n * @param {number} argNum 保留小数\r\n * @param {string} argUnit 单位 'vw'||'%'\r\n * @return {string}\r\n */\r\nexport const px2vw = (\r\n  argPx: number,\r\n  argWith: number = 375,\r\n  argNum: number = 6,\r\n  argUnit: string = 'vw'\r\n): string => {\r\n  return +toFixed((100 / argWith) * argPx, argNum) + argUnit\r\n}\r\n/**\r\n * @function\r\n * @description 秒转倒计时\r\n * @param {number} argData 秒数\r\n * @param {string} argType 's,m,h,d,M,y 对应 秒 分 时 天 月 年'\r\n * @param {object} argOption 额外的处理argOption.unit 单位['年', '月', '天', '时', '分', '秒']\r\n * @returns {string}\r\n */\r\nexport const secondToTime = (\r\n  argData: number,\r\n  argType: string = 'y',\r\n  argOption: { unit?: string[] } = {}\r\n): string => {\r\n  let res = []\r\n  let list = [\r\n    {\r\n      size: 1,\r\n      type: 's',\r\n      unit: '',\r\n      index: 0,\r\n    },\r\n    {\r\n      size: 60,\r\n      unit: ':',\r\n      type: 'm',\r\n      index: 1,\r\n    },\r\n    {\r\n      size: 60,\r\n      unit: ':',\r\n      type: 'h',\r\n      index: 2,\r\n    },\r\n    {\r\n      size: 24,\r\n      unit: ':',\r\n      type: 'd',\r\n      index: 3,\r\n    },\r\n    {\r\n      size: 30,\r\n      unit: ':',\r\n      type: 'M',\r\n      index: 4,\r\n    },\r\n    {\r\n      size: 12,\r\n      unit: ':',\r\n      type: 'y',\r\n      index: 5,\r\n    },\r\n  ]\r\n  let temLen = list.length\r\n  let second = argData\r\n  let size = 1\r\n  let unitList = argOption?.unit || ['年', '月', '天', '时', '分', '秒']\r\n  let index = 0\r\n  for (let i = 0; i < temLen; i++) {\r\n    let lastSize = size\r\n    if (argType === list[i].type) {\r\n      let temTime: number | string = Math.floor(second / lastSize)\r\n      if (temTime < 10) {\r\n        temTime = '0' + temTime\r\n      }\r\n      res.unshift(temTime)\r\n      index = temLen - i - 1\r\n      break\r\n    }\r\n    size = size * list[i + 1].size\r\n    let time: number | string = Math.floor((second % size) / lastSize)\r\n    if (time < 10) {\r\n      time = '0' + time\r\n    }\r\n    res.unshift(time)\r\n  }\r\n  let timeText = ''\r\n  let isZero = true\r\n  res.map((v, k) => {\r\n    if (!+v && isZero) {\r\n    } else {\r\n      isZero = false\r\n      timeText += v + unitList[index + k]\r\n    }\r\n  })\r\n  return timeText\r\n}\r\n/**\r\n * @function\r\n * @description 容量单位转换\r\n * @param {number} argData byte数据\r\n * @param {number} argNum 保留小数位\r\n * @param {number} argIndex 起始单位偏移eg: 0:b 1:k 2:m\r\n * @param {number} argRate 进制\r\n * @param {string[]} unit 进制\r\n * @returns {string} 计算结果\r\n */\r\nexport const formatSize = (\r\n  argData: number,\r\n  argNum: number = 2,\r\n  argIndex: number = 0,\r\n  argRate: number = 1024,\r\n  unit: string[] = ['B', 'K', 'M', 'G', 'T', 'P']\r\n): string => {\r\n  let list = unit\r\n  if (!argData) {\r\n    return '0' + list[argIndex]\r\n  }\r\n  let len = list.length\r\n  let nowIndex = len - 1\r\n  let temData: number = 0\r\n  for (let i = 0; i < len; i++) {\r\n    temData = argData / Math.pow(argRate, i)\r\n    if (temData < argRate) {\r\n      nowIndex = argIndex + i\r\n      break\r\n    }\r\n  }\r\n  return +toFixed(temData, argNum) + list[nowIndex]\r\n}\r\n/**\r\n * @function\r\n * @description 数量单位转换k/w\r\n * @param {number} argData 数据\r\n * @param {number} argNum 保留小数位\r\n * @returns {string} 计算结果\r\n */\r\nexport const formatNumber = (argData: number, argNum: number = 2): string => {\r\n  if (argData < 1000) {\r\n    return argData.toString()\r\n  } else if (argData < 10000) {\r\n    return +toFixed(argData / 1000, argNum) + 'k'\r\n  } else {\r\n    return +toFixed(argData / 10000, argNum) + 'w'\r\n  }\r\n}\r\n\r\n/**\r\n * object 转为 list，list item 具体是什么取决于传入的 getItem 函数\r\n * @param map\r\n * @param getItem\r\n * @return getItem()[]\r\n */\r\nexport function toList<V, K extends string, Item>(\r\n  map: Record<K, V>,\r\n  getItem: (key: K, value: V) => Item\r\n) {\r\n  const list = [] as Item[]\r\n  Object.keys(map).forEach((key: any) => {\r\n    // @ts-ignore, trust me.\r\n    const item = getItem(key, map[key])\r\n    list.push(item)\r\n  })\r\n  return list\r\n}\r\n\r\n/**\r\n * 描述\r\n * @function\r\n * @description 数据中间加星号\r\n * @param {string|number} argData 要处理的数据\r\n * @param {number} argStart=3 前端显示多少位\r\n * @param {number} argEnd=4 后面显示多少位\r\n * @returns {string} 返回处理好的数据\r\n */\r\nexport const hideInfo = (\r\n  argData: string | number = '',\r\n  argStart: number = 3,\r\n  argEnd: number = 4\r\n): string => {\r\n  argData = String(argData)\r\n  let temLen = argData.length\r\n  let temSL = argData.length - argEnd - argStart\r\n  let start = ''\r\n  if (temSL > 0) {\r\n    for (let i = 0; i < temSL; i++) {\r\n      start += '*'\r\n    }\r\n    argData =\r\n      argData.substring(0, argStart) +\r\n      start +\r\n      argData.substring(temLen - argEnd, temLen)\r\n  }\r\n  return argData\r\n}\r\n\r\n/**\r\n * 描述\r\n * @function\r\n * @description 10进制转62进制,用于短网址转换\r\n * @date 2020-03-01\r\n * @param {number|string} argData 要处理的数据\r\n * @returns {string} 返回处理好的数据\r\n */\r\nexport const string10to62 = (argData: number | string): string => {\r\n  let chars =\r\n    '0123456789abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ'.split('')\r\n  let radix = chars.length\r\n  let data = +argData\r\n  let arr = []\r\n  do {\r\n    let mod = data % radix\r\n    data = (data - mod) / radix\r\n    arr.unshift(chars[mod])\r\n  } while (data)\r\n  return arr.join('')\r\n}\r\n\r\n/**\r\n * 描述\r\n * @function\r\n * @description 62进制转10进制,用于短网址转换\r\n * @date 2020-03-01\r\n * @param {string} argData 要处理的数据\r\n * @returns {number} 返回处理好的数据\r\n */\r\nexport const string62to10 = (argData: string): number => {\r\n  let chars = '0123456789abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ'\r\n  let radix = chars.length\r\n  let len = argData.length\r\n  let i = 0\r\n  let resNum = 0\r\n  while (i < len) {\r\n    resNum +=\r\n      Math.pow(radix, i++) * chars.indexOf(argData.charAt(len - i) || '0')\r\n  }\r\n  return resNum\r\n}\r\n\r\n/**\r\n * 描述\r\n * @function\r\n * @description toFixed处理\r\n * @date 2020-03-01\r\n * @param {string|number} argData 要处理的数据\r\n * @param {number} argNum 要保留位数,默认返回2位小数\r\n * @param {string} argType 返回类型，round:默认四舍五入,floor:向下取整,ceil:向上取整,abs:绝对值\r\n * @returns {string} 返回处理好的数据\r\n */\r\nexport const toFixed = (\r\n  argData: string | number,\r\n  argNum: number = 2,\r\n  argType: 'round' | 'floor' | 'ceil' | 'abs' = 'round'\r\n): string => {\r\n  if (isNaN(+argData)) {\r\n    return ''\r\n  }\r\n  const data =\r\n    Math[argType](+argData * Math.pow(10, argNum)) / Math.pow(10, argNum)\r\n  return data.toFixed(argNum)\r\n}\r\n\r\n/**\r\n * @function\r\n * @description 将驼峰字符串转换为下划线字符串\r\n * @param {string} argData 要转换的字符串\r\n * @param {string} argUnit 要转换的字符，默认为“_”\r\n * @return {string} 转换后的下划线字符串\r\n */\r\nexport const toLine = (argData: string, argUnit: string = '_'): string => {\r\n  return argData.replace(/([A-Z])/g, argUnit + '$1').toLowerCase()\r\n}\r\n\r\n/**\r\n * @function\r\n * @description 将下划线字符串转换为驼峰字符串\r\n * @param {string} argData 要转换的字符串\r\n * @param {string} argUnit 要转换的字符，默认为“_”\r\n * @return {string} 转换后的驼峰字符串\r\n */\r\nexport const toHump = (argData: string, argUnit: string = '_'): string => {\r\n  return argData.replace(\r\n    new RegExp('\\\\' + argUnit + '(\\\\w)', 'g'),\r\n    (_, letter) => {\r\n      return letter.toUpperCase()\r\n    }\r\n  )\r\n}\r\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"2527","url":"/home/runner/work/utils/utils/src/transform.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9315,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":9312,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":16}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":16}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":0}],"isBlockCoverage":false},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"decodeHtml","ranges":[{"startOffset":931,"endOffset":947,"count":0}],"isBlockCoverage":false},{"functionName":"encodeHtml","ranges":[{"startOffset":963,"endOffset":979,"count":0}],"isBlockCoverage":false},{"functionName":"formatNumber","ranges":[{"startOffset":997,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"formatSize","ranges":[{"startOffset":1031,"endOffset":1047,"count":0}],"isBlockCoverage":false},{"functionName":"formatTime","ranges":[{"startOffset":1063,"endOffset":1079,"count":0}],"isBlockCoverage":false},{"functionName":"friendlyTime","ranges":[{"startOffset":1097,"endOffset":1115,"count":0}],"isBlockCoverage":false},{"functionName":"hideInfo","ranges":[{"startOffset":1129,"endOffset":1143,"count":0}],"isBlockCoverage":false},{"functionName":"px2vw","ranges":[{"startOffset":1154,"endOffset":1165,"count":0}],"isBlockCoverage":false},{"functionName":"rmbPrice","ranges":[{"startOffset":1179,"endOffset":1193,"count":0}],"isBlockCoverage":false},{"functionName":"secondToTime","ranges":[{"startOffset":1211,"endOffset":1229,"count":0}],"isBlockCoverage":false},{"functionName":"string10to62","ranges":[{"startOffset":1247,"endOffset":1265,"count":0}],"isBlockCoverage":false},{"functionName":"string62to10","ranges":[{"startOffset":1283,"endOffset":1301,"count":0}],"isBlockCoverage":false},{"functionName":"toFixed","ranges":[{"startOffset":1314,"endOffset":1327,"count":0}],"isBlockCoverage":false},{"functionName":"toHump","ranges":[{"startOffset":1339,"endOffset":1351,"count":0}],"isBlockCoverage":false},{"functionName":"toLine","ranges":[{"startOffset":1363,"endOffset":1375,"count":0}],"isBlockCoverage":false},{"functionName":"toList","ranges":[{"startOffset":1387,"endOffset":1399,"count":0}],"isBlockCoverage":false},{"functionName":"encodeHtml","ranges":[{"startOffset":1506,"endOffset":1833,"count":0}],"isBlockCoverage":false},{"functionName":"decodeHtml","ranges":[{"startOffset":1854,"endOffset":2092,"count":0}],"isBlockCoverage":false},{"functionName":"rmbPrice","ranges":[{"startOffset":2111,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"formatTime","ranges":[{"startOffset":2488,"endOffset":3978,"count":0}],"isBlockCoverage":false},{"functionName":"friendlyTime","ranges":[{"startOffset":4001,"endOffset":5237,"count":0}],"isBlockCoverage":false},{"functionName":"px2vw","ranges":[{"startOffset":5253,"endOffset":5370,"count":0}],"isBlockCoverage":false},{"functionName":"secondToTime","ranges":[{"startOffset":5393,"endOffset":6813,"count":0}],"isBlockCoverage":false},{"functionName":"formatSize","ranges":[{"startOffset":6834,"endOffset":7291,"count":0}],"isBlockCoverage":false},{"functionName":"formatNumber","ranges":[{"startOffset":7314,"endOffset":7541,"count":0}],"isBlockCoverage":false},{"functionName":"toList","ranges":[{"startOffset":7543,"endOffset":7716,"count":0}],"isBlockCoverage":false},{"functionName":"hideInfo","ranges":[{"startOffset":7734,"endOffset":8113,"count":0}],"isBlockCoverage":false},{"functionName":"string10to62","ranges":[{"startOffset":8136,"endOffset":8447,"count":0}],"isBlockCoverage":false},{"functionName":"string62to10","ranges":[{"startOffset":8470,"endOffset":8778,"count":0}],"isBlockCoverage":false},{"functionName":"toFixed","ranges":[{"startOffset":8796,"endOffset":9004,"count":0}],"isBlockCoverage":false},{"functionName":"toLine","ranges":[{"startOffset":9021,"endOffset":9120,"count":0}],"isBlockCoverage":false},{"functionName":"toHump","ranges":[{"startOffset":9137,"endOffset":9308,"count":0}],"isBlockCoverage":false}]}}]},{"leaks":false,"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1679538734917,"runtime":379,"slow":false,"start":1679538734538},"skipped":false,"testFilePath":"/home/runner/work/utils/utils/test/encrypt.spec.ts","testResults":[{"rowKey":0,"ancestorTitles":["encrypt"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"encrypt md5","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"md5"},{"rowKey":1,"ancestorTitles":["encrypt"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"encrypt enBase64","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"enBase64"},{"rowKey":2,"ancestorTitles":["encrypt"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"encrypt deBase64","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"deBase64"},{"rowKey":3,"ancestorTitles":["encrypt"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"encrypt encode","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"encode"},{"rowKey":4,"ancestorTitles":["encrypt"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"encrypt decode","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"decode"},{"rowKey":5,"ancestorTitles":["encrypt"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"encrypt key by","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"key by"},{"rowKey":6,"ancestorTitles":["encrypt"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"encrypt aesInit","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"aesInit"}],"failureMessage":null,"v8Coverage":[{"codeTransformResult":{"code":"var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key2 of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key2) && key2 !== except)\n        __defProp(to, key2, { get: () => from[key2], enumerable: !(desc = __getOwnPropDesc(from, key2)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  aesInit: () => aesInit,\n  deAes: () => deAes,\n  deBase64: () => deBase64,\n  decode: () => decode,\n  enAes: () => enAes,\n  enBase64: () => enBase64,\n  encode: () => encode,\n  md5: () => md5\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar import_crypto_js = __toESM(require(\"crypto-js\"));\nlet key = \"by\";\nlet iv = import_crypto_js.default.enc.Utf8.parse(\"linj\");\nfunction aesInit(argKey, argIv) {\n  key = argKey;\n  iv = import_crypto_js.default.enc.Utf8.parse(argIv);\n}\nconst enAes = (word) => import_crypto_js.default.AES.encrypt(word.toString(), key, {\n  iv,\n  mode: import_crypto_js.default.mode.CBC,\n  padding: import_crypto_js.default.pad.Pkcs7\n}).toString();\nconst deAes = (word) => import_crypto_js.default.AES.decrypt(word, key, {\n  iv,\n  mode: import_crypto_js.default.mode.CBC,\n  padding: import_crypto_js.default.pad.Pkcs7\n}).toString(import_crypto_js.default.enc.Utf8);\nconst md5 = (argData) => import_crypto_js.default.MD5(argData).toString();\nconst enBase64 = (argData) => {\n  argData = argData.toString() || \"\";\n  let wordArray = import_crypto_js.default.enc.Utf8.parse(argData);\n  let base64 = import_crypto_js.default.enc.Base64.stringify(wordArray);\n  return base64;\n};\nconst deBase64 = (argData) => {\n  argData = argData || \"\";\n  let wordArray = import_crypto_js.default.enc.Base64.parse(argData);\n  let base64 = wordArray.toString(import_crypto_js.default.enc.Utf8);\n  return base64;\n};\nconst encode = (argData, argType = \"base64\") => {\n  switch (argType) {\n    case \"base64\":\n      return enBase64(argData);\n    case \"aes\":\n      return enAes(argData);\n    default:\n      return argData.toString();\n  }\n};\nconst decode = (argData, argType = \"base64\") => {\n  switch (argType) {\n    case \"base64\":\n      return deBase64(argData);\n    case \"aes\":\n      return deAes(argData);\n    default:\n      return argData;\n  }\n};\n","originalCode":"/**\n * @module\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 需安装crypto-js依赖，小程序引用crypto-js比较大，如果只是base64的转换，引用base64.js即可\n */\nimport CryptoJS from 'crypto-js'\n\nlet key = 'by'\nlet iv = CryptoJS.enc.Utf8.parse('linj')\n/**\n * @function\n * @description aes初始化,选定aes加密码方式后，先执行初始化\n * @param {string} argKey 密钥\n * @param {string} argIv 密钥偏移量\n */\nexport function aesInit(argKey: string, argIv: string) {\n  key = argKey //密钥\n  iv = CryptoJS.enc.Utf8.parse(argIv) // 十六进制数作为密钥偏移量\n}\n\n/**\n * @function\n * @description aes加密\n * @param {string | number} word 待加密内容\n * @returns {string} 已加密内容\n */\nexport const enAes = (word: string | number): string =>\n  CryptoJS.AES.encrypt(word.toString(), key, {\n    iv: iv,\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.Pkcs7,\n  }).toString()\n/**\n * @function\n * @description aes解密\n * @param {string} word 待解密内容\n * @returns {string} 已解密内容\n */\nexport const deAes = (word: string): string =>\n  CryptoJS.AES.decrypt(word, key, {\n    iv: iv,\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.Pkcs7,\n  }).toString(CryptoJS.enc.Utf8)\n/**\n * @function\n * @description md5 加密\n * @param {string | CryptoJS.lib.WordArray} argData 待加密内容\n * @returns {string} 已加密内容\n */\nexport const md5 = (argData: string | CryptoJS.lib.WordArray): string =>\n  CryptoJS.MD5(argData).toString()\n/**\n * @function\n * @description base64 加密\n * @param {string | number} argData 待加密内容\n * @returns {string} 已加密内容\n */\nexport const enBase64 = (argData: string | number): string => {\n  argData = argData.toString() || ''\n  let wordArray = CryptoJS.enc.Utf8.parse(argData)\n  let base64 = CryptoJS.enc.Base64.stringify(wordArray)\n  return base64\n}\n/**\n * @function\n * @description base64 解密\n * @param {string} argData 待解密内容\n * @returns {string} 已解密内容\n */\nexport const deBase64 = (argData: string): string => {\n  argData = argData || ''\n  let wordArray = CryptoJS.enc.Base64.parse(argData)\n  let base64 = wordArray.toString(CryptoJS.enc.Utf8)\n  return base64\n}\n\n/**\n * @function\n * @description 加密\n * @param {string | number} argData 待加密内容\n * @param {string} argType 加密类型，默认base64\n * @returns {string} 已加密内容\n */\nexport const encode = (\n  argData: string | number,\n  argType: string = 'base64'\n): string => {\n  switch (argType) {\n    case 'base64':\n      return enBase64(argData)\n    case 'aes':\n      return enAes(argData)\n    default:\n      return argData.toString()\n  }\n}\n\n/**\n * @function\n * @description 解密\n * @param {string} argData 待解密内容\n * @param {string} argType 解密类型，默认base64\n * @returns {string} 已解密内容\n */\nexport const decode = (argData: string, argType: string = 'base64'): string => {\n  switch (argType) {\n    case 'base64':\n      return deBase64(argData)\n    case 'aes':\n      return deAes(argData)\n    default:\n      return argData\n  }\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"6","url":"/home/runner/work/utils/utils/src/encrypt/crypto.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3081,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":3078,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":368,"endOffset":479,"count":1},{"startOffset":415,"endOffset":477,"count":8}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":499,"endOffset":851,"count":2},{"startOffset":568,"endOffset":597,"count":0},{"startOffset":653,"endOffset":832,"count":41}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":741,"endOffset":757,"count":16}],"isBlockCoverage":true},{"functionName":"__toESM","ranges":[{"startOffset":867,"endOffset":1090,"count":1},{"startOffset":948,"endOffset":952,"count":0},{"startOffset":1072,"endOffset":1080,"count":0}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":1111,"endOffset":1182,"count":1}],"isBlockCoverage":true},{"functionName":"aesInit","ranges":[{"startOffset":1245,"endOffset":1258,"count":1}],"isBlockCoverage":true},{"functionName":"deAes","ranges":[{"startOffset":1269,"endOffset":1280,"count":3}],"isBlockCoverage":true},{"functionName":"deBase64","ranges":[{"startOffset":1294,"endOffset":1308,"count":1}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":1320,"endOffset":1332,"count":3}],"isBlockCoverage":true},{"functionName":"enAes","ranges":[{"startOffset":1343,"endOffset":1354,"count":3}],"isBlockCoverage":true},{"functionName":"enBase64","ranges":[{"startOffset":1368,"endOffset":1382,"count":1}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":1394,"endOffset":1406,"count":3}],"isBlockCoverage":true},{"functionName":"md5","ranges":[{"startOffset":1415,"endOffset":1424,"count":1}],"isBlockCoverage":true},{"functionName":"aesInit","ranges":[{"startOffset":1603,"endOffset":1709,"count":1}],"isBlockCoverage":true},{"functionName":"enAes","ranges":[{"startOffset":1724,"endOffset":1903,"count":5}],"isBlockCoverage":true},{"functionName":"deAes","ranges":[{"startOffset":1919,"endOffset":2120,"count":5}],"isBlockCoverage":true},{"functionName":"md5","ranges":[{"startOffset":2134,"endOffset":2195,"count":1}],"isBlockCoverage":true},{"functionName":"enBase64","ranges":[{"startOffset":2214,"endOffset":2426,"count":2},{"startOffset":2260,"endOffset":2265,"count":0}],"isBlockCoverage":true},{"functionName":"deBase64","ranges":[{"startOffset":2445,"endOffset":2645,"count":2},{"startOffset":2480,"endOffset":2485,"count":0}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":2662,"endOffset":2865,"count":3},{"startOffset":2722,"endOffset":2768,"count":1},{"startOffset":2773,"endOffset":2813,"count":2},{"startOffset":2818,"endOffset":2859,"count":0}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":2882,"endOffset":3074,"count":3},{"startOffset":2942,"endOffset":2988,"count":1},{"startOffset":2993,"endOffset":3033,"count":2},{"startOffset":3038,"endOffset":3068,"count":0}],"isBlockCoverage":true}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  deBase64: () => deBase64,\n  decode: () => decode,\n  enBase64: () => enBase64,\n  encode: () => encode\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar import_js_base64 = require(\"js-base64\");\nconst enBase64 = (argData) => {\n  argData = argData || \"\";\n  var base64 = (0, import_js_base64.encode)(argData.toString());\n  return base64;\n};\nconst deBase64 = (argData) => {\n  try {\n    argData = argData || \"\";\n    var base64 = (0, import_js_base64.decode)(argData);\n    return base64;\n  } catch (e) {\n    return \"\";\n  }\n};\nconst encode = (argData, argType = \"base64\") => {\n  switch (argType) {\n    case \"base64\":\n      return enBase64(argData);\n    default:\n      return argData.toString();\n  }\n};\nconst decode = (argData, argType = \"base64\") => {\n  switch (argType) {\n    case \"base64\":\n      return deBase64(argData);\n    default:\n      return argData;\n  }\n};\n","originalCode":"/**\n * @module\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description base64加解密\n */\n\nimport { encode as en, decode as de } from 'js-base64'\n/**\n * @function\n * @description base64 加密\n * @param {string | number} argData 待加密内容\n * @returns {string} 已加密内容\n */\nexport const enBase64 = (argData: string | number): string => {\n  argData = argData || ''\n  var base64 = en(argData.toString())\n  return base64\n}\n/**\n * @function\n * @description base64 解密\n * @param {string} argData 待解密内容\n * @returns {string} 已解密内容\n */\nexport const deBase64 = (argData: string): string => {\n  try {\n    argData = argData || ''\n    var base64 = de(argData)\n    return base64\n  } catch {\n    return ''\n  }\n}\n/**\n * @function\n * @description 加密\n * @param {string | number} argData 待加密内容\n * @param {string} argType 加密类型，默认base64\n * @returns {string} 已加密内容\n */\nexport const encode = (\n  argData: string | number,\n  argType: string = 'base64'\n): string => {\n  switch (argType) {\n    case 'base64':\n      return enBase64(argData)\n    default:\n      return argData.toString()\n  }\n}\n\n/**\n * @function\n * @description 解密\n * @param {string} argData 待解密内容\n * @param {string} argType 解密类型，默认base64\n * @returns {string} 已解密内容\n */\nexport const decode = (argData: string, argType: string = 'base64'): string => {\n  switch (argType) {\n    case 'base64':\n      return deBase64(argData)\n    default:\n      return argData\n  }\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"5","url":"/home/runner/work/utils/utils/src/encrypt/base64.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1785,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":1782,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":4}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":2}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"deBase64","ranges":[{"startOffset":929,"endOffset":943,"count":1}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":955,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"enBase64","ranges":[{"startOffset":981,"endOffset":995,"count":1}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":1007,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"enBase64","ranges":[{"startOffset":1132,"endOffset":1257,"count":1},{"startOffset":1167,"endOffset":1172,"count":0}],"isBlockCoverage":true},{"functionName":"deBase64","ranges":[{"startOffset":1276,"endOffset":1439,"count":1},{"startOffset":1321,"endOffset":1326,"count":0},{"startOffset":1407,"endOffset":1437,"count":0}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":1456,"endOffset":1614,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":1631,"endOffset":1778,"count":0}],"isBlockCoverage":false}]}}]},{"leaks":false,"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1679538736772,"runtime":1830,"slow":false,"start":1679538734942},"skipped":false,"testFilePath":"/home/runner/work/utils/utils/test/class/Loading.spec.ts","testResults":[{"rowKey":0,"ancestorTitles":["Loading"],"duration":1532,"failureDetails":[],"failureMessages":[],"fullName":"Loading Loading","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"Loading"}],"failureMessage":null,"v8Coverage":[{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar stdin_exports = {};\n__export(stdin_exports, {\n  Loading: () => Loading,\n  default: () => stdin_default\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar _delay, _timer, _showTime;\nclass Loading {\n  constructor(argShow, argHide, argDelay = 300) {\n    this.loadNum = 0;\n    __privateAdd(this, _delay, 300);\n    __privateAdd(this, _timer, void 0);\n    __privateAdd(this, _showTime, 0);\n    this.showCb = () => {\n    };\n    this.hideCb = () => {\n    };\n    if (typeof argShow === \"function\") {\n      this.showCb = argShow;\n    }\n    if (typeof argHide === \"function\") {\n      this.hideCb = argHide;\n    }\n    __privateSet(this, _delay, argDelay || 300);\n  }\n  loading(isAdd = false) {\n    if (isAdd) {\n      if (!this.loadNum) {\n        __privateSet(this, _timer, setTimeout(() => {\n          __privateSet(this, _showTime, +new Date());\n          this.showCb();\n        }, __privateGet(this, _delay)));\n      }\n      this.loadNum++;\n    } else {\n      this.loadNum--;\n      if (this.loadNum < 0) {\n        this.loadNum = 0;\n      }\n    }\n    if (!this.loadNum) {\n      clearTimeout(__privateGet(this, _timer));\n      setTimeout(() => {\n        if (__privateGet(this, _showTime)) {\n          console.debug(\n            \"\\u663E\\u793Aloading\\u65F6\\u957F:\",\n            (+new Date() - __privateGet(this, _showTime)) / 1e3\n          );\n        }\n        this.hideCb();\n      }, 0);\n    }\n  }\n  show() {\n    this.loading(true);\n  }\n  hide() {\n    this.loading(false);\n  }\n}\n_delay = new WeakMap();\n_timer = new WeakMap();\n_showTime = new WeakMap();\nvar stdin_default = Loading;\n","originalCode":"import { AnyFn, Bool } from '../types'\n/**\n * @class\n * @classdesc 通用延时loading\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @example  const L = new.Loading(argShow,argHide,300) L.loading(1)/L.loading(0) = L.show()/L.hide() *\n */\n\nexport class Loading {\n  // 请求数\n  loadNum = 0\n  #delay = 300\n  // 计时\n  #timer: any\n  // 临时开始时间\n  #showTime = 0\n  showCb: AnyFn = () => {}\n  hideCb: AnyFn = () => {}\n  /**\n   * @function\n   * @param {function} argShow 显示loading 回调\n   * @param {function} argHide 隐藏loading 回调\n   * @param {number} [argDelay]=300 argDelay 延时 ms,不宜过长,默认300\n   */\n  constructor(argShow?: unknown, argHide?: unknown, argDelay: number = 300) {\n    if (typeof argShow === 'function') {\n      this.showCb = argShow as AnyFn\n    }\n    if (typeof argHide === 'function') {\n      this.hideCb = argHide as AnyFn\n    }\n    this.#delay = argDelay || 300\n  }\n  /**\n   * @function\n   * @param {boolean} isAdd 是否增加一个请求loading\n   * @description 是否增加一个请求loading，true +1,false -1\n   */\n  loading(isAdd: Bool = false) {\n    if (isAdd) {\n      if (!this.loadNum) {\n        this.#timer = setTimeout(() => {\n          this.#showTime = +new Date()\n          this.showCb()\n        }, this.#delay)\n      }\n      this.loadNum++\n    } else {\n      this.loadNum--\n      if (this.loadNum < 0) {\n        this.loadNum = 0\n      }\n    }\n    if (!this.loadNum) {\n      clearTimeout(this.#timer)\n      setTimeout(() => {\n        if (this.#showTime) {\n          console.debug(\n            '显示loading时长:',\n            (+new Date() - this.#showTime) / 1000\n          )\n        }\n        this.hideCb()\n      }, 0)\n    }\n  }\n  show() {\n    this.loading(true)\n  }\n  hide() {\n    this.loading(false)\n  }\n}\nexport default Loading\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"3","url":"/home/runner/work/utils/utils/src/class/Loading.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3123,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":3120,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":2}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":1}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"__accessCheck","ranges":[{"startOffset":887,"endOffset":974,"count":19},{"startOffset":939,"endOffset":972,"count":0}],"isBlockCoverage":true},{"functionName":"__privateGet","ranges":[{"startOffset":995,"endOffset":1134,"count":12},{"startOffset":1095,"endOffset":1113,"count":0}],"isBlockCoverage":true},{"functionName":"__privateAdd","ranges":[{"startOffset":1155,"endOffset":1351,"count":3},{"startOffset":1208,"endOffset":1277,"count":0},{"startOffset":1306,"endOffset":1323,"count":0}],"isBlockCoverage":true},{"functionName":"__privateSet","ranges":[{"startOffset":1372,"endOffset":1540,"count":7},{"startOffset":1471,"endOffset":1496,"count":0}],"isBlockCoverage":true},{"functionName":"Loading","ranges":[{"startOffset":1603,"endOffset":1616,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1629,"endOffset":1648,"count":1}],"isBlockCoverage":true},{"functionName":"Loading","ranges":[{"startOffset":1748,"endOffset":2203,"count":1},{"startOffset":2191,"endOffset":2197,"count":0}],"isBlockCoverage":true},{"functionName":"Loading.showCb","ranges":[{"startOffset":1951,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"Loading.hideCb","ranges":[{"startOffset":1984,"endOffset":1997,"count":0}],"isBlockCoverage":false},{"functionName":"loading","ranges":[{"startOffset":2206,"endOffset":2932,"count":10},{"startOffset":2246,"endOffset":2583,"count":5},{"startOffset":2273,"endOffset":2456,"count":3},{"startOffset":2542,"endOffset":2577,"count":0},{"startOffset":2607,"endOffset":2928,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2321,"endOffset":2417,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2674,"endOffset":2917,"count":3}],"isBlockCoverage":true},{"functionName":"show","ranges":[{"startOffset":2935,"endOffset":2971,"count":0}],"isBlockCoverage":false},{"functionName":"hide","ranges":[{"startOffset":2974,"endOffset":3011,"count":0}],"isBlockCoverage":false}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  deepCopy: () => deepCopy,\n  delCookie: () => delCookie,\n  getCookie: () => getCookie,\n  getEnv: () => getEnv,\n  getInfo: () => getInfo,\n  getNetworkStatus: () => getNetworkStatus,\n  getObj: () => getObj,\n  getRandomColor: () => getRandomColor,\n  getRegexp: () => getRegexp,\n  getStorage: () => getStorage,\n  getUrlParam: () => getUrlParam,\n  getUrlParamObj: () => getUrlParamObj,\n  getUuid: () => getUuid,\n  randomInt: () => randomInt,\n  remInit: () => remInit,\n  replaceUrlParam: () => replaceUrlParam,\n  safe: () => safe,\n  safeData: () => safeData,\n  setCookie: () => setCookie,\n  setEnv: () => setEnv,\n  setLog: () => setLog,\n  setObj: () => setObj,\n  setStorage: () => setStorage,\n  setTitle: () => setTitle,\n  setUrlParams: () => setUrlParams,\n  sleep: () => sleep\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar import_is = require(\"./is\");\nlet isOnline = true;\nlet ENV = {};\nlet DATA_OBJECT = {};\nif (globalThis && globalThis.addEventListener) {\n  globalThis.addEventListener(\"offline\", function() {\n    console.debug(\"offLine\");\n    isOnline = false;\n  });\n  globalThis.addEventListener(\"online\", function() {\n    console.debug(\"onLine\");\n    isOnline = true;\n  });\n}\nconst getNetworkStatus = () => {\n  return isOnline;\n};\nconst getRegexp = () => {\n  return {\n    html: /<[^>]+>/gim,\n    password: /^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[\\W_]).{8,16}$/,\n    idCard: /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/,\n    idCardNormal: /^[0-9]\\d+([0-9]|X|x)*$/,\n    phone: /^1\\d{10}$/,\n    email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n    http: /http:\\/\\/|https:\\/\\//,\n    score: /^[1-9]\\d*|0$/,\n    int: /^[1-9]\\d*$/,\n    number: /^\\d*$/,\n    float1: /^(([1-9]\\d*)|0|(0.\\d{0,1})|([1-9]\\d*.\\d{0,1}))$/,\n    float2: /^(([1-9]\\d*)|0|(0.\\d{0,2})|([1-9]\\d*.\\d{0,2}))$/,\n    float3: /^(([1-9]\\d*)|0|(0.\\d{0,3})|([1-9]\\d*.\\d{0,3}))$/,\n    letterNumber: /^[a-zA-Z0-9]*$/,\n    letter: /^[a-zA-Z]*$/,\n    account: /^[a-zA-Z0-9_\\-\\u4e00-\\u9fa5]{1,50}$/,\n    realName: /^([\\u4e00-\\u9fa5]{1,50}|[\\u4e00-\\u9fa5]{1,25}[\\s][\\u4e00-\\u9fa5]{1,24}|[a-zA-Z_\\-.]{1,50}|[a-zA-Z_\\-.]{1,25}[\\s][a-zA-Z_\\-.]{1,24})$/,\n    cn: /^[\\u4e00-\\u9fa5]*$/,\n    ascii: /^[\\x20-\\x7E]+$/\n  };\n};\nconst setTitle = (argTitle) => {\n  if (typeof globalThis.document === \"object\") {\n    globalThis.document.title = String(argTitle);\n  }\n  if (getInfo().isAppleMobile) {\n    const i = document.createElement(\"iframe\");\n    i.onload = () => {\n      setTimeout(() => {\n        console.debug(\"apple mobile setting title\");\n        i.remove();\n      }, 10);\n    };\n    globalThis.document.body.appendChild(i);\n  }\n};\nconst remInit = (argBaseSize = 16, argWidth = 375) => {\n  const setRem = () => {\n    const scale = safeData(globalThis, \"document.documentElement.clientWidth\", argWidth) / argWidth;\n    safeData(\n      globalThis,\n      \"document.documentElement.style.fontSize\",\n      argBaseSize * scale + \"px\",\n      true\n    );\n  };\n  setRem();\n  globalThis.onresize = () => {\n    setRem();\n  };\n};\nconst getCookie = (argName) => {\n  const cookies = globalThis.document.cookie.split(\"; \");\n  const cookie = cookies.find((cookie2) => {\n    const [name] = cookie2.split(\"=\");\n    return argName === name;\n  });\n  return cookie ? decodeURIComponent(cookie.split(\"=\")[1] || \"\") : \"\";\n};\nconst setCookie = (argName, argValue = \"\", argTime = 24) => {\n  let now = new Date();\n  let offset = 8;\n  let utc = now.getTime() + now.getTimezoneOffset() * 6e4;\n  let nd = utc + 36e5 * offset;\n  let exp = new Date(nd);\n  let domain = globalThis.document.domain;\n  exp.setTime(exp.getTime() + argTime * 60 * 60 * 1e3);\n  globalThis.document.cookie = argName + \"=\" + encodeURIComponent(argValue) + \";path=/;expires=\" + exp.toUTCString() + \";domain=\" + domain + \";\";\n};\nconst delCookie = (argName = \"\") => {\n  setCookie(argName, \"\", -1);\n};\nconst getInfo = () => {\n  let ua = safeData(globalThis, \"navigator.userAgent\", \"\").toLowerCase();\n  let platform = safeData(\n    globalThis,\n    \"navigator.userAgentData.platform\",\n    \"\"\n  ).toLowerCase();\n  let info = {\n    ua,\n    platform,\n    isMobile: !!ua.match(/mobile/),\n    isWin: !!platform.match(\"win\"),\n    isIphone: !!ua.match(/iphone/),\n    isIpad: !!ua.match(/ipad/),\n    isMac: !!platform.match(\"mac\"),\n    isIos: !!platform.match(\"ios\"),\n    isAndroid: !!platform.match(\"android\"),\n    isSafari: ua.indexOf(\"safari\") > -1 && ua.indexOf(\"chrome\") < 1,\n    isIE: \"ActiveXObject\" in globalThis,\n    ieVersion: 0,\n    isAppleMobile: false,\n    isWeixin: !!ua.match(/MicroMessenger/i),\n    isAlipay: !!ua.match(/Alipay/i)\n  };\n  if (info.ua.match(\"msie\")) {\n    let IE = info.ua.match(/msie\\s([0-9]*)/);\n    if (IE && IE.length >= 2) {\n      info.ieVersion = +IE[1];\n    }\n  }\n  info.isAppleMobile = !!(info.isMobile && ua.toLowerCase().indexOf(\"applewebkit\") && ua.indexOf(\"chrome\") < 1);\n  return info;\n};\nconst getRandomColor = function() {\n  return \"#\" + (\"00000\" + (Math.random() * 16777216 << 0).toString(16)).substring(-6);\n};\nconst getStorage = (argKey, argNoJson) => {\n  let res = globalThis.localStorage.getItem(argKey);\n  if (!argNoJson && (0, import_is.isJson)(res) && res) {\n    res = JSON.parse(res);\n  }\n  return res || \"\";\n};\nconst setStorage = (argKey, argData) => {\n  if (typeof argData === \"object\") {\n    argData = JSON.stringify(argData);\n  }\n  globalThis.localStorage.setItem(argKey, String(argData));\n  return String(argData);\n};\nconst sleep = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\nconst safe = function safe2(argData, argCheck, argValue, argSetValueForce) {\n  if (!argData) {\n    return argValue;\n  }\n  if (typeof argCheck !== \"string\" && typeof argCheck !== \"number\") {\n    console.warn(\"argCheck\\u8BF7\\u4F20\\u5165string\\u5F53\\u524D\\u4E3A:\" + argCheck);\n    return \"\";\n  }\n  const temKey = argCheck.toString().split(\".\");\n  const temLen = temKey.length;\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== \"object\") {\n        if (argSetValueForce) {\n          console.warn(\"safeData setValue err\\uFF1A\", argData, \"index:\", i);\n        }\n        return argValue;\n      }\n      argData = argData[temKey[i]] || {};\n    }\n  }\n  if (argSetValueForce) {\n    ;\n    argData[temKey[temLen - 1]] = argValue;\n  }\n  if (typeof argValue === \"undefined\") {\n    return argData[temKey[temLen - 1]];\n  } else {\n    return argData[temKey[temLen - 1]] || argValue;\n  }\n};\nconst safeData = (argData, argCheck, argValue, argSetValueForce) => {\n  if (typeof argCheck !== \"string\" && typeof argCheck !== \"number\") {\n    console.warn(\"argCheck\\u8BF7\\u4F20\\u5165string\\u5F53\\u524D\\u4E3A:\" + argCheck);\n    return \"\";\n  }\n  const temKey = argCheck.toString().split(\".\");\n  const temLen = temKey.length;\n  if (!argData) {\n    return argValue;\n  }\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== \"object\") {\n        if (argSetValueForce) {\n          console.warn(\"safeData setValue err\\uFF1A\", argData, \"index:\", i);\n        }\n        return argValue;\n      }\n      argData = argData[temKey[i]] || {};\n    }\n  }\n  if (argSetValueForce) {\n    argData[temKey[temLen - 1]] = argValue;\n  }\n  if (typeof argValue === \"undefined\") {\n    return argData[temKey[temLen - 1]];\n  } else {\n    return argData[temKey[temLen - 1]] || argValue;\n  }\n};\nconst setUrlParams = (argParams, noMark) => {\n  let re = \"\";\n  if (!noMark) {\n    re = \"?\";\n  }\n  let paramsList = Object.keys(argParams);\n  let temLength = paramsList.length;\n  if (!temLength) {\n    return \"\";\n  }\n  paramsList.map((v, k) => {\n    re += v + \"=\" + argParams[v];\n    if (k < temLength - 1) {\n      re += \"&\";\n    }\n  });\n  return re;\n};\nconst getUrlParam = (argName, argUrl = globalThis.location.search || \"\") => {\n  let result = argUrl.match(new RegExp(\"[?&]\" + argName + \"=([^&]+)\", \"i\"));\n  if (!result) {\n    return \"\";\n  }\n  return decodeURIComponent(result[1]);\n};\nconst getUrlParamObj = (argData = globalThis.location.search || globalThis.location.hash) => {\n  const res = {};\n  try {\n    argData.slice(argData.indexOf(\"?\") + 1).split(\"&\").forEach((v) => {\n      const [key, val] = v.split(\"=\");\n      if (key !== v) {\n        res[key] = decodeURIComponent(val);\n      }\n    });\n    return res;\n  } catch (e) {\n    console.error(\"\\u8F6C\\u6362\\u5931\\u8D25\", e);\n    return res;\n  }\n};\nconst replaceUrlParam = (name, value, url = globalThis.location.href || \"\") => {\n  const reg = new RegExp(\"([?]|&)(\" + name + \"=)([^&#]*)([&]?|$)\", \"img\");\n  const r = url.match(reg);\n  const search = url.split(\"?\");\n  let strValue = url;\n  if (value === void 0 || value === null) {\n    if (r != null) {\n      strValue = url.replace(reg, (_match, p1, _p2, _p3, p4) => {\n        if (!p4 || !p4.length) {\n          return \"\";\n        } else if (p1 === p4) {\n          return p1;\n        }\n        return p1 + p4;\n      });\n      strValue = strValue.replace(\"?&\", \"?\");\n    }\n  } else if (r != null) {\n    strValue = url.replace(reg, `$1$2${value}$4`);\n  } else if (search.length > 1) {\n    const sub = search[1].split(\"#\");\n    if (sub.length > 1) {\n      if (sub[1].length) {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}#${sub[1]}`;\n      } else {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}${sub[1]}`;\n      }\n    } else {\n      strValue = `${search[0]}?${search[1]}&${name}=${value}`;\n    }\n  } else {\n    const sub = url.split(\"#\");\n    if (sub.length > 1) {\n      strValue = `${sub[0]}?${name}=${value}#${sub[1]}`;\n    } else {\n      strValue = `${url}?${name}=${value}`;\n    }\n  }\n  return strValue;\n};\nconst getUuid = () => {\n  const S4 = () => ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);\n  return S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + Date.now();\n};\nconst randomInt = (min = 0, max = 100) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst setEnv = (env) => {\n  ENV = env;\n};\nconst getEnv = (key) => {\n  return safeData(ENV, key, \"\");\n};\nconst setObj = (key, data) => {\n  if (!key) {\n    DATA_OBJECT = data;\n  } else {\n    DATA_OBJECT[key] = data;\n  }\n  return DATA_OBJECT;\n};\nconst getObj = (key, argData, isDeepCopy) => {\n  let res = safeData(DATA_OBJECT, key, {});\n  if (argData) {\n    res = Object.assign(res, argData);\n  }\n  if (!isDeepCopy) {\n    return res;\n  } else {\n    return JSON.parse(JSON.stringify(res));\n  }\n};\nconst setLog = (logLevel, logConfig) => {\n  logLevel = logLevel || getEnv(\"VUE_APP_LOG_LEVEL\") || 4;\n  const logList = [\"log\", \"info\", \"warn\", \"error\"];\n  const log = {};\n  logList.forEach((v) => {\n    log[v] = console[v];\n  });\n  for (let key in logConfig) {\n    if (console[key]) {\n      ;\n      console[key] = (...arg) => {\n        var _a, _b;\n        ;\n        log[key](...arg, (_a = Error().stack) == null ? void 0 : _a.split(\"\\n\")[2]);\n        logConfig[key] && logConfig[key](...arg, (_b = Error().stack) == null ? void 0 : _b.split(\"\\n\")[2]);\n      };\n    }\n  }\n  switch (+logLevel) {\n    case 1:\n      console.warn = () => {\n      };\n    case 2:\n      console.info = () => {\n      };\n    case 3:\n      console.log = () => {\n      };\n    case 4:\n      console.debug = () => {\n      };\n    default:\n      break;\n  }\n};\nconst deepCopy = (obj) => {\n  if (typeof obj !== \"object\" || obj === null) {\n    return obj;\n  }\n  let copy = Array.isArray(obj) ? [] : {};\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ;\n      copy[key] = deepCopy(obj[key]);\n    }\n  }\n  return copy;\n};\n","originalCode":"/**\n * @module index\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 公共函数，使用'lj-utils'引入\n */\n\nimport { isJson } from './is'\nimport { Info, AnyObject, Bool } from './types'\n\nlet isOnline: boolean = true\nlet ENV: AnyObject = {}\nlet DATA_OBJECT: AnyObject = {}\n// 断网监听\nif (globalThis && globalThis.addEventListener) {\n  // #ifdef H5\n  globalThis.addEventListener('offline', function () {\n    console.debug('offLine')\n    isOnline = false\n  })\n  globalThis.addEventListener('online', function () {\n    console.debug('onLine')\n    isOnline = true\n  })\n  // #endif\n}\n\n/**\n * @function\n * @description 获取当前网络状态（H5）\n * @return boolean\n */\nexport const getNetworkStatus = () => {\n  return isOnline\n}\n\n/**\n * @function\n * @description 正则收集\n * @returns {object}\n */\nexport const getRegexp = (): AnyObject => {\n  return {\n    // 匹配html标签，提取html文字： htmlCode.replace(reg.html,'')\n    html: /<[^>]+>/gim,\n    // 至少1数字1字母1字符，8-16位\n    password: /^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[\\W_]).{8,16}$/,\n    // 普通身份证号正则，isIdCard更为严格\n    idCard: /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/,\n    // 简易身份证号 数字+x\n    idCardNormal: /^[0-9]\\d+([0-9]|X|x)*$/,\n    // 手机号\n    phone: /^1\\d{10}$/,\n    // 邮箱\n    email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n    // 网址\n    http: /http:\\/\\/|https:\\/\\//,\n    // 含0整数（得分）\n    score: /^[1-9]\\d*|0$/,\n    // 整数\n    int: /^[1-9]\\d*$/,\n    // 匹配数字\n    number: /^\\d*$/,\n    // >=0||1位小数\n    float1: /^(([1-9]\\d*)|0|(0.\\d{0,1})|([1-9]\\d*.\\d{0,1}))$/,\n    // >=0||2位小数\n    float2: /^(([1-9]\\d*)|0|(0.\\d{0,2})|([1-9]\\d*.\\d{0,2}))$/,\n    // >=0||3位小数\n    float3: /^(([1-9]\\d*)|0|(0.\\d{0,3})|([1-9]\\d*.\\d{0,3}))$/,\n    // 字母+数字组合\n    letterNumber: /^[a-zA-Z0-9]*$/,\n    // 字母\n    letter: /^[a-zA-Z]*$/,\n    // 帐号50个字内：大小写+数字+中文+'_'+'-'\n    account: /^[a-zA-Z0-9_\\-\\u4e00-\\u9fa5]{1,50}$/,\n    // 中英文姓名 50个字内/中文 中文/英文-. 英文-./\n    realName:\n      /^([\\u4e00-\\u9fa5]{1,50}|[\\u4e00-\\u9fa5]{1,25}[\\s][\\u4e00-\\u9fa5]{1,24}|[a-zA-Z_\\-.]{1,50}|[a-zA-Z_\\-.]{1,25}[\\s][a-zA-Z_\\-.]{1,24})$/,\n    // 匹配中文\n    cn: /^[\\u4e00-\\u9fa5]*$/,\n    // 匹配ASCII,非中文之外的字符（全角字符）\n    ascii: /^[\\x20-\\x7E]+$/,\n  }\n}\n\n/**\n * @function\n * @description 设置标题\n * @param  {string} argTitle 标题\n */\nexport const setTitle = (argTitle: string | number) => {\n  if (typeof globalThis.document === 'object') {\n    globalThis.document.title = String(argTitle)\n  }\n  if (getInfo().isAppleMobile) {\n    const i = document.createElement('iframe')\n    i.onload = () => {\n      setTimeout(() => {\n        console.debug('apple mobile setting title')\n        i.remove()\n      }, 10)\n    }\n    globalThis.document.body.appendChild(i)\n  }\n}\n\n/**\n * @function\n * @description 使用postcss-px2rem时使用\n * @param {number} argBaseSize 基础大小 16px（要跟配置一致）\n * @param {number} argWidth 基准宽度\n */\nexport const remInit = (argBaseSize: number = 16, argWidth: number = 375) => {\n  // 设置 rem 函数\n  const setRem = () => {\n    // 当前页面宽度相对于 argWidth 宽的缩放比例，可根据自己需要修改。\n    const scale =\n      safeData(globalThis, 'document.documentElement.clientWidth', argWidth) /\n      argWidth\n    // 设置页面根节点字体大小\n    safeData(\n      globalThis,\n      'document.documentElement.style.fontSize',\n      argBaseSize * scale + 'px',\n      true\n    )\n  }\n  // 初始化\n  setRem()\n  // 改变窗口大小时重新设置 rem\n  globalThis.onresize = () => {\n    setRem()\n  }\n}\n\n/**\n * @function\n * @description 获取cookie\n * @param  {string} argName 要获取的值\n * @returns {string}\n */\nexport const getCookie = (argName: string): string => {\n  const cookies = globalThis.document.cookie.split('; ')\n  const cookie = cookies.find((cookie) => {\n    const [name] = cookie.split('=')\n    return argName === name\n  })\n  return cookie ? decodeURIComponent(cookie.split('=')[1] || '') : ''\n}\n\n/**\n * @function\n * @description 设置cookie\n * @param  {string} argName 要设置的key\n * @param  {string} argValue 要设置的value\n * @param  {number} argTime 过期时间/时 默认24小时\n */\nexport const setCookie = (\n  argName: string,\n  argValue: string | number | boolean = '',\n  argTime: number = 24\n) => {\n  let now = new Date()\n  let offset = 8\n  let utc = now.getTime() + now.getTimezoneOffset() * 60000\n  let nd = utc + 3600000 * offset\n  let exp = new Date(nd)\n  let domain = globalThis.document.domain\n  exp.setTime(exp.getTime() + argTime * 60 * 60 * 1000)\n  globalThis.document.cookie =\n    argName +\n    '=' +\n    encodeURIComponent(argValue) +\n    ';path=/;expires=' +\n    exp.toUTCString() +\n    ';domain=' +\n    domain +\n    ';'\n}\n\n/**\n * @function\n * @description 清除cookie\n * @param  {string} argName 要清除的值\n */\nexport const delCookie = (argName: string = '') => {\n  setCookie(argName, '', -1)\n}\n\n/**\n * @function\n * @description 检测浏览器状态，系统状态 *\n * @returns {Info} {\n * ua: ua,\n * platform: 平台,\n * isMobile: 移动端,\n * isWin: winPC端,\n * isIphone: iphone,\n * isIpad: ipad,\n * isMac: mac,\n * isAppleMobile: 苹果移动端webview\n * isSafari: Safari浏览器,\n * isIos: Ios平台,\n * isAndroid: android平台,\n * isIE: 显示8 9 10, true为11以上\n * ...\n * }\n */\nexport const getInfo = (): Info => {\n  let ua = safeData(globalThis, 'navigator.userAgent', '').toLowerCase()\n  let platform: string = safeData(\n    globalThis,\n    'navigator.userAgentData.platform',\n    ''\n  ).toLowerCase()\n  let info: Info = {\n    ua: ua,\n    platform: platform,\n    isMobile: !!ua.match(/mobile/),\n    isWin: !!platform.match('win'),\n    isIphone: !!ua.match(/iphone/),\n    isIpad: !!ua.match(/ipad/),\n    isMac: !!platform.match('mac'),\n    isIos: !!platform.match('ios'),\n    isAndroid: !!platform.match('android'),\n    isSafari: ua.indexOf('safari') > -1 && ua.indexOf('chrome') < 1,\n    isIE: 'ActiveXObject' in globalThis,\n    ieVersion: 0,\n    isAppleMobile: false,\n    isWeixin: !!ua.match(/MicroMessenger/i),\n    isAlipay: !!ua.match(/Alipay/i),\n  }\n  if (info.ua.match('msie')) {\n    let IE = info.ua.match(/msie\\s([0-9]*)/)\n    if (IE && IE.length >= 2) {\n      info.ieVersion = +IE[1]\n    }\n  }\n  info.isAppleMobile = !!(\n    info.isMobile &&\n    ua.toLowerCase().indexOf('applewebkit') &&\n    ua.indexOf('chrome') < 1\n  )\n  return info\n}\n\n/**\n * @function\n * @description 获取随机颜色\n * @return string\n */\nexport const getRandomColor = function () {\n  return (\n    '#' +\n    ('00000' + ((Math.random() * 0x1000000) << 0).toString(16)).substring(-6)\n  )\n}\n\n/**\n * @function\n * @description 获取storage的值，默认将json转为obj\n * @param {string} argKey 要获取的key\n * @param {string} argNoJson true时不自动转换JSON字符串\n * @returns {any} key对应的数据\n */\nexport const getStorage = (argKey: string, argNoJson?: string): any => {\n  let res = globalThis.localStorage.getItem(argKey)\n  // 默认转义JSON字符串\n  if (!argNoJson && isJson(res) && res) {\n    res = JSON.parse(res)\n  }\n  return res || ''\n}\n\n/**\n * @function\n * @description 设置storage的值，默认将obj转为json\n * @param {string} argKey 要获取的key\n * @param {unknown} argData 要保存的数据\n * @returns {string} 保存的数据String\n */\nexport const setStorage = (argKey: string, argData: unknown): string => {\n  if (typeof argData === 'object') {\n    argData = JSON.stringify(argData)\n  }\n  globalThis.localStorage.setItem(argKey, String(argData))\n  return String(argData)\n}\n\n/**\n * @function\n * @description setTimeout promise版\n * @param  {number} ms 时间，毫秒\n */\nexport const sleep = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n// 返回T下的key对应类型\ntype KeyOf<T extends Record<string, any>, K = keyof T> = K extends string\n  ? T[K] extends Function\n    ? never\n    : K\n  : never\ntype DotField<T extends Record<string, any>, K = KeyOf<T>> = K extends string\n  ? K | `${K}.${DotField<T[K]>}`\n  : never\n// 返回传入K或T[K]对应的类型\ntype ValueOf<\n  T extends Record<string, any>,\n  K\n> = K extends `${infer I}.${infer R}`\n  ? ValueOf<T[I], R>\n  : K extends string\n  ? T[K]\n  : never\n\n/**\n * @function\n * @description 数据安全访问\n * @param  {any} argData  [原始数据]\n * @param  {string} argCheck [要返回的数据，用'.'连接，数组用'.+数字表示']\n * @param  {any} argValue [如果数据有误，返回的值，选填]\n * @param  {boolean|0|1} argSetValueForce [是否强制赋值argValue]\n * @returns {any}\n */\nexport const safe = function safe<\n  T extends Record<string, any>,\n  K extends DotField<T>\n>(\n  argData: T,\n  argCheck: K,\n  argValue?: ValueOf<T, K>,\n  argSetValueForce?: Bool\n): ValueOf<T, K> | undefined | string {\n  if (!argData) {\n    return argValue\n  }\n  if (typeof argCheck !== 'string' && typeof argCheck !== 'number') {\n    console.warn('argCheck请传入string当前为:' + argCheck)\n    return ''\n  }\n  const temKey = argCheck.toString().split('.')\n  const temLen = temKey.length\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== 'object') {\n        if (argSetValueForce) {\n          console.warn('safeData setValue err：', argData, 'index:', i)\n        }\n        return argValue\n      }\n      argData = argData[temKey[i]] || {}\n    }\n  }\n  if (argSetValueForce) {\n    ;(argData as AnyObject)[temKey[temLen - 1]] = argValue\n  }\n  if (typeof argValue === 'undefined') {\n    return argData[temKey[temLen - 1]]\n  } else {\n    return argData[temKey[temLen - 1]] || argValue\n  }\n}\n/**\n * @function\n * @description 数据安全访问\n * @param  {any} argData  [原始数据]\n * @param  {string} argCheck [要返回的数据，用'.'连接，数组用'.+数字表示']\n * @param  {any} argValue [如果数据有误，返回的值，选填]\n * @param  {boolean|0|1} argSetValueForce [是否强制赋值argValue]\n * @returns {any}\n */\nexport const safeData = (\n  argData: any,\n  argCheck: string,\n  argValue?: any,\n  argSetValueForce?: Bool\n): any => {\n  if (typeof argCheck !== 'string' && typeof argCheck !== 'number') {\n    console.warn('argCheck请传入string当前为:' + argCheck)\n    return ''\n  }\n  const temKey = argCheck.toString().split('.')\n  const temLen = temKey.length\n  if (!argData) {\n    return argValue\n  }\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== 'object') {\n        if (argSetValueForce) {\n          console.warn('safeData setValue err：', argData, 'index:', i)\n        }\n        return argValue\n      }\n      argData = argData[temKey[i]] || {}\n    }\n  }\n  if (argSetValueForce) {\n    argData[temKey[temLen - 1]] = argValue\n  }\n  if (typeof argValue === 'undefined') {\n    return argData[temKey[temLen - 1]]\n  } else {\n    return argData[temKey[temLen - 1]] || argValue\n  }\n}\n\n/**\n * @description obj转url参数\n * @function\n * @param {any} argParams 参数对象\n * @param {boolean?} noMark 默认带?,true时,不带\n * @returns {string}\n */\nexport const setUrlParams = (argParams: any, noMark?: boolean): string => {\n  let re = ''\n  if (!noMark) {\n    re = '?'\n  }\n  let paramsList = Object.keys(argParams)\n  let temLength = paramsList.length\n  if (!temLength) {\n    return ''\n  }\n  paramsList.map((v, k) => {\n    re += v + '=' + argParams[v]\n    if (k < temLength - 1) {\n      re += '&'\n    }\n  })\n  return re\n}\n\n/**\n * @description 获取url参数\n * @function\n * @param {string} argName 要获取的key\n * @param {string} argUrl url数据\n * @returns {string}\n */\nexport const getUrlParam = (\n  argName: string,\n  argUrl: string = globalThis.location.search || ''\n): string => {\n  let result = argUrl.match(new RegExp('[?&]' + argName + '=([^&]+)', 'i'))\n  if (!result) {\n    return ''\n  }\n  return decodeURIComponent(result[1])\n}\n\n/**\n * @description 获取所有url参数，eg: a=1&b=2 to {a:1,b:2}\n * @function\n * @param {string} argData 要处理的数据\n * @returns {any}\n */\nexport const getUrlParamObj = (\n  argData: string = globalThis.location.search || globalThis.location.hash\n): AnyObject => {\n  const res: AnyObject = {}\n  try {\n    argData\n      .slice(argData.indexOf('?') + 1)\n      .split('&')\n      .forEach((v) => {\n        const [key, val] = v.split('=')\n        if (key !== v) {\n          res[key] = decodeURIComponent(val)\n        }\n      })\n    return res\n  } catch (e) {\n    console.error('转换失败', e)\n    return res\n  }\n  // let temObj = new URLSearchParams(argData)\n  // let resObj = {}\n  // for (const [key, value] of temObj) {\n  //   resObj[key] = value\n  // }\n  // return resObj\n}\n\n/**\n * @description 通过正则匹配修改当前页面的url中的参数\n * @function\n * @param  {string} name key\n * @param  {string | number| undefined | null} value 要替换的value\n * @param  {string} url 要替换的网址,默认location.href\n * @returns {string}\n */\nexport const replaceUrlParam = (\n  name: string,\n  value: string | number | undefined | null,\n  url: string = globalThis.location.href || ''\n): string => {\n  const reg = new RegExp('([?]|&)(' + name + '=)([^&#]*)([&]?|$)', 'img')\n  const r = url.match(reg)\n  const search = url.split('?')\n  let strValue: string = url\n  if (value === undefined || value === null) {\n    if (r != null) {\n      strValue = url.replace(reg, (_match, p1, _p2, _p3, p4) => {\n        if (!p4 || !p4.length) {\n          return ''\n        } else if (p1 === p4) {\n          return p1\n        }\n        return p1 + p4\n      })\n      strValue = strValue.replace('?&', '?')\n    }\n  } else if (r != null) {\n    strValue = url.replace(reg, `$1$2${value}$4`)\n  } else if (search.length > 1) {\n    const sub = search[1].split('#')\n    if (sub.length > 1) {\n      if (sub[1].length) {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}#${sub[1]}`\n      } else {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}${sub[1]}`\n      }\n    } else {\n      strValue = `${search[0]}?${search[1]}&${name}=${value}`\n    }\n  } else {\n    // 不存在?时,搜索hash\n    const sub = url.split('#')\n    if (sub.length > 1) {\n      strValue = `${sub[0]}?${name}=${value}#${sub[1]}`\n    } else {\n      strValue = `${url}?${name}=${value}`\n    }\n  }\n  return strValue\n}\n\n/**\n * @function\n * @description 获取简单uuid\n * @returns {string} uuid\n */\nexport const getUuid = (): string => {\n  const S4 = () =>\n    (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  return S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + Date.now()\n}\n\n/**\n * @function\n * @description 获取随机数,含最大值，含最小值\n * @param  {number} min 最小值\n * @param  {number} max 最大值\n * @returns {number}\n */\nexport const randomInt = (min: number = 0, max: number = 100): number => {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  // 含最大值，含最小值\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n/**\n * @function\n * @description 设置env参数，一般在main.js中调用\n * @param  {AnyObject} env 要设置的值\n */\nexport const setEnv = (env: AnyObject) => {\n  ENV = env\n}\n/**\n * @function\n * @description 获取env参数\n * @param  {string} key 要获取的值\n * @returns {string} 获取的值\n */\nexport const getEnv = (key: string): string => {\n  return safeData(ENV, key, '')\n}\n\n/**\n * @function\n * @description 设置object参数,可做运行时缓存\n * @param  {string} key 要设置的key\n * @param  {AnyObject} data 要设置的值\n * @returns {AnyObject}\n */\nexport const setObj = (key: string, data: AnyObject): AnyObject => {\n  if (!key) {\n    DATA_OBJECT = data\n  } else {\n    DATA_OBJECT[key] = data\n  }\n  return DATA_OBJECT\n}\n\n/**\n * @function\n * @description 获取object参数\n * @param  {string} key 要获取的值\n * @param  {string} argData 要合并的值\n * @param  {boolean} isDeepCopy 是否深拷贝\n * @returns {AnyObject} 获取的值\n */\nexport const getObj = (\n  key: string,\n  argData?: AnyObject,\n  isDeepCopy?: Bool\n): AnyObject => {\n  let res: AnyObject = safeData(DATA_OBJECT, key, {})\n  if (argData) {\n    res = Object.assign(res, argData)\n  }\n  if (!isDeepCopy) {\n    return res\n  } else {\n    return JSON.parse(JSON.stringify(res))\n  }\n}\n\n/**\n * @function\n * @description 设置日志输出logLevel 1 error 2 warn 3 info 4 log 5 debug\n * @param {AnyObject} logConfig 重写配置\n * @param {function} logConfig.error 错误日志回调（做额外处理用）\n */\nexport const setLog = (logLevel?: string | number, logConfig?: AnyObject) => {\n  // 1 error 2 warn 3 info 4 log 5 debug\n  logLevel = logLevel || getEnv('VUE_APP_LOG_LEVEL') || 4\n  const logList = ['log', 'info', 'warn', 'error']\n  const log: AnyObject = {}\n  logList.forEach((v) => {\n    log[v] = (console as AnyObject)[v]\n  })\n  for (let key in logConfig) {\n    if ((console as AnyObject)[key]) {\n      ;(console as AnyObject)[key] = (...arg: any[]) => {\n        ;(log as AnyObject)[key](...arg, Error().stack?.split('\\n')[2])\n        // 回调处理\n        logConfig[key] && logConfig[key](...arg, Error().stack?.split('\\n')[2])\n      }\n    }\n  }\n  switch (+logLevel) {\n    case 1:\n      console.warn = () => {}\n    case 2:\n      console.info = () => {}\n    case 3:\n      console.log = () => {}\n    case 4:\n      console.debug = () => {}\n    default:\n      break\n  }\n  // return log\n}\n\n/**\n * 深拷贝函数\n * @param obj 需要拷贝的对象\n * @returns 拷贝后的对象\n */\nexport const deepCopy = (obj: any): any => {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj\n  }\n  let copy = Array.isArray(obj) ? [] : {}\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ;(copy as AnyObject)[key] = deepCopy(obj[key])\n    }\n  }\n  return copy\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"3081","url":"/home/runner/work/utils/utils/src/base.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12414,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":12411,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":26}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":26}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":7}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"deepCopy","ranges":[{"startOffset":929,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"delCookie","ranges":[{"startOffset":958,"endOffset":973,"count":0}],"isBlockCoverage":false},{"functionName":"getCookie","ranges":[{"startOffset":988,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"getEnv","ranges":[{"startOffset":1015,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":1040,"endOffset":1053,"count":0}],"isBlockCoverage":false},{"functionName":"getNetworkStatus","ranges":[{"startOffset":1075,"endOffset":1097,"count":0}],"isBlockCoverage":false},{"functionName":"getObj","ranges":[{"startOffset":1109,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomColor","ranges":[{"startOffset":1141,"endOffset":1161,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexp","ranges":[{"startOffset":1176,"endOffset":1191,"count":0}],"isBlockCoverage":false},{"functionName":"getStorage","ranges":[{"startOffset":1207,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParam","ranges":[{"startOffset":1240,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParamObj","ranges":[{"startOffset":1277,"endOffset":1297,"count":0}],"isBlockCoverage":false},{"functionName":"getUuid","ranges":[{"startOffset":1310,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":1338,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"remInit","ranges":[{"startOffset":1366,"endOffset":1379,"count":0}],"isBlockCoverage":false},{"functionName":"replaceUrlParam","ranges":[{"startOffset":1400,"endOffset":1421,"count":0}],"isBlockCoverage":false},{"functionName":"safe","ranges":[{"startOffset":1431,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"safeData","ranges":[{"startOffset":1455,"endOffset":1469,"count":0}],"isBlockCoverage":false},{"functionName":"setCookie","ranges":[{"startOffset":1484,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"setEnv","ranges":[{"startOffset":1511,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"setLog","ranges":[{"startOffset":1535,"endOffset":1547,"count":0}],"isBlockCoverage":false},{"functionName":"setObj","ranges":[{"startOffset":1559,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"setStorage","ranges":[{"startOffset":1587,"endOffset":1603,"count":0}],"isBlockCoverage":false},{"functionName":"setTitle","ranges":[{"startOffset":1617,"endOffset":1631,"count":0}],"isBlockCoverage":false},{"functionName":"setUrlParams","ranges":[{"startOffset":1649,"endOffset":1667,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":1678,"endOffset":1689,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1920,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2031,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"getNetworkStatus","ranges":[{"startOffset":2127,"endOffset":2155,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexp","ranges":[{"startOffset":2175,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"setTitle","ranges":[{"startOffset":3114,"endOffset":3506,"count":0}],"isBlockCoverage":false},{"functionName":"remInit","ranges":[{"startOffset":3524,"endOffset":3892,"count":0}],"isBlockCoverage":false},{"functionName":"getCookie","ranges":[{"startOffset":3912,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"setCookie","ranges":[{"startOffset":4196,"endOffset":4645,"count":0}],"isBlockCoverage":false},{"functionName":"delCookie","ranges":[{"startOffset":4665,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":4734,"endOffset":5737,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomColor","ranges":[{"startOffset":5762,"endOffset":5863,"count":0}],"isBlockCoverage":false},{"functionName":"getStorage","ranges":[{"startOffset":5884,"endOffset":6071,"count":0}],"isBlockCoverage":false},{"functionName":"setStorage","ranges":[{"startOffset":6092,"endOffset":6282,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":6298,"endOffset":6369,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6329,"endOffset":6365,"count":7}],"isBlockCoverage":true},{"functionName":"safe2","ranges":[{"startOffset":6384,"endOffset":7293,"count":0}],"isBlockCoverage":false},{"functionName":"safeData","ranges":[{"startOffset":7312,"endOffset":8204,"count":0}],"isBlockCoverage":false},{"functionName":"setUrlParams","ranges":[{"startOffset":8227,"endOffset":8556,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParam","ranges":[{"startOffset":8578,"endOffset":8790,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParamObj","ranges":[{"startOffset":8815,"endOffset":9210,"count":0}],"isBlockCoverage":false},{"functionName":"replaceUrlParam","ranges":[{"startOffset":9236,"endOffset":10448,"count":0}],"isBlockCoverage":false},{"functionName":"getUuid","ranges":[{"startOffset":10466,"endOffset":10635,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":10655,"endOffset":10791,"count":0}],"isBlockCoverage":false},{"functionName":"setEnv","ranges":[{"startOffset":10808,"endOffset":10833,"count":0}],"isBlockCoverage":false},{"functionName":"getEnv","ranges":[{"startOffset":10850,"endOffset":10895,"count":0}],"isBlockCoverage":false},{"functionName":"setObj","ranges":[{"startOffset":10912,"endOffset":11034,"count":0}],"isBlockCoverage":false},{"functionName":"getObj","ranges":[{"startOffset":11051,"endOffset":11284,"count":0}],"isBlockCoverage":false},{"functionName":"setLog","ranges":[{"startOffset":11301,"endOffset":12110,"count":0}],"isBlockCoverage":false},{"functionName":"deepCopy","ranges":[{"startOffset":12129,"endOffset":12407,"count":0}],"isBlockCoverage":false}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  isBlob: () => isBlob,\n  isFile: () => isFile,\n  isIdCard: () => isIdCard,\n  isJson: () => isJson,\n  isPrime: () => isPrime\n});\nmodule.exports = __toCommonJS(stdin_exports);\nconst isPrime = (argValue) => !/^.?$|^(..+?)\\1+$/.test(\".\".repeat(argValue));\nconst isJson = (argData) => {\n  try {\n    return typeof JSON.parse(argData || \"\") === \"object\";\n  } catch (e) {\n  }\n  return false;\n};\nconst isBlob = (argData) => {\n  return argData instanceof Blob;\n};\nconst isFile = (argData) => {\n  return argData instanceof File;\n};\nconst isIdCard = (code) => {\n  let tip = \"\";\n  let city = {\n    11: \"\\u5317\\u4EAC\",\n    12: \"\\u5929\\u6D25\",\n    13: \"\\u6CB3\\u5317\",\n    14: \"\\u5C71\\u897F\",\n    15: \"\\u5185\\u8499\\u53E4\",\n    21: \"\\u8FBD\\u5B81\",\n    22: \"\\u5409\\u6797\",\n    23: \"\\u9ED1\\u9F99\\u6C5F \",\n    31: \"\\u4E0A\\u6D77\",\n    32: \"\\u6C5F\\u82CF\",\n    33: \"\\u6D59\\u6C5F\",\n    34: \"\\u5B89\\u5FBD\",\n    35: \"\\u798F\\u5EFA\",\n    36: \"\\u6C5F\\u897F\",\n    37: \"\\u5C71\\u4E1C\",\n    41: \"\\u6CB3\\u5357\",\n    42: \"\\u6E56\\u5317 \",\n    43: \"\\u6E56\\u5357\",\n    44: \"\\u5E7F\\u4E1C\",\n    45: \"\\u5E7F\\u897F\",\n    46: \"\\u6D77\\u5357\",\n    50: \"\\u91CD\\u5E86\",\n    51: \"\\u56DB\\u5DDD\",\n    52: \"\\u8D35\\u5DDE\",\n    53: \"\\u4E91\\u5357\",\n    54: \"\\u897F\\u85CF \",\n    61: \"\\u9655\\u897F\",\n    62: \"\\u7518\\u8083\",\n    63: \"\\u9752\\u6D77\",\n    64: \"\\u5B81\\u590F\",\n    65: \"\\u65B0\\u7586\",\n    71: \"\\u53F0\\u6E7E\",\n    81: \"\\u9999\\u6E2F\",\n    82: \"\\u6FB3\\u95E8\",\n    91: \"\\u56FD\\u5916 \"\n  };\n  let pass = true;\n  if (!code || !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n    code\n  )) {\n    tip = \"\\u8EAB\\u4EFD\\u8BC1\\u53F7\\u683C\\u5F0F\\u9519\\u8BEF\";\n    pass = false;\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = \"\\u5730\\u5740\\u7F16\\u7801\\u9519\\u8BEF\";\n    pass = false;\n  } else {\n    if (code.length === 18) {\n      const codeArr = code.split(\"\");\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n      let parity = [1, 0, \"X\", 9, 8, 7, 6, 5, 4, 3, 2];\n      let sum = 0;\n      let ai = 0;\n      let wi = 0;\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i]);\n        wi = factor[i];\n        sum += ai * wi;\n      }\n      let last = parity[sum % 11] + \"\";\n      if (last !== code[17]) {\n        tip = \"\\u6821\\u9A8C\\u4F4D\\u9519\\u8BEF\";\n        pass = false;\n      }\n    }\n  }\n  console.assert(!tip, tip);\n  return pass;\n};\n","originalCode":"/**\n * @module index\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 判断函数\n */\n/**\n * @function\n * @description 判断质数\n * @param {number} argValue 要判断的数据\n * @returns {boolean} 结果\n */\nexport const isPrime = (argValue: number): boolean =>\n  !/^.?$|^(..+?)\\1+$/.test('.'.repeat(argValue))\n\n/**\n * @function\n * @description 判断是否是JSON\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isJson = (argData: any): boolean => {\n  try {\n    return typeof JSON.parse(argData || '') === 'object'\n  } catch (e) {}\n  return false\n}\n/**\n * @function\n * @description 判断是否是Blob\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isBlob = (argData: any): boolean => {\n  return argData instanceof Blob\n}\n\n/**\n * @function\n * @description 判断是否是File\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isFile = (argData: any): boolean => {\n  return argData instanceof File\n}\n\n/**\n * @function\n * @description 是否为正确的身份证号码\n * @param  {string} code 身份证号码\n * @returns {boolean}\n */\nexport const isIdCard = (code: string): boolean => {\n  let tip = ''\n  let city: { [key: number]: string } = {\n    11: '北京',\n    12: '天津',\n    13: '河北',\n    14: '山西',\n    15: '内蒙古',\n    21: '辽宁',\n    22: '吉林',\n    23: '黑龙江 ',\n    31: '上海',\n    32: '江苏',\n    33: '浙江',\n    34: '安徽',\n    35: '福建',\n    36: '江西',\n    37: '山东',\n    41: '河南',\n    42: '湖北 ',\n    43: '湖南',\n    44: '广东',\n    45: '广西',\n    46: '海南',\n    50: '重庆',\n    51: '四川',\n    52: '贵州',\n    53: '云南',\n    54: '西藏 ',\n    61: '陕西',\n    62: '甘肃',\n    63: '青海',\n    64: '宁夏',\n    65: '新疆',\n    71: '台湾',\n    81: '香港',\n    82: '澳门',\n    91: '国外 ',\n  }\n  let pass = true\n  if (\n    !code ||\n    !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n      code\n    )\n  ) {\n    tip = '身份证号格式错误'\n    pass = false\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = '地址编码错误'\n    pass = false\n  } else {\n    // 18位身份证需要验证最后一位校验位\n    if (code.length === 18) {\n      const codeArr = code.split('')\n      // ∑(ai×Wi)(mod 11)\n      // 加权因子\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]\n      // 校验位\n      let parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2]\n      let sum = 0\n      let ai = 0\n      let wi = 0\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i])\n        wi = factor[i]\n        sum += ai * wi\n      }\n      let last = parity[sum % 11] + ''\n      if (last !== code[17]) {\n        tip = '校验位错误'\n        pass = false\n      }\n    }\n  }\n  console.assert(!tip, tip)\n  return pass\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"3082","url":"/home/runner/work/utils/utils/src/is.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3284,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":3281,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":5}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":0}],"isBlockCoverage":false},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"isBlob","ranges":[{"startOffset":927,"endOffset":939,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":951,"endOffset":963,"count":0}],"isBlockCoverage":false},{"functionName":"isIdCard","ranges":[{"startOffset":977,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"isJson","ranges":[{"startOffset":1003,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"isPrime","ranges":[{"startOffset":1028,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"isPrime","ranges":[{"startOffset":1108,"endOffset":1168,"count":0}],"isBlockCoverage":false},{"functionName":"isJson","ranges":[{"startOffset":1185,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"isBlob","ranges":[{"startOffset":1320,"endOffset":1370,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":1387,"endOffset":1437,"count":0}],"isBlockCoverage":false},{"functionName":"isIdCard","ranges":[{"startOffset":1456,"endOffset":3277,"count":0}],"isBlockCoverage":false}]}}]},{"leaks":false,"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1679538738921,"runtime":2127,"slow":false,"start":1679538736794},"skipped":false,"testFilePath":"/home/runner/work/utils/utils/test/class/Debounce.spec.ts","testResults":[{"rowKey":0,"ancestorTitles":["Debounce"],"duration":1817,"failureDetails":[],"failureMessages":[],"fullName":"Debounce Debounce","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"Debounce"}],"failureMessage":null,"v8Coverage":[{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar stdin_exports = {};\n__export(stdin_exports, {\n  Debounce: () => Debounce,\n  default: () => stdin_default\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar _timer;\nclass Debounce {\n  constructor() {\n    __privateAdd(this, _timer, void 0);\n  }\n  debounce(argFn, argWait = 500, ...args) {\n    if (__privateGet(this, _timer)) {\n      clearTimeout(__privateGet(this, _timer));\n    }\n    __privateSet(this, _timer, setTimeout(() => {\n      return argFn(...args);\n    }, argWait));\n  }\n}\n_timer = new WeakMap();\nvar stdin_default = Debounce;\n","originalCode":"import { AnyFn } from '../types'\n/**\n * @class\n * @classdesc 处理函数抖动\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @example  const db = new.Debounce(回调函数,等待时间,...回调函数的参数)\n */\nexport class Debounce {\n  #timer: any\n  /**\n   * @function\n   * @description 函数抖动，在等待n毫秒无点击后触发\n   * @param  {function} argFn 回调函数\n   * @param  {number} argWait 等待时间,默认0.5秒\n   * @param  {any} ...arg 回调函数的参数\n   * @returns {function}\n   */\n  debounce(argFn: AnyFn, argWait: number = 500, ...args: any): any {\n    if (this.#timer) {\n      clearTimeout(this.#timer)\n    }\n    this.#timer = setTimeout(() => {\n      return argFn(...args)\n    }, argWait)\n  }\n}\nexport default Debounce\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"2","url":"/home/runner/work/utils/utils/src/class/Debounce.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2090,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":2087,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":2}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":1}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"__accessCheck","ranges":[{"startOffset":887,"endOffset":974,"count":26},{"startOffset":939,"endOffset":972,"count":0}],"isBlockCoverage":true},{"functionName":"__privateGet","ranges":[{"startOffset":995,"endOffset":1134,"count":17},{"startOffset":1095,"endOffset":1113,"count":0}],"isBlockCoverage":true},{"functionName":"__privateAdd","ranges":[{"startOffset":1155,"endOffset":1351,"count":1},{"startOffset":1208,"endOffset":1277,"count":0},{"startOffset":1306,"endOffset":1323,"count":0}],"isBlockCoverage":true},{"functionName":"__privateSet","ranges":[{"startOffset":1372,"endOffset":1540,"count":9},{"startOffset":1471,"endOffset":1496,"count":0}],"isBlockCoverage":true},{"functionName":"Debounce","ranges":[{"startOffset":1604,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1631,"endOffset":1650,"count":1}],"isBlockCoverage":true},{"functionName":"Debounce","ranges":[{"startOffset":1732,"endOffset":1791,"count":1}],"isBlockCoverage":true},{"functionName":"debounce","ranges":[{"startOffset":1794,"endOffset":2028,"count":9},{"startOffset":1872,"endOffset":1927,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1970,"endOffset":2012,"count":3}],"isBlockCoverage":true}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  deepCopy: () => deepCopy,\n  delCookie: () => delCookie,\n  getCookie: () => getCookie,\n  getEnv: () => getEnv,\n  getInfo: () => getInfo,\n  getNetworkStatus: () => getNetworkStatus,\n  getObj: () => getObj,\n  getRandomColor: () => getRandomColor,\n  getRegexp: () => getRegexp,\n  getStorage: () => getStorage,\n  getUrlParam: () => getUrlParam,\n  getUrlParamObj: () => getUrlParamObj,\n  getUuid: () => getUuid,\n  randomInt: () => randomInt,\n  remInit: () => remInit,\n  replaceUrlParam: () => replaceUrlParam,\n  safe: () => safe,\n  safeData: () => safeData,\n  setCookie: () => setCookie,\n  setEnv: () => setEnv,\n  setLog: () => setLog,\n  setObj: () => setObj,\n  setStorage: () => setStorage,\n  setTitle: () => setTitle,\n  setUrlParams: () => setUrlParams,\n  sleep: () => sleep\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar import_is = require(\"./is\");\nlet isOnline = true;\nlet ENV = {};\nlet DATA_OBJECT = {};\nif (globalThis && globalThis.addEventListener) {\n  globalThis.addEventListener(\"offline\", function() {\n    console.debug(\"offLine\");\n    isOnline = false;\n  });\n  globalThis.addEventListener(\"online\", function() {\n    console.debug(\"onLine\");\n    isOnline = true;\n  });\n}\nconst getNetworkStatus = () => {\n  return isOnline;\n};\nconst getRegexp = () => {\n  return {\n    html: /<[^>]+>/gim,\n    password: /^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[\\W_]).{8,16}$/,\n    idCard: /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/,\n    idCardNormal: /^[0-9]\\d+([0-9]|X|x)*$/,\n    phone: /^1\\d{10}$/,\n    email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n    http: /http:\\/\\/|https:\\/\\//,\n    score: /^[1-9]\\d*|0$/,\n    int: /^[1-9]\\d*$/,\n    number: /^\\d*$/,\n    float1: /^(([1-9]\\d*)|0|(0.\\d{0,1})|([1-9]\\d*.\\d{0,1}))$/,\n    float2: /^(([1-9]\\d*)|0|(0.\\d{0,2})|([1-9]\\d*.\\d{0,2}))$/,\n    float3: /^(([1-9]\\d*)|0|(0.\\d{0,3})|([1-9]\\d*.\\d{0,3}))$/,\n    letterNumber: /^[a-zA-Z0-9]*$/,\n    letter: /^[a-zA-Z]*$/,\n    account: /^[a-zA-Z0-9_\\-\\u4e00-\\u9fa5]{1,50}$/,\n    realName: /^([\\u4e00-\\u9fa5]{1,50}|[\\u4e00-\\u9fa5]{1,25}[\\s][\\u4e00-\\u9fa5]{1,24}|[a-zA-Z_\\-.]{1,50}|[a-zA-Z_\\-.]{1,25}[\\s][a-zA-Z_\\-.]{1,24})$/,\n    cn: /^[\\u4e00-\\u9fa5]*$/,\n    ascii: /^[\\x20-\\x7E]+$/\n  };\n};\nconst setTitle = (argTitle) => {\n  if (typeof globalThis.document === \"object\") {\n    globalThis.document.title = String(argTitle);\n  }\n  if (getInfo().isAppleMobile) {\n    const i = document.createElement(\"iframe\");\n    i.onload = () => {\n      setTimeout(() => {\n        console.debug(\"apple mobile setting title\");\n        i.remove();\n      }, 10);\n    };\n    globalThis.document.body.appendChild(i);\n  }\n};\nconst remInit = (argBaseSize = 16, argWidth = 375) => {\n  const setRem = () => {\n    const scale = safeData(globalThis, \"document.documentElement.clientWidth\", argWidth) / argWidth;\n    safeData(\n      globalThis,\n      \"document.documentElement.style.fontSize\",\n      argBaseSize * scale + \"px\",\n      true\n    );\n  };\n  setRem();\n  globalThis.onresize = () => {\n    setRem();\n  };\n};\nconst getCookie = (argName) => {\n  const cookies = globalThis.document.cookie.split(\"; \");\n  const cookie = cookies.find((cookie2) => {\n    const [name] = cookie2.split(\"=\");\n    return argName === name;\n  });\n  return cookie ? decodeURIComponent(cookie.split(\"=\")[1] || \"\") : \"\";\n};\nconst setCookie = (argName, argValue = \"\", argTime = 24) => {\n  let now = new Date();\n  let offset = 8;\n  let utc = now.getTime() + now.getTimezoneOffset() * 6e4;\n  let nd = utc + 36e5 * offset;\n  let exp = new Date(nd);\n  let domain = globalThis.document.domain;\n  exp.setTime(exp.getTime() + argTime * 60 * 60 * 1e3);\n  globalThis.document.cookie = argName + \"=\" + encodeURIComponent(argValue) + \";path=/;expires=\" + exp.toUTCString() + \";domain=\" + domain + \";\";\n};\nconst delCookie = (argName = \"\") => {\n  setCookie(argName, \"\", -1);\n};\nconst getInfo = () => {\n  let ua = safeData(globalThis, \"navigator.userAgent\", \"\").toLowerCase();\n  let platform = safeData(\n    globalThis,\n    \"navigator.userAgentData.platform\",\n    \"\"\n  ).toLowerCase();\n  let info = {\n    ua,\n    platform,\n    isMobile: !!ua.match(/mobile/),\n    isWin: !!platform.match(\"win\"),\n    isIphone: !!ua.match(/iphone/),\n    isIpad: !!ua.match(/ipad/),\n    isMac: !!platform.match(\"mac\"),\n    isIos: !!platform.match(\"ios\"),\n    isAndroid: !!platform.match(\"android\"),\n    isSafari: ua.indexOf(\"safari\") > -1 && ua.indexOf(\"chrome\") < 1,\n    isIE: \"ActiveXObject\" in globalThis,\n    ieVersion: 0,\n    isAppleMobile: false,\n    isWeixin: !!ua.match(/MicroMessenger/i),\n    isAlipay: !!ua.match(/Alipay/i)\n  };\n  if (info.ua.match(\"msie\")) {\n    let IE = info.ua.match(/msie\\s([0-9]*)/);\n    if (IE && IE.length >= 2) {\n      info.ieVersion = +IE[1];\n    }\n  }\n  info.isAppleMobile = !!(info.isMobile && ua.toLowerCase().indexOf(\"applewebkit\") && ua.indexOf(\"chrome\") < 1);\n  return info;\n};\nconst getRandomColor = function() {\n  return \"#\" + (\"00000\" + (Math.random() * 16777216 << 0).toString(16)).substring(-6);\n};\nconst getStorage = (argKey, argNoJson) => {\n  let res = globalThis.localStorage.getItem(argKey);\n  if (!argNoJson && (0, import_is.isJson)(res) && res) {\n    res = JSON.parse(res);\n  }\n  return res || \"\";\n};\nconst setStorage = (argKey, argData) => {\n  if (typeof argData === \"object\") {\n    argData = JSON.stringify(argData);\n  }\n  globalThis.localStorage.setItem(argKey, String(argData));\n  return String(argData);\n};\nconst sleep = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\nconst safe = function safe2(argData, argCheck, argValue, argSetValueForce) {\n  if (!argData) {\n    return argValue;\n  }\n  if (typeof argCheck !== \"string\" && typeof argCheck !== \"number\") {\n    console.warn(\"argCheck\\u8BF7\\u4F20\\u5165string\\u5F53\\u524D\\u4E3A:\" + argCheck);\n    return \"\";\n  }\n  const temKey = argCheck.toString().split(\".\");\n  const temLen = temKey.length;\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== \"object\") {\n        if (argSetValueForce) {\n          console.warn(\"safeData setValue err\\uFF1A\", argData, \"index:\", i);\n        }\n        return argValue;\n      }\n      argData = argData[temKey[i]] || {};\n    }\n  }\n  if (argSetValueForce) {\n    ;\n    argData[temKey[temLen - 1]] = argValue;\n  }\n  if (typeof argValue === \"undefined\") {\n    return argData[temKey[temLen - 1]];\n  } else {\n    return argData[temKey[temLen - 1]] || argValue;\n  }\n};\nconst safeData = (argData, argCheck, argValue, argSetValueForce) => {\n  if (typeof argCheck !== \"string\" && typeof argCheck !== \"number\") {\n    console.warn(\"argCheck\\u8BF7\\u4F20\\u5165string\\u5F53\\u524D\\u4E3A:\" + argCheck);\n    return \"\";\n  }\n  const temKey = argCheck.toString().split(\".\");\n  const temLen = temKey.length;\n  if (!argData) {\n    return argValue;\n  }\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== \"object\") {\n        if (argSetValueForce) {\n          console.warn(\"safeData setValue err\\uFF1A\", argData, \"index:\", i);\n        }\n        return argValue;\n      }\n      argData = argData[temKey[i]] || {};\n    }\n  }\n  if (argSetValueForce) {\n    argData[temKey[temLen - 1]] = argValue;\n  }\n  if (typeof argValue === \"undefined\") {\n    return argData[temKey[temLen - 1]];\n  } else {\n    return argData[temKey[temLen - 1]] || argValue;\n  }\n};\nconst setUrlParams = (argParams, noMark) => {\n  let re = \"\";\n  if (!noMark) {\n    re = \"?\";\n  }\n  let paramsList = Object.keys(argParams);\n  let temLength = paramsList.length;\n  if (!temLength) {\n    return \"\";\n  }\n  paramsList.map((v, k) => {\n    re += v + \"=\" + argParams[v];\n    if (k < temLength - 1) {\n      re += \"&\";\n    }\n  });\n  return re;\n};\nconst getUrlParam = (argName, argUrl = globalThis.location.search || \"\") => {\n  let result = argUrl.match(new RegExp(\"[?&]\" + argName + \"=([^&]+)\", \"i\"));\n  if (!result) {\n    return \"\";\n  }\n  return decodeURIComponent(result[1]);\n};\nconst getUrlParamObj = (argData = globalThis.location.search || globalThis.location.hash) => {\n  const res = {};\n  try {\n    argData.slice(argData.indexOf(\"?\") + 1).split(\"&\").forEach((v) => {\n      const [key, val] = v.split(\"=\");\n      if (key !== v) {\n        res[key] = decodeURIComponent(val);\n      }\n    });\n    return res;\n  } catch (e) {\n    console.error(\"\\u8F6C\\u6362\\u5931\\u8D25\", e);\n    return res;\n  }\n};\nconst replaceUrlParam = (name, value, url = globalThis.location.href || \"\") => {\n  const reg = new RegExp(\"([?]|&)(\" + name + \"=)([^&#]*)([&]?|$)\", \"img\");\n  const r = url.match(reg);\n  const search = url.split(\"?\");\n  let strValue = url;\n  if (value === void 0 || value === null) {\n    if (r != null) {\n      strValue = url.replace(reg, (_match, p1, _p2, _p3, p4) => {\n        if (!p4 || !p4.length) {\n          return \"\";\n        } else if (p1 === p4) {\n          return p1;\n        }\n        return p1 + p4;\n      });\n      strValue = strValue.replace(\"?&\", \"?\");\n    }\n  } else if (r != null) {\n    strValue = url.replace(reg, `$1$2${value}$4`);\n  } else if (search.length > 1) {\n    const sub = search[1].split(\"#\");\n    if (sub.length > 1) {\n      if (sub[1].length) {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}#${sub[1]}`;\n      } else {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}${sub[1]}`;\n      }\n    } else {\n      strValue = `${search[0]}?${search[1]}&${name}=${value}`;\n    }\n  } else {\n    const sub = url.split(\"#\");\n    if (sub.length > 1) {\n      strValue = `${sub[0]}?${name}=${value}#${sub[1]}`;\n    } else {\n      strValue = `${url}?${name}=${value}`;\n    }\n  }\n  return strValue;\n};\nconst getUuid = () => {\n  const S4 = () => ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);\n  return S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + Date.now();\n};\nconst randomInt = (min = 0, max = 100) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst setEnv = (env) => {\n  ENV = env;\n};\nconst getEnv = (key) => {\n  return safeData(ENV, key, \"\");\n};\nconst setObj = (key, data) => {\n  if (!key) {\n    DATA_OBJECT = data;\n  } else {\n    DATA_OBJECT[key] = data;\n  }\n  return DATA_OBJECT;\n};\nconst getObj = (key, argData, isDeepCopy) => {\n  let res = safeData(DATA_OBJECT, key, {});\n  if (argData) {\n    res = Object.assign(res, argData);\n  }\n  if (!isDeepCopy) {\n    return res;\n  } else {\n    return JSON.parse(JSON.stringify(res));\n  }\n};\nconst setLog = (logLevel, logConfig) => {\n  logLevel = logLevel || getEnv(\"VUE_APP_LOG_LEVEL\") || 4;\n  const logList = [\"log\", \"info\", \"warn\", \"error\"];\n  const log = {};\n  logList.forEach((v) => {\n    log[v] = console[v];\n  });\n  for (let key in logConfig) {\n    if (console[key]) {\n      ;\n      console[key] = (...arg) => {\n        var _a, _b;\n        ;\n        log[key](...arg, (_a = Error().stack) == null ? void 0 : _a.split(\"\\n\")[2]);\n        logConfig[key] && logConfig[key](...arg, (_b = Error().stack) == null ? void 0 : _b.split(\"\\n\")[2]);\n      };\n    }\n  }\n  switch (+logLevel) {\n    case 1:\n      console.warn = () => {\n      };\n    case 2:\n      console.info = () => {\n      };\n    case 3:\n      console.log = () => {\n      };\n    case 4:\n      console.debug = () => {\n      };\n    default:\n      break;\n  }\n};\nconst deepCopy = (obj) => {\n  if (typeof obj !== \"object\" || obj === null) {\n    return obj;\n  }\n  let copy = Array.isArray(obj) ? [] : {};\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ;\n      copy[key] = deepCopy(obj[key]);\n    }\n  }\n  return copy;\n};\n","originalCode":"/**\n * @module index\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 公共函数，使用'lj-utils'引入\n */\n\nimport { isJson } from './is'\nimport { Info, AnyObject, Bool } from './types'\n\nlet isOnline: boolean = true\nlet ENV: AnyObject = {}\nlet DATA_OBJECT: AnyObject = {}\n// 断网监听\nif (globalThis && globalThis.addEventListener) {\n  // #ifdef H5\n  globalThis.addEventListener('offline', function () {\n    console.debug('offLine')\n    isOnline = false\n  })\n  globalThis.addEventListener('online', function () {\n    console.debug('onLine')\n    isOnline = true\n  })\n  // #endif\n}\n\n/**\n * @function\n * @description 获取当前网络状态（H5）\n * @return boolean\n */\nexport const getNetworkStatus = () => {\n  return isOnline\n}\n\n/**\n * @function\n * @description 正则收集\n * @returns {object}\n */\nexport const getRegexp = (): AnyObject => {\n  return {\n    // 匹配html标签，提取html文字： htmlCode.replace(reg.html,'')\n    html: /<[^>]+>/gim,\n    // 至少1数字1字母1字符，8-16位\n    password: /^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[\\W_]).{8,16}$/,\n    // 普通身份证号正则，isIdCard更为严格\n    idCard: /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/,\n    // 简易身份证号 数字+x\n    idCardNormal: /^[0-9]\\d+([0-9]|X|x)*$/,\n    // 手机号\n    phone: /^1\\d{10}$/,\n    // 邮箱\n    email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n    // 网址\n    http: /http:\\/\\/|https:\\/\\//,\n    // 含0整数（得分）\n    score: /^[1-9]\\d*|0$/,\n    // 整数\n    int: /^[1-9]\\d*$/,\n    // 匹配数字\n    number: /^\\d*$/,\n    // >=0||1位小数\n    float1: /^(([1-9]\\d*)|0|(0.\\d{0,1})|([1-9]\\d*.\\d{0,1}))$/,\n    // >=0||2位小数\n    float2: /^(([1-9]\\d*)|0|(0.\\d{0,2})|([1-9]\\d*.\\d{0,2}))$/,\n    // >=0||3位小数\n    float3: /^(([1-9]\\d*)|0|(0.\\d{0,3})|([1-9]\\d*.\\d{0,3}))$/,\n    // 字母+数字组合\n    letterNumber: /^[a-zA-Z0-9]*$/,\n    // 字母\n    letter: /^[a-zA-Z]*$/,\n    // 帐号50个字内：大小写+数字+中文+'_'+'-'\n    account: /^[a-zA-Z0-9_\\-\\u4e00-\\u9fa5]{1,50}$/,\n    // 中英文姓名 50个字内/中文 中文/英文-. 英文-./\n    realName:\n      /^([\\u4e00-\\u9fa5]{1,50}|[\\u4e00-\\u9fa5]{1,25}[\\s][\\u4e00-\\u9fa5]{1,24}|[a-zA-Z_\\-.]{1,50}|[a-zA-Z_\\-.]{1,25}[\\s][a-zA-Z_\\-.]{1,24})$/,\n    // 匹配中文\n    cn: /^[\\u4e00-\\u9fa5]*$/,\n    // 匹配ASCII,非中文之外的字符（全角字符）\n    ascii: /^[\\x20-\\x7E]+$/,\n  }\n}\n\n/**\n * @function\n * @description 设置标题\n * @param  {string} argTitle 标题\n */\nexport const setTitle = (argTitle: string | number) => {\n  if (typeof globalThis.document === 'object') {\n    globalThis.document.title = String(argTitle)\n  }\n  if (getInfo().isAppleMobile) {\n    const i = document.createElement('iframe')\n    i.onload = () => {\n      setTimeout(() => {\n        console.debug('apple mobile setting title')\n        i.remove()\n      }, 10)\n    }\n    globalThis.document.body.appendChild(i)\n  }\n}\n\n/**\n * @function\n * @description 使用postcss-px2rem时使用\n * @param {number} argBaseSize 基础大小 16px（要跟配置一致）\n * @param {number} argWidth 基准宽度\n */\nexport const remInit = (argBaseSize: number = 16, argWidth: number = 375) => {\n  // 设置 rem 函数\n  const setRem = () => {\n    // 当前页面宽度相对于 argWidth 宽的缩放比例，可根据自己需要修改。\n    const scale =\n      safeData(globalThis, 'document.documentElement.clientWidth', argWidth) /\n      argWidth\n    // 设置页面根节点字体大小\n    safeData(\n      globalThis,\n      'document.documentElement.style.fontSize',\n      argBaseSize * scale + 'px',\n      true\n    )\n  }\n  // 初始化\n  setRem()\n  // 改变窗口大小时重新设置 rem\n  globalThis.onresize = () => {\n    setRem()\n  }\n}\n\n/**\n * @function\n * @description 获取cookie\n * @param  {string} argName 要获取的值\n * @returns {string}\n */\nexport const getCookie = (argName: string): string => {\n  const cookies = globalThis.document.cookie.split('; ')\n  const cookie = cookies.find((cookie) => {\n    const [name] = cookie.split('=')\n    return argName === name\n  })\n  return cookie ? decodeURIComponent(cookie.split('=')[1] || '') : ''\n}\n\n/**\n * @function\n * @description 设置cookie\n * @param  {string} argName 要设置的key\n * @param  {string} argValue 要设置的value\n * @param  {number} argTime 过期时间/时 默认24小时\n */\nexport const setCookie = (\n  argName: string,\n  argValue: string | number | boolean = '',\n  argTime: number = 24\n) => {\n  let now = new Date()\n  let offset = 8\n  let utc = now.getTime() + now.getTimezoneOffset() * 60000\n  let nd = utc + 3600000 * offset\n  let exp = new Date(nd)\n  let domain = globalThis.document.domain\n  exp.setTime(exp.getTime() + argTime * 60 * 60 * 1000)\n  globalThis.document.cookie =\n    argName +\n    '=' +\n    encodeURIComponent(argValue) +\n    ';path=/;expires=' +\n    exp.toUTCString() +\n    ';domain=' +\n    domain +\n    ';'\n}\n\n/**\n * @function\n * @description 清除cookie\n * @param  {string} argName 要清除的值\n */\nexport const delCookie = (argName: string = '') => {\n  setCookie(argName, '', -1)\n}\n\n/**\n * @function\n * @description 检测浏览器状态，系统状态 *\n * @returns {Info} {\n * ua: ua,\n * platform: 平台,\n * isMobile: 移动端,\n * isWin: winPC端,\n * isIphone: iphone,\n * isIpad: ipad,\n * isMac: mac,\n * isAppleMobile: 苹果移动端webview\n * isSafari: Safari浏览器,\n * isIos: Ios平台,\n * isAndroid: android平台,\n * isIE: 显示8 9 10, true为11以上\n * ...\n * }\n */\nexport const getInfo = (): Info => {\n  let ua = safeData(globalThis, 'navigator.userAgent', '').toLowerCase()\n  let platform: string = safeData(\n    globalThis,\n    'navigator.userAgentData.platform',\n    ''\n  ).toLowerCase()\n  let info: Info = {\n    ua: ua,\n    platform: platform,\n    isMobile: !!ua.match(/mobile/),\n    isWin: !!platform.match('win'),\n    isIphone: !!ua.match(/iphone/),\n    isIpad: !!ua.match(/ipad/),\n    isMac: !!platform.match('mac'),\n    isIos: !!platform.match('ios'),\n    isAndroid: !!platform.match('android'),\n    isSafari: ua.indexOf('safari') > -1 && ua.indexOf('chrome') < 1,\n    isIE: 'ActiveXObject' in globalThis,\n    ieVersion: 0,\n    isAppleMobile: false,\n    isWeixin: !!ua.match(/MicroMessenger/i),\n    isAlipay: !!ua.match(/Alipay/i),\n  }\n  if (info.ua.match('msie')) {\n    let IE = info.ua.match(/msie\\s([0-9]*)/)\n    if (IE && IE.length >= 2) {\n      info.ieVersion = +IE[1]\n    }\n  }\n  info.isAppleMobile = !!(\n    info.isMobile &&\n    ua.toLowerCase().indexOf('applewebkit') &&\n    ua.indexOf('chrome') < 1\n  )\n  return info\n}\n\n/**\n * @function\n * @description 获取随机颜色\n * @return string\n */\nexport const getRandomColor = function () {\n  return (\n    '#' +\n    ('00000' + ((Math.random() * 0x1000000) << 0).toString(16)).substring(-6)\n  )\n}\n\n/**\n * @function\n * @description 获取storage的值，默认将json转为obj\n * @param {string} argKey 要获取的key\n * @param {string} argNoJson true时不自动转换JSON字符串\n * @returns {any} key对应的数据\n */\nexport const getStorage = (argKey: string, argNoJson?: string): any => {\n  let res = globalThis.localStorage.getItem(argKey)\n  // 默认转义JSON字符串\n  if (!argNoJson && isJson(res) && res) {\n    res = JSON.parse(res)\n  }\n  return res || ''\n}\n\n/**\n * @function\n * @description 设置storage的值，默认将obj转为json\n * @param {string} argKey 要获取的key\n * @param {unknown} argData 要保存的数据\n * @returns {string} 保存的数据String\n */\nexport const setStorage = (argKey: string, argData: unknown): string => {\n  if (typeof argData === 'object') {\n    argData = JSON.stringify(argData)\n  }\n  globalThis.localStorage.setItem(argKey, String(argData))\n  return String(argData)\n}\n\n/**\n * @function\n * @description setTimeout promise版\n * @param  {number} ms 时间，毫秒\n */\nexport const sleep = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n// 返回T下的key对应类型\ntype KeyOf<T extends Record<string, any>, K = keyof T> = K extends string\n  ? T[K] extends Function\n    ? never\n    : K\n  : never\ntype DotField<T extends Record<string, any>, K = KeyOf<T>> = K extends string\n  ? K | `${K}.${DotField<T[K]>}`\n  : never\n// 返回传入K或T[K]对应的类型\ntype ValueOf<\n  T extends Record<string, any>,\n  K\n> = K extends `${infer I}.${infer R}`\n  ? ValueOf<T[I], R>\n  : K extends string\n  ? T[K]\n  : never\n\n/**\n * @function\n * @description 数据安全访问\n * @param  {any} argData  [原始数据]\n * @param  {string} argCheck [要返回的数据，用'.'连接，数组用'.+数字表示']\n * @param  {any} argValue [如果数据有误，返回的值，选填]\n * @param  {boolean|0|1} argSetValueForce [是否强制赋值argValue]\n * @returns {any}\n */\nexport const safe = function safe<\n  T extends Record<string, any>,\n  K extends DotField<T>\n>(\n  argData: T,\n  argCheck: K,\n  argValue?: ValueOf<T, K>,\n  argSetValueForce?: Bool\n): ValueOf<T, K> | undefined | string {\n  if (!argData) {\n    return argValue\n  }\n  if (typeof argCheck !== 'string' && typeof argCheck !== 'number') {\n    console.warn('argCheck请传入string当前为:' + argCheck)\n    return ''\n  }\n  const temKey = argCheck.toString().split('.')\n  const temLen = temKey.length\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== 'object') {\n        if (argSetValueForce) {\n          console.warn('safeData setValue err：', argData, 'index:', i)\n        }\n        return argValue\n      }\n      argData = argData[temKey[i]] || {}\n    }\n  }\n  if (argSetValueForce) {\n    ;(argData as AnyObject)[temKey[temLen - 1]] = argValue\n  }\n  if (typeof argValue === 'undefined') {\n    return argData[temKey[temLen - 1]]\n  } else {\n    return argData[temKey[temLen - 1]] || argValue\n  }\n}\n/**\n * @function\n * @description 数据安全访问\n * @param  {any} argData  [原始数据]\n * @param  {string} argCheck [要返回的数据，用'.'连接，数组用'.+数字表示']\n * @param  {any} argValue [如果数据有误，返回的值，选填]\n * @param  {boolean|0|1} argSetValueForce [是否强制赋值argValue]\n * @returns {any}\n */\nexport const safeData = (\n  argData: any,\n  argCheck: string,\n  argValue?: any,\n  argSetValueForce?: Bool\n): any => {\n  if (typeof argCheck !== 'string' && typeof argCheck !== 'number') {\n    console.warn('argCheck请传入string当前为:' + argCheck)\n    return ''\n  }\n  const temKey = argCheck.toString().split('.')\n  const temLen = temKey.length\n  if (!argData) {\n    return argValue\n  }\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== 'object') {\n        if (argSetValueForce) {\n          console.warn('safeData setValue err：', argData, 'index:', i)\n        }\n        return argValue\n      }\n      argData = argData[temKey[i]] || {}\n    }\n  }\n  if (argSetValueForce) {\n    argData[temKey[temLen - 1]] = argValue\n  }\n  if (typeof argValue === 'undefined') {\n    return argData[temKey[temLen - 1]]\n  } else {\n    return argData[temKey[temLen - 1]] || argValue\n  }\n}\n\n/**\n * @description obj转url参数\n * @function\n * @param {any} argParams 参数对象\n * @param {boolean?} noMark 默认带?,true时,不带\n * @returns {string}\n */\nexport const setUrlParams = (argParams: any, noMark?: boolean): string => {\n  let re = ''\n  if (!noMark) {\n    re = '?'\n  }\n  let paramsList = Object.keys(argParams)\n  let temLength = paramsList.length\n  if (!temLength) {\n    return ''\n  }\n  paramsList.map((v, k) => {\n    re += v + '=' + argParams[v]\n    if (k < temLength - 1) {\n      re += '&'\n    }\n  })\n  return re\n}\n\n/**\n * @description 获取url参数\n * @function\n * @param {string} argName 要获取的key\n * @param {string} argUrl url数据\n * @returns {string}\n */\nexport const getUrlParam = (\n  argName: string,\n  argUrl: string = globalThis.location.search || ''\n): string => {\n  let result = argUrl.match(new RegExp('[?&]' + argName + '=([^&]+)', 'i'))\n  if (!result) {\n    return ''\n  }\n  return decodeURIComponent(result[1])\n}\n\n/**\n * @description 获取所有url参数，eg: a=1&b=2 to {a:1,b:2}\n * @function\n * @param {string} argData 要处理的数据\n * @returns {any}\n */\nexport const getUrlParamObj = (\n  argData: string = globalThis.location.search || globalThis.location.hash\n): AnyObject => {\n  const res: AnyObject = {}\n  try {\n    argData\n      .slice(argData.indexOf('?') + 1)\n      .split('&')\n      .forEach((v) => {\n        const [key, val] = v.split('=')\n        if (key !== v) {\n          res[key] = decodeURIComponent(val)\n        }\n      })\n    return res\n  } catch (e) {\n    console.error('转换失败', e)\n    return res\n  }\n  // let temObj = new URLSearchParams(argData)\n  // let resObj = {}\n  // for (const [key, value] of temObj) {\n  //   resObj[key] = value\n  // }\n  // return resObj\n}\n\n/**\n * @description 通过正则匹配修改当前页面的url中的参数\n * @function\n * @param  {string} name key\n * @param  {string | number| undefined | null} value 要替换的value\n * @param  {string} url 要替换的网址,默认location.href\n * @returns {string}\n */\nexport const replaceUrlParam = (\n  name: string,\n  value: string | number | undefined | null,\n  url: string = globalThis.location.href || ''\n): string => {\n  const reg = new RegExp('([?]|&)(' + name + '=)([^&#]*)([&]?|$)', 'img')\n  const r = url.match(reg)\n  const search = url.split('?')\n  let strValue: string = url\n  if (value === undefined || value === null) {\n    if (r != null) {\n      strValue = url.replace(reg, (_match, p1, _p2, _p3, p4) => {\n        if (!p4 || !p4.length) {\n          return ''\n        } else if (p1 === p4) {\n          return p1\n        }\n        return p1 + p4\n      })\n      strValue = strValue.replace('?&', '?')\n    }\n  } else if (r != null) {\n    strValue = url.replace(reg, `$1$2${value}$4`)\n  } else if (search.length > 1) {\n    const sub = search[1].split('#')\n    if (sub.length > 1) {\n      if (sub[1].length) {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}#${sub[1]}`\n      } else {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}${sub[1]}`\n      }\n    } else {\n      strValue = `${search[0]}?${search[1]}&${name}=${value}`\n    }\n  } else {\n    // 不存在?时,搜索hash\n    const sub = url.split('#')\n    if (sub.length > 1) {\n      strValue = `${sub[0]}?${name}=${value}#${sub[1]}`\n    } else {\n      strValue = `${url}?${name}=${value}`\n    }\n  }\n  return strValue\n}\n\n/**\n * @function\n * @description 获取简单uuid\n * @returns {string} uuid\n */\nexport const getUuid = (): string => {\n  const S4 = () =>\n    (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  return S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + Date.now()\n}\n\n/**\n * @function\n * @description 获取随机数,含最大值，含最小值\n * @param  {number} min 最小值\n * @param  {number} max 最大值\n * @returns {number}\n */\nexport const randomInt = (min: number = 0, max: number = 100): number => {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  // 含最大值，含最小值\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n/**\n * @function\n * @description 设置env参数，一般在main.js中调用\n * @param  {AnyObject} env 要设置的值\n */\nexport const setEnv = (env: AnyObject) => {\n  ENV = env\n}\n/**\n * @function\n * @description 获取env参数\n * @param  {string} key 要获取的值\n * @returns {string} 获取的值\n */\nexport const getEnv = (key: string): string => {\n  return safeData(ENV, key, '')\n}\n\n/**\n * @function\n * @description 设置object参数,可做运行时缓存\n * @param  {string} key 要设置的key\n * @param  {AnyObject} data 要设置的值\n * @returns {AnyObject}\n */\nexport const setObj = (key: string, data: AnyObject): AnyObject => {\n  if (!key) {\n    DATA_OBJECT = data\n  } else {\n    DATA_OBJECT[key] = data\n  }\n  return DATA_OBJECT\n}\n\n/**\n * @function\n * @description 获取object参数\n * @param  {string} key 要获取的值\n * @param  {string} argData 要合并的值\n * @param  {boolean} isDeepCopy 是否深拷贝\n * @returns {AnyObject} 获取的值\n */\nexport const getObj = (\n  key: string,\n  argData?: AnyObject,\n  isDeepCopy?: Bool\n): AnyObject => {\n  let res: AnyObject = safeData(DATA_OBJECT, key, {})\n  if (argData) {\n    res = Object.assign(res, argData)\n  }\n  if (!isDeepCopy) {\n    return res\n  } else {\n    return JSON.parse(JSON.stringify(res))\n  }\n}\n\n/**\n * @function\n * @description 设置日志输出logLevel 1 error 2 warn 3 info 4 log 5 debug\n * @param {AnyObject} logConfig 重写配置\n * @param {function} logConfig.error 错误日志回调（做额外处理用）\n */\nexport const setLog = (logLevel?: string | number, logConfig?: AnyObject) => {\n  // 1 error 2 warn 3 info 4 log 5 debug\n  logLevel = logLevel || getEnv('VUE_APP_LOG_LEVEL') || 4\n  const logList = ['log', 'info', 'warn', 'error']\n  const log: AnyObject = {}\n  logList.forEach((v) => {\n    log[v] = (console as AnyObject)[v]\n  })\n  for (let key in logConfig) {\n    if ((console as AnyObject)[key]) {\n      ;(console as AnyObject)[key] = (...arg: any[]) => {\n        ;(log as AnyObject)[key](...arg, Error().stack?.split('\\n')[2])\n        // 回调处理\n        logConfig[key] && logConfig[key](...arg, Error().stack?.split('\\n')[2])\n      }\n    }\n  }\n  switch (+logLevel) {\n    case 1:\n      console.warn = () => {}\n    case 2:\n      console.info = () => {}\n    case 3:\n      console.log = () => {}\n    case 4:\n      console.debug = () => {}\n    default:\n      break\n  }\n  // return log\n}\n\n/**\n * 深拷贝函数\n * @param obj 需要拷贝的对象\n * @returns 拷贝后的对象\n */\nexport const deepCopy = (obj: any): any => {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj\n  }\n  let copy = Array.isArray(obj) ? [] : {}\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ;(copy as AnyObject)[key] = deepCopy(obj[key])\n    }\n  }\n  return copy\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"3339","url":"/home/runner/work/utils/utils/src/base.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12414,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":12411,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":26}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":26}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":6}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"deepCopy","ranges":[{"startOffset":929,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"delCookie","ranges":[{"startOffset":958,"endOffset":973,"count":0}],"isBlockCoverage":false},{"functionName":"getCookie","ranges":[{"startOffset":988,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"getEnv","ranges":[{"startOffset":1015,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":1040,"endOffset":1053,"count":0}],"isBlockCoverage":false},{"functionName":"getNetworkStatus","ranges":[{"startOffset":1075,"endOffset":1097,"count":0}],"isBlockCoverage":false},{"functionName":"getObj","ranges":[{"startOffset":1109,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomColor","ranges":[{"startOffset":1141,"endOffset":1161,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexp","ranges":[{"startOffset":1176,"endOffset":1191,"count":0}],"isBlockCoverage":false},{"functionName":"getStorage","ranges":[{"startOffset":1207,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParam","ranges":[{"startOffset":1240,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParamObj","ranges":[{"startOffset":1277,"endOffset":1297,"count":0}],"isBlockCoverage":false},{"functionName":"getUuid","ranges":[{"startOffset":1310,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":1338,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"remInit","ranges":[{"startOffset":1366,"endOffset":1379,"count":0}],"isBlockCoverage":false},{"functionName":"replaceUrlParam","ranges":[{"startOffset":1400,"endOffset":1421,"count":0}],"isBlockCoverage":false},{"functionName":"safe","ranges":[{"startOffset":1431,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"safeData","ranges":[{"startOffset":1455,"endOffset":1469,"count":0}],"isBlockCoverage":false},{"functionName":"setCookie","ranges":[{"startOffset":1484,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"setEnv","ranges":[{"startOffset":1511,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"setLog","ranges":[{"startOffset":1535,"endOffset":1547,"count":0}],"isBlockCoverage":false},{"functionName":"setObj","ranges":[{"startOffset":1559,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"setStorage","ranges":[{"startOffset":1587,"endOffset":1603,"count":0}],"isBlockCoverage":false},{"functionName":"setTitle","ranges":[{"startOffset":1617,"endOffset":1631,"count":0}],"isBlockCoverage":false},{"functionName":"setUrlParams","ranges":[{"startOffset":1649,"endOffset":1667,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":1678,"endOffset":1689,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1920,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2031,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"getNetworkStatus","ranges":[{"startOffset":2127,"endOffset":2155,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexp","ranges":[{"startOffset":2175,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"setTitle","ranges":[{"startOffset":3114,"endOffset":3506,"count":0}],"isBlockCoverage":false},{"functionName":"remInit","ranges":[{"startOffset":3524,"endOffset":3892,"count":0}],"isBlockCoverage":false},{"functionName":"getCookie","ranges":[{"startOffset":3912,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"setCookie","ranges":[{"startOffset":4196,"endOffset":4645,"count":0}],"isBlockCoverage":false},{"functionName":"delCookie","ranges":[{"startOffset":4665,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":4734,"endOffset":5737,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomColor","ranges":[{"startOffset":5762,"endOffset":5863,"count":0}],"isBlockCoverage":false},{"functionName":"getStorage","ranges":[{"startOffset":5884,"endOffset":6071,"count":0}],"isBlockCoverage":false},{"functionName":"setStorage","ranges":[{"startOffset":6092,"endOffset":6282,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":6298,"endOffset":6369,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6329,"endOffset":6365,"count":6}],"isBlockCoverage":true},{"functionName":"safe2","ranges":[{"startOffset":6384,"endOffset":7293,"count":0}],"isBlockCoverage":false},{"functionName":"safeData","ranges":[{"startOffset":7312,"endOffset":8204,"count":0}],"isBlockCoverage":false},{"functionName":"setUrlParams","ranges":[{"startOffset":8227,"endOffset":8556,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParam","ranges":[{"startOffset":8578,"endOffset":8790,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParamObj","ranges":[{"startOffset":8815,"endOffset":9210,"count":0}],"isBlockCoverage":false},{"functionName":"replaceUrlParam","ranges":[{"startOffset":9236,"endOffset":10448,"count":0}],"isBlockCoverage":false},{"functionName":"getUuid","ranges":[{"startOffset":10466,"endOffset":10635,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":10655,"endOffset":10791,"count":0}],"isBlockCoverage":false},{"functionName":"setEnv","ranges":[{"startOffset":10808,"endOffset":10833,"count":0}],"isBlockCoverage":false},{"functionName":"getEnv","ranges":[{"startOffset":10850,"endOffset":10895,"count":0}],"isBlockCoverage":false},{"functionName":"setObj","ranges":[{"startOffset":10912,"endOffset":11034,"count":0}],"isBlockCoverage":false},{"functionName":"getObj","ranges":[{"startOffset":11051,"endOffset":11284,"count":0}],"isBlockCoverage":false},{"functionName":"setLog","ranges":[{"startOffset":11301,"endOffset":12110,"count":0}],"isBlockCoverage":false},{"functionName":"deepCopy","ranges":[{"startOffset":12129,"endOffset":12407,"count":0}],"isBlockCoverage":false}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  isBlob: () => isBlob,\n  isFile: () => isFile,\n  isIdCard: () => isIdCard,\n  isJson: () => isJson,\n  isPrime: () => isPrime\n});\nmodule.exports = __toCommonJS(stdin_exports);\nconst isPrime = (argValue) => !/^.?$|^(..+?)\\1+$/.test(\".\".repeat(argValue));\nconst isJson = (argData) => {\n  try {\n    return typeof JSON.parse(argData || \"\") === \"object\";\n  } catch (e) {\n  }\n  return false;\n};\nconst isBlob = (argData) => {\n  return argData instanceof Blob;\n};\nconst isFile = (argData) => {\n  return argData instanceof File;\n};\nconst isIdCard = (code) => {\n  let tip = \"\";\n  let city = {\n    11: \"\\u5317\\u4EAC\",\n    12: \"\\u5929\\u6D25\",\n    13: \"\\u6CB3\\u5317\",\n    14: \"\\u5C71\\u897F\",\n    15: \"\\u5185\\u8499\\u53E4\",\n    21: \"\\u8FBD\\u5B81\",\n    22: \"\\u5409\\u6797\",\n    23: \"\\u9ED1\\u9F99\\u6C5F \",\n    31: \"\\u4E0A\\u6D77\",\n    32: \"\\u6C5F\\u82CF\",\n    33: \"\\u6D59\\u6C5F\",\n    34: \"\\u5B89\\u5FBD\",\n    35: \"\\u798F\\u5EFA\",\n    36: \"\\u6C5F\\u897F\",\n    37: \"\\u5C71\\u4E1C\",\n    41: \"\\u6CB3\\u5357\",\n    42: \"\\u6E56\\u5317 \",\n    43: \"\\u6E56\\u5357\",\n    44: \"\\u5E7F\\u4E1C\",\n    45: \"\\u5E7F\\u897F\",\n    46: \"\\u6D77\\u5357\",\n    50: \"\\u91CD\\u5E86\",\n    51: \"\\u56DB\\u5DDD\",\n    52: \"\\u8D35\\u5DDE\",\n    53: \"\\u4E91\\u5357\",\n    54: \"\\u897F\\u85CF \",\n    61: \"\\u9655\\u897F\",\n    62: \"\\u7518\\u8083\",\n    63: \"\\u9752\\u6D77\",\n    64: \"\\u5B81\\u590F\",\n    65: \"\\u65B0\\u7586\",\n    71: \"\\u53F0\\u6E7E\",\n    81: \"\\u9999\\u6E2F\",\n    82: \"\\u6FB3\\u95E8\",\n    91: \"\\u56FD\\u5916 \"\n  };\n  let pass = true;\n  if (!code || !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n    code\n  )) {\n    tip = \"\\u8EAB\\u4EFD\\u8BC1\\u53F7\\u683C\\u5F0F\\u9519\\u8BEF\";\n    pass = false;\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = \"\\u5730\\u5740\\u7F16\\u7801\\u9519\\u8BEF\";\n    pass = false;\n  } else {\n    if (code.length === 18) {\n      const codeArr = code.split(\"\");\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n      let parity = [1, 0, \"X\", 9, 8, 7, 6, 5, 4, 3, 2];\n      let sum = 0;\n      let ai = 0;\n      let wi = 0;\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i]);\n        wi = factor[i];\n        sum += ai * wi;\n      }\n      let last = parity[sum % 11] + \"\";\n      if (last !== code[17]) {\n        tip = \"\\u6821\\u9A8C\\u4F4D\\u9519\\u8BEF\";\n        pass = false;\n      }\n    }\n  }\n  console.assert(!tip, tip);\n  return pass;\n};\n","originalCode":"/**\n * @module index\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 判断函数\n */\n/**\n * @function\n * @description 判断质数\n * @param {number} argValue 要判断的数据\n * @returns {boolean} 结果\n */\nexport const isPrime = (argValue: number): boolean =>\n  !/^.?$|^(..+?)\\1+$/.test('.'.repeat(argValue))\n\n/**\n * @function\n * @description 判断是否是JSON\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isJson = (argData: any): boolean => {\n  try {\n    return typeof JSON.parse(argData || '') === 'object'\n  } catch (e) {}\n  return false\n}\n/**\n * @function\n * @description 判断是否是Blob\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isBlob = (argData: any): boolean => {\n  return argData instanceof Blob\n}\n\n/**\n * @function\n * @description 判断是否是File\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isFile = (argData: any): boolean => {\n  return argData instanceof File\n}\n\n/**\n * @function\n * @description 是否为正确的身份证号码\n * @param  {string} code 身份证号码\n * @returns {boolean}\n */\nexport const isIdCard = (code: string): boolean => {\n  let tip = ''\n  let city: { [key: number]: string } = {\n    11: '北京',\n    12: '天津',\n    13: '河北',\n    14: '山西',\n    15: '内蒙古',\n    21: '辽宁',\n    22: '吉林',\n    23: '黑龙江 ',\n    31: '上海',\n    32: '江苏',\n    33: '浙江',\n    34: '安徽',\n    35: '福建',\n    36: '江西',\n    37: '山东',\n    41: '河南',\n    42: '湖北 ',\n    43: '湖南',\n    44: '广东',\n    45: '广西',\n    46: '海南',\n    50: '重庆',\n    51: '四川',\n    52: '贵州',\n    53: '云南',\n    54: '西藏 ',\n    61: '陕西',\n    62: '甘肃',\n    63: '青海',\n    64: '宁夏',\n    65: '新疆',\n    71: '台湾',\n    81: '香港',\n    82: '澳门',\n    91: '国外 ',\n  }\n  let pass = true\n  if (\n    !code ||\n    !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n      code\n    )\n  ) {\n    tip = '身份证号格式错误'\n    pass = false\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = '地址编码错误'\n    pass = false\n  } else {\n    // 18位身份证需要验证最后一位校验位\n    if (code.length === 18) {\n      const codeArr = code.split('')\n      // ∑(ai×Wi)(mod 11)\n      // 加权因子\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]\n      // 校验位\n      let parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2]\n      let sum = 0\n      let ai = 0\n      let wi = 0\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i])\n        wi = factor[i]\n        sum += ai * wi\n      }\n      let last = parity[sum % 11] + ''\n      if (last !== code[17]) {\n        tip = '校验位错误'\n        pass = false\n      }\n    }\n  }\n  console.assert(!tip, tip)\n  return pass\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"3340","url":"/home/runner/work/utils/utils/src/is.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3284,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":3281,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":5}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":0}],"isBlockCoverage":false},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"isBlob","ranges":[{"startOffset":927,"endOffset":939,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":951,"endOffset":963,"count":0}],"isBlockCoverage":false},{"functionName":"isIdCard","ranges":[{"startOffset":977,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"isJson","ranges":[{"startOffset":1003,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"isPrime","ranges":[{"startOffset":1028,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"isPrime","ranges":[{"startOffset":1108,"endOffset":1168,"count":0}],"isBlockCoverage":false},{"functionName":"isJson","ranges":[{"startOffset":1185,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"isBlob","ranges":[{"startOffset":1320,"endOffset":1370,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":1387,"endOffset":1437,"count":0}],"isBlockCoverage":false},{"functionName":"isIdCard","ranges":[{"startOffset":1456,"endOffset":3277,"count":0}],"isBlockCoverage":false}]}}]},{"leaks":false,"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1679538740277,"runtime":1328,"slow":false,"start":1679538738949},"skipped":false,"testFilePath":"/home/runner/work/utils/utils/test/class/Throttle.spec.ts","testResults":[{"rowKey":0,"ancestorTitles":["Throttle"],"duration":1017,"failureDetails":[],"failureMessages":[],"fullName":"Throttle Throttle","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"Throttle"}],"failureMessage":null,"v8Coverage":[{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar stdin_exports = {};\n__export(stdin_exports, {\n  Throttle: () => Throttle,\n  default: () => stdin_default\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar _trTime;\nclass Throttle {\n  constructor() {\n    __privateAdd(this, _trTime, 0);\n    this.clickTime = 0;\n  }\n  throttle(argFn, argWait = 1e3, ...args) {\n    if (argWait - (Date.now() - __privateGet(this, _trTime)) <= 0) {\n      __privateSet(this, _trTime, Date.now());\n      this.clickTime = 0;\n      setTimeout(() => {\n        if (this.clickTime > 0) {\n          __privateSet(this, _trTime, 0);\n          this.clickTime = 0;\n        }\n      }, argWait);\n      return argFn(...args);\n    } else {\n      this.clickTime++;\n      return () => this;\n    }\n  }\n}\n_trTime = new WeakMap();\nvar stdin_default = Throttle;\n","originalCode":"/**\n * @class\n * @classdesc 处理函数节流\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @example  const tr = new.Throttle(回调函数,等待时间,...回调函数的参数)\n */\nexport class Throttle {\n  #trTime = 0\n  clickTime = 0\n  /**\n   * @function\n   * @description 函数节流，触发一次后，再间隔n毫秒后才会被触发\n   * @param  {function} argFn 回调函数\n   * @param  {number} argWait 等待时间,默认1000毫秒\n   * @param  {any} ...arg 回调函数的参数\n   * @returns {function}\n   */\n  throttle(\n    argFn: (...arg: any) => any,\n    argWait: number = 1000,\n    ...args: any\n  ): (...arg: any) => any {\n    if (argWait - (Date.now() - this.#trTime) <= 0) {\n      this.#trTime = Date.now()\n      this.clickTime = 0\n      setTimeout(() => {\n        if (this.clickTime > 0) {\n          this.#trTime = 0\n          this.clickTime = 0\n        }\n      }, argWait)\n      return argFn(...args)\n    } else {\n      this.clickTime++\n      return () => this\n    }\n  }\n}\nexport default Throttle\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"4","url":"/home/runner/work/utils/utils/src/class/Throttle.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2322,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":2319,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":2}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":1}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"__accessCheck","ranges":[{"startOffset":887,"endOffset":974,"count":8},{"startOffset":939,"endOffset":972,"count":0}],"isBlockCoverage":true},{"functionName":"__privateGet","ranges":[{"startOffset":995,"endOffset":1134,"count":5},{"startOffset":1095,"endOffset":1113,"count":0}],"isBlockCoverage":true},{"functionName":"__privateAdd","ranges":[{"startOffset":1155,"endOffset":1351,"count":1},{"startOffset":1208,"endOffset":1277,"count":0},{"startOffset":1306,"endOffset":1323,"count":0}],"isBlockCoverage":true},{"functionName":"__privateSet","ranges":[{"startOffset":1372,"endOffset":1540,"count":3},{"startOffset":1471,"endOffset":1496,"count":0}],"isBlockCoverage":true},{"functionName":"Throttle","ranges":[{"startOffset":1604,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1631,"endOffset":1650,"count":1}],"isBlockCoverage":true},{"functionName":"Throttle","ranges":[{"startOffset":1733,"endOffset":1812,"count":1}],"isBlockCoverage":true},{"functionName":"throttle","ranges":[{"startOffset":1815,"endOffset":2259,"count":5},{"startOffset":1924,"endOffset":2193,"count":2},{"startOffset":2193,"endOffset":2255,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2016,"endOffset":2147,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2238,"endOffset":2248,"count":0}],"isBlockCoverage":false}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  deepCopy: () => deepCopy,\n  delCookie: () => delCookie,\n  getCookie: () => getCookie,\n  getEnv: () => getEnv,\n  getInfo: () => getInfo,\n  getNetworkStatus: () => getNetworkStatus,\n  getObj: () => getObj,\n  getRandomColor: () => getRandomColor,\n  getRegexp: () => getRegexp,\n  getStorage: () => getStorage,\n  getUrlParam: () => getUrlParam,\n  getUrlParamObj: () => getUrlParamObj,\n  getUuid: () => getUuid,\n  randomInt: () => randomInt,\n  remInit: () => remInit,\n  replaceUrlParam: () => replaceUrlParam,\n  safe: () => safe,\n  safeData: () => safeData,\n  setCookie: () => setCookie,\n  setEnv: () => setEnv,\n  setLog: () => setLog,\n  setObj: () => setObj,\n  setStorage: () => setStorage,\n  setTitle: () => setTitle,\n  setUrlParams: () => setUrlParams,\n  sleep: () => sleep\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar import_is = require(\"./is\");\nlet isOnline = true;\nlet ENV = {};\nlet DATA_OBJECT = {};\nif (globalThis && globalThis.addEventListener) {\n  globalThis.addEventListener(\"offline\", function() {\n    console.debug(\"offLine\");\n    isOnline = false;\n  });\n  globalThis.addEventListener(\"online\", function() {\n    console.debug(\"onLine\");\n    isOnline = true;\n  });\n}\nconst getNetworkStatus = () => {\n  return isOnline;\n};\nconst getRegexp = () => {\n  return {\n    html: /<[^>]+>/gim,\n    password: /^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[\\W_]).{8,16}$/,\n    idCard: /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/,\n    idCardNormal: /^[0-9]\\d+([0-9]|X|x)*$/,\n    phone: /^1\\d{10}$/,\n    email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n    http: /http:\\/\\/|https:\\/\\//,\n    score: /^[1-9]\\d*|0$/,\n    int: /^[1-9]\\d*$/,\n    number: /^\\d*$/,\n    float1: /^(([1-9]\\d*)|0|(0.\\d{0,1})|([1-9]\\d*.\\d{0,1}))$/,\n    float2: /^(([1-9]\\d*)|0|(0.\\d{0,2})|([1-9]\\d*.\\d{0,2}))$/,\n    float3: /^(([1-9]\\d*)|0|(0.\\d{0,3})|([1-9]\\d*.\\d{0,3}))$/,\n    letterNumber: /^[a-zA-Z0-9]*$/,\n    letter: /^[a-zA-Z]*$/,\n    account: /^[a-zA-Z0-9_\\-\\u4e00-\\u9fa5]{1,50}$/,\n    realName: /^([\\u4e00-\\u9fa5]{1,50}|[\\u4e00-\\u9fa5]{1,25}[\\s][\\u4e00-\\u9fa5]{1,24}|[a-zA-Z_\\-.]{1,50}|[a-zA-Z_\\-.]{1,25}[\\s][a-zA-Z_\\-.]{1,24})$/,\n    cn: /^[\\u4e00-\\u9fa5]*$/,\n    ascii: /^[\\x20-\\x7E]+$/\n  };\n};\nconst setTitle = (argTitle) => {\n  if (typeof globalThis.document === \"object\") {\n    globalThis.document.title = String(argTitle);\n  }\n  if (getInfo().isAppleMobile) {\n    const i = document.createElement(\"iframe\");\n    i.onload = () => {\n      setTimeout(() => {\n        console.debug(\"apple mobile setting title\");\n        i.remove();\n      }, 10);\n    };\n    globalThis.document.body.appendChild(i);\n  }\n};\nconst remInit = (argBaseSize = 16, argWidth = 375) => {\n  const setRem = () => {\n    const scale = safeData(globalThis, \"document.documentElement.clientWidth\", argWidth) / argWidth;\n    safeData(\n      globalThis,\n      \"document.documentElement.style.fontSize\",\n      argBaseSize * scale + \"px\",\n      true\n    );\n  };\n  setRem();\n  globalThis.onresize = () => {\n    setRem();\n  };\n};\nconst getCookie = (argName) => {\n  const cookies = globalThis.document.cookie.split(\"; \");\n  const cookie = cookies.find((cookie2) => {\n    const [name] = cookie2.split(\"=\");\n    return argName === name;\n  });\n  return cookie ? decodeURIComponent(cookie.split(\"=\")[1] || \"\") : \"\";\n};\nconst setCookie = (argName, argValue = \"\", argTime = 24) => {\n  let now = new Date();\n  let offset = 8;\n  let utc = now.getTime() + now.getTimezoneOffset() * 6e4;\n  let nd = utc + 36e5 * offset;\n  let exp = new Date(nd);\n  let domain = globalThis.document.domain;\n  exp.setTime(exp.getTime() + argTime * 60 * 60 * 1e3);\n  globalThis.document.cookie = argName + \"=\" + encodeURIComponent(argValue) + \";path=/;expires=\" + exp.toUTCString() + \";domain=\" + domain + \";\";\n};\nconst delCookie = (argName = \"\") => {\n  setCookie(argName, \"\", -1);\n};\nconst getInfo = () => {\n  let ua = safeData(globalThis, \"navigator.userAgent\", \"\").toLowerCase();\n  let platform = safeData(\n    globalThis,\n    \"navigator.userAgentData.platform\",\n    \"\"\n  ).toLowerCase();\n  let info = {\n    ua,\n    platform,\n    isMobile: !!ua.match(/mobile/),\n    isWin: !!platform.match(\"win\"),\n    isIphone: !!ua.match(/iphone/),\n    isIpad: !!ua.match(/ipad/),\n    isMac: !!platform.match(\"mac\"),\n    isIos: !!platform.match(\"ios\"),\n    isAndroid: !!platform.match(\"android\"),\n    isSafari: ua.indexOf(\"safari\") > -1 && ua.indexOf(\"chrome\") < 1,\n    isIE: \"ActiveXObject\" in globalThis,\n    ieVersion: 0,\n    isAppleMobile: false,\n    isWeixin: !!ua.match(/MicroMessenger/i),\n    isAlipay: !!ua.match(/Alipay/i)\n  };\n  if (info.ua.match(\"msie\")) {\n    let IE = info.ua.match(/msie\\s([0-9]*)/);\n    if (IE && IE.length >= 2) {\n      info.ieVersion = +IE[1];\n    }\n  }\n  info.isAppleMobile = !!(info.isMobile && ua.toLowerCase().indexOf(\"applewebkit\") && ua.indexOf(\"chrome\") < 1);\n  return info;\n};\nconst getRandomColor = function() {\n  return \"#\" + (\"00000\" + (Math.random() * 16777216 << 0).toString(16)).substring(-6);\n};\nconst getStorage = (argKey, argNoJson) => {\n  let res = globalThis.localStorage.getItem(argKey);\n  if (!argNoJson && (0, import_is.isJson)(res) && res) {\n    res = JSON.parse(res);\n  }\n  return res || \"\";\n};\nconst setStorage = (argKey, argData) => {\n  if (typeof argData === \"object\") {\n    argData = JSON.stringify(argData);\n  }\n  globalThis.localStorage.setItem(argKey, String(argData));\n  return String(argData);\n};\nconst sleep = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\nconst safe = function safe2(argData, argCheck, argValue, argSetValueForce) {\n  if (!argData) {\n    return argValue;\n  }\n  if (typeof argCheck !== \"string\" && typeof argCheck !== \"number\") {\n    console.warn(\"argCheck\\u8BF7\\u4F20\\u5165string\\u5F53\\u524D\\u4E3A:\" + argCheck);\n    return \"\";\n  }\n  const temKey = argCheck.toString().split(\".\");\n  const temLen = temKey.length;\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== \"object\") {\n        if (argSetValueForce) {\n          console.warn(\"safeData setValue err\\uFF1A\", argData, \"index:\", i);\n        }\n        return argValue;\n      }\n      argData = argData[temKey[i]] || {};\n    }\n  }\n  if (argSetValueForce) {\n    ;\n    argData[temKey[temLen - 1]] = argValue;\n  }\n  if (typeof argValue === \"undefined\") {\n    return argData[temKey[temLen - 1]];\n  } else {\n    return argData[temKey[temLen - 1]] || argValue;\n  }\n};\nconst safeData = (argData, argCheck, argValue, argSetValueForce) => {\n  if (typeof argCheck !== \"string\" && typeof argCheck !== \"number\") {\n    console.warn(\"argCheck\\u8BF7\\u4F20\\u5165string\\u5F53\\u524D\\u4E3A:\" + argCheck);\n    return \"\";\n  }\n  const temKey = argCheck.toString().split(\".\");\n  const temLen = temKey.length;\n  if (!argData) {\n    return argValue;\n  }\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== \"object\") {\n        if (argSetValueForce) {\n          console.warn(\"safeData setValue err\\uFF1A\", argData, \"index:\", i);\n        }\n        return argValue;\n      }\n      argData = argData[temKey[i]] || {};\n    }\n  }\n  if (argSetValueForce) {\n    argData[temKey[temLen - 1]] = argValue;\n  }\n  if (typeof argValue === \"undefined\") {\n    return argData[temKey[temLen - 1]];\n  } else {\n    return argData[temKey[temLen - 1]] || argValue;\n  }\n};\nconst setUrlParams = (argParams, noMark) => {\n  let re = \"\";\n  if (!noMark) {\n    re = \"?\";\n  }\n  let paramsList = Object.keys(argParams);\n  let temLength = paramsList.length;\n  if (!temLength) {\n    return \"\";\n  }\n  paramsList.map((v, k) => {\n    re += v + \"=\" + argParams[v];\n    if (k < temLength - 1) {\n      re += \"&\";\n    }\n  });\n  return re;\n};\nconst getUrlParam = (argName, argUrl = globalThis.location.search || \"\") => {\n  let result = argUrl.match(new RegExp(\"[?&]\" + argName + \"=([^&]+)\", \"i\"));\n  if (!result) {\n    return \"\";\n  }\n  return decodeURIComponent(result[1]);\n};\nconst getUrlParamObj = (argData = globalThis.location.search || globalThis.location.hash) => {\n  const res = {};\n  try {\n    argData.slice(argData.indexOf(\"?\") + 1).split(\"&\").forEach((v) => {\n      const [key, val] = v.split(\"=\");\n      if (key !== v) {\n        res[key] = decodeURIComponent(val);\n      }\n    });\n    return res;\n  } catch (e) {\n    console.error(\"\\u8F6C\\u6362\\u5931\\u8D25\", e);\n    return res;\n  }\n};\nconst replaceUrlParam = (name, value, url = globalThis.location.href || \"\") => {\n  const reg = new RegExp(\"([?]|&)(\" + name + \"=)([^&#]*)([&]?|$)\", \"img\");\n  const r = url.match(reg);\n  const search = url.split(\"?\");\n  let strValue = url;\n  if (value === void 0 || value === null) {\n    if (r != null) {\n      strValue = url.replace(reg, (_match, p1, _p2, _p3, p4) => {\n        if (!p4 || !p4.length) {\n          return \"\";\n        } else if (p1 === p4) {\n          return p1;\n        }\n        return p1 + p4;\n      });\n      strValue = strValue.replace(\"?&\", \"?\");\n    }\n  } else if (r != null) {\n    strValue = url.replace(reg, `$1$2${value}$4`);\n  } else if (search.length > 1) {\n    const sub = search[1].split(\"#\");\n    if (sub.length > 1) {\n      if (sub[1].length) {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}#${sub[1]}`;\n      } else {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}${sub[1]}`;\n      }\n    } else {\n      strValue = `${search[0]}?${search[1]}&${name}=${value}`;\n    }\n  } else {\n    const sub = url.split(\"#\");\n    if (sub.length > 1) {\n      strValue = `${sub[0]}?${name}=${value}#${sub[1]}`;\n    } else {\n      strValue = `${url}?${name}=${value}`;\n    }\n  }\n  return strValue;\n};\nconst getUuid = () => {\n  const S4 = () => ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);\n  return S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + Date.now();\n};\nconst randomInt = (min = 0, max = 100) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst setEnv = (env) => {\n  ENV = env;\n};\nconst getEnv = (key) => {\n  return safeData(ENV, key, \"\");\n};\nconst setObj = (key, data) => {\n  if (!key) {\n    DATA_OBJECT = data;\n  } else {\n    DATA_OBJECT[key] = data;\n  }\n  return DATA_OBJECT;\n};\nconst getObj = (key, argData, isDeepCopy) => {\n  let res = safeData(DATA_OBJECT, key, {});\n  if (argData) {\n    res = Object.assign(res, argData);\n  }\n  if (!isDeepCopy) {\n    return res;\n  } else {\n    return JSON.parse(JSON.stringify(res));\n  }\n};\nconst setLog = (logLevel, logConfig) => {\n  logLevel = logLevel || getEnv(\"VUE_APP_LOG_LEVEL\") || 4;\n  const logList = [\"log\", \"info\", \"warn\", \"error\"];\n  const log = {};\n  logList.forEach((v) => {\n    log[v] = console[v];\n  });\n  for (let key in logConfig) {\n    if (console[key]) {\n      ;\n      console[key] = (...arg) => {\n        var _a, _b;\n        ;\n        log[key](...arg, (_a = Error().stack) == null ? void 0 : _a.split(\"\\n\")[2]);\n        logConfig[key] && logConfig[key](...arg, (_b = Error().stack) == null ? void 0 : _b.split(\"\\n\")[2]);\n      };\n    }\n  }\n  switch (+logLevel) {\n    case 1:\n      console.warn = () => {\n      };\n    case 2:\n      console.info = () => {\n      };\n    case 3:\n      console.log = () => {\n      };\n    case 4:\n      console.debug = () => {\n      };\n    default:\n      break;\n  }\n};\nconst deepCopy = (obj) => {\n  if (typeof obj !== \"object\" || obj === null) {\n    return obj;\n  }\n  let copy = Array.isArray(obj) ? [] : {};\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ;\n      copy[key] = deepCopy(obj[key]);\n    }\n  }\n  return copy;\n};\n","originalCode":"/**\n * @module index\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 公共函数，使用'lj-utils'引入\n */\n\nimport { isJson } from './is'\nimport { Info, AnyObject, Bool } from './types'\n\nlet isOnline: boolean = true\nlet ENV: AnyObject = {}\nlet DATA_OBJECT: AnyObject = {}\n// 断网监听\nif (globalThis && globalThis.addEventListener) {\n  // #ifdef H5\n  globalThis.addEventListener('offline', function () {\n    console.debug('offLine')\n    isOnline = false\n  })\n  globalThis.addEventListener('online', function () {\n    console.debug('onLine')\n    isOnline = true\n  })\n  // #endif\n}\n\n/**\n * @function\n * @description 获取当前网络状态（H5）\n * @return boolean\n */\nexport const getNetworkStatus = () => {\n  return isOnline\n}\n\n/**\n * @function\n * @description 正则收集\n * @returns {object}\n */\nexport const getRegexp = (): AnyObject => {\n  return {\n    // 匹配html标签，提取html文字： htmlCode.replace(reg.html,'')\n    html: /<[^>]+>/gim,\n    // 至少1数字1字母1字符，8-16位\n    password: /^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[\\W_]).{8,16}$/,\n    // 普通身份证号正则，isIdCard更为严格\n    idCard: /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/,\n    // 简易身份证号 数字+x\n    idCardNormal: /^[0-9]\\d+([0-9]|X|x)*$/,\n    // 手机号\n    phone: /^1\\d{10}$/,\n    // 邮箱\n    email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n    // 网址\n    http: /http:\\/\\/|https:\\/\\//,\n    // 含0整数（得分）\n    score: /^[1-9]\\d*|0$/,\n    // 整数\n    int: /^[1-9]\\d*$/,\n    // 匹配数字\n    number: /^\\d*$/,\n    // >=0||1位小数\n    float1: /^(([1-9]\\d*)|0|(0.\\d{0,1})|([1-9]\\d*.\\d{0,1}))$/,\n    // >=0||2位小数\n    float2: /^(([1-9]\\d*)|0|(0.\\d{0,2})|([1-9]\\d*.\\d{0,2}))$/,\n    // >=0||3位小数\n    float3: /^(([1-9]\\d*)|0|(0.\\d{0,3})|([1-9]\\d*.\\d{0,3}))$/,\n    // 字母+数字组合\n    letterNumber: /^[a-zA-Z0-9]*$/,\n    // 字母\n    letter: /^[a-zA-Z]*$/,\n    // 帐号50个字内：大小写+数字+中文+'_'+'-'\n    account: /^[a-zA-Z0-9_\\-\\u4e00-\\u9fa5]{1,50}$/,\n    // 中英文姓名 50个字内/中文 中文/英文-. 英文-./\n    realName:\n      /^([\\u4e00-\\u9fa5]{1,50}|[\\u4e00-\\u9fa5]{1,25}[\\s][\\u4e00-\\u9fa5]{1,24}|[a-zA-Z_\\-.]{1,50}|[a-zA-Z_\\-.]{1,25}[\\s][a-zA-Z_\\-.]{1,24})$/,\n    // 匹配中文\n    cn: /^[\\u4e00-\\u9fa5]*$/,\n    // 匹配ASCII,非中文之外的字符（全角字符）\n    ascii: /^[\\x20-\\x7E]+$/,\n  }\n}\n\n/**\n * @function\n * @description 设置标题\n * @param  {string} argTitle 标题\n */\nexport const setTitle = (argTitle: string | number) => {\n  if (typeof globalThis.document === 'object') {\n    globalThis.document.title = String(argTitle)\n  }\n  if (getInfo().isAppleMobile) {\n    const i = document.createElement('iframe')\n    i.onload = () => {\n      setTimeout(() => {\n        console.debug('apple mobile setting title')\n        i.remove()\n      }, 10)\n    }\n    globalThis.document.body.appendChild(i)\n  }\n}\n\n/**\n * @function\n * @description 使用postcss-px2rem时使用\n * @param {number} argBaseSize 基础大小 16px（要跟配置一致）\n * @param {number} argWidth 基准宽度\n */\nexport const remInit = (argBaseSize: number = 16, argWidth: number = 375) => {\n  // 设置 rem 函数\n  const setRem = () => {\n    // 当前页面宽度相对于 argWidth 宽的缩放比例，可根据自己需要修改。\n    const scale =\n      safeData(globalThis, 'document.documentElement.clientWidth', argWidth) /\n      argWidth\n    // 设置页面根节点字体大小\n    safeData(\n      globalThis,\n      'document.documentElement.style.fontSize',\n      argBaseSize * scale + 'px',\n      true\n    )\n  }\n  // 初始化\n  setRem()\n  // 改变窗口大小时重新设置 rem\n  globalThis.onresize = () => {\n    setRem()\n  }\n}\n\n/**\n * @function\n * @description 获取cookie\n * @param  {string} argName 要获取的值\n * @returns {string}\n */\nexport const getCookie = (argName: string): string => {\n  const cookies = globalThis.document.cookie.split('; ')\n  const cookie = cookies.find((cookie) => {\n    const [name] = cookie.split('=')\n    return argName === name\n  })\n  return cookie ? decodeURIComponent(cookie.split('=')[1] || '') : ''\n}\n\n/**\n * @function\n * @description 设置cookie\n * @param  {string} argName 要设置的key\n * @param  {string} argValue 要设置的value\n * @param  {number} argTime 过期时间/时 默认24小时\n */\nexport const setCookie = (\n  argName: string,\n  argValue: string | number | boolean = '',\n  argTime: number = 24\n) => {\n  let now = new Date()\n  let offset = 8\n  let utc = now.getTime() + now.getTimezoneOffset() * 60000\n  let nd = utc + 3600000 * offset\n  let exp = new Date(nd)\n  let domain = globalThis.document.domain\n  exp.setTime(exp.getTime() + argTime * 60 * 60 * 1000)\n  globalThis.document.cookie =\n    argName +\n    '=' +\n    encodeURIComponent(argValue) +\n    ';path=/;expires=' +\n    exp.toUTCString() +\n    ';domain=' +\n    domain +\n    ';'\n}\n\n/**\n * @function\n * @description 清除cookie\n * @param  {string} argName 要清除的值\n */\nexport const delCookie = (argName: string = '') => {\n  setCookie(argName, '', -1)\n}\n\n/**\n * @function\n * @description 检测浏览器状态，系统状态 *\n * @returns {Info} {\n * ua: ua,\n * platform: 平台,\n * isMobile: 移动端,\n * isWin: winPC端,\n * isIphone: iphone,\n * isIpad: ipad,\n * isMac: mac,\n * isAppleMobile: 苹果移动端webview\n * isSafari: Safari浏览器,\n * isIos: Ios平台,\n * isAndroid: android平台,\n * isIE: 显示8 9 10, true为11以上\n * ...\n * }\n */\nexport const getInfo = (): Info => {\n  let ua = safeData(globalThis, 'navigator.userAgent', '').toLowerCase()\n  let platform: string = safeData(\n    globalThis,\n    'navigator.userAgentData.platform',\n    ''\n  ).toLowerCase()\n  let info: Info = {\n    ua: ua,\n    platform: platform,\n    isMobile: !!ua.match(/mobile/),\n    isWin: !!platform.match('win'),\n    isIphone: !!ua.match(/iphone/),\n    isIpad: !!ua.match(/ipad/),\n    isMac: !!platform.match('mac'),\n    isIos: !!platform.match('ios'),\n    isAndroid: !!platform.match('android'),\n    isSafari: ua.indexOf('safari') > -1 && ua.indexOf('chrome') < 1,\n    isIE: 'ActiveXObject' in globalThis,\n    ieVersion: 0,\n    isAppleMobile: false,\n    isWeixin: !!ua.match(/MicroMessenger/i),\n    isAlipay: !!ua.match(/Alipay/i),\n  }\n  if (info.ua.match('msie')) {\n    let IE = info.ua.match(/msie\\s([0-9]*)/)\n    if (IE && IE.length >= 2) {\n      info.ieVersion = +IE[1]\n    }\n  }\n  info.isAppleMobile = !!(\n    info.isMobile &&\n    ua.toLowerCase().indexOf('applewebkit') &&\n    ua.indexOf('chrome') < 1\n  )\n  return info\n}\n\n/**\n * @function\n * @description 获取随机颜色\n * @return string\n */\nexport const getRandomColor = function () {\n  return (\n    '#' +\n    ('00000' + ((Math.random() * 0x1000000) << 0).toString(16)).substring(-6)\n  )\n}\n\n/**\n * @function\n * @description 获取storage的值，默认将json转为obj\n * @param {string} argKey 要获取的key\n * @param {string} argNoJson true时不自动转换JSON字符串\n * @returns {any} key对应的数据\n */\nexport const getStorage = (argKey: string, argNoJson?: string): any => {\n  let res = globalThis.localStorage.getItem(argKey)\n  // 默认转义JSON字符串\n  if (!argNoJson && isJson(res) && res) {\n    res = JSON.parse(res)\n  }\n  return res || ''\n}\n\n/**\n * @function\n * @description 设置storage的值，默认将obj转为json\n * @param {string} argKey 要获取的key\n * @param {unknown} argData 要保存的数据\n * @returns {string} 保存的数据String\n */\nexport const setStorage = (argKey: string, argData: unknown): string => {\n  if (typeof argData === 'object') {\n    argData = JSON.stringify(argData)\n  }\n  globalThis.localStorage.setItem(argKey, String(argData))\n  return String(argData)\n}\n\n/**\n * @function\n * @description setTimeout promise版\n * @param  {number} ms 时间，毫秒\n */\nexport const sleep = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n// 返回T下的key对应类型\ntype KeyOf<T extends Record<string, any>, K = keyof T> = K extends string\n  ? T[K] extends Function\n    ? never\n    : K\n  : never\ntype DotField<T extends Record<string, any>, K = KeyOf<T>> = K extends string\n  ? K | `${K}.${DotField<T[K]>}`\n  : never\n// 返回传入K或T[K]对应的类型\ntype ValueOf<\n  T extends Record<string, any>,\n  K\n> = K extends `${infer I}.${infer R}`\n  ? ValueOf<T[I], R>\n  : K extends string\n  ? T[K]\n  : never\n\n/**\n * @function\n * @description 数据安全访问\n * @param  {any} argData  [原始数据]\n * @param  {string} argCheck [要返回的数据，用'.'连接，数组用'.+数字表示']\n * @param  {any} argValue [如果数据有误，返回的值，选填]\n * @param  {boolean|0|1} argSetValueForce [是否强制赋值argValue]\n * @returns {any}\n */\nexport const safe = function safe<\n  T extends Record<string, any>,\n  K extends DotField<T>\n>(\n  argData: T,\n  argCheck: K,\n  argValue?: ValueOf<T, K>,\n  argSetValueForce?: Bool\n): ValueOf<T, K> | undefined | string {\n  if (!argData) {\n    return argValue\n  }\n  if (typeof argCheck !== 'string' && typeof argCheck !== 'number') {\n    console.warn('argCheck请传入string当前为:' + argCheck)\n    return ''\n  }\n  const temKey = argCheck.toString().split('.')\n  const temLen = temKey.length\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== 'object') {\n        if (argSetValueForce) {\n          console.warn('safeData setValue err：', argData, 'index:', i)\n        }\n        return argValue\n      }\n      argData = argData[temKey[i]] || {}\n    }\n  }\n  if (argSetValueForce) {\n    ;(argData as AnyObject)[temKey[temLen - 1]] = argValue\n  }\n  if (typeof argValue === 'undefined') {\n    return argData[temKey[temLen - 1]]\n  } else {\n    return argData[temKey[temLen - 1]] || argValue\n  }\n}\n/**\n * @function\n * @description 数据安全访问\n * @param  {any} argData  [原始数据]\n * @param  {string} argCheck [要返回的数据，用'.'连接，数组用'.+数字表示']\n * @param  {any} argValue [如果数据有误，返回的值，选填]\n * @param  {boolean|0|1} argSetValueForce [是否强制赋值argValue]\n * @returns {any}\n */\nexport const safeData = (\n  argData: any,\n  argCheck: string,\n  argValue?: any,\n  argSetValueForce?: Bool\n): any => {\n  if (typeof argCheck !== 'string' && typeof argCheck !== 'number') {\n    console.warn('argCheck请传入string当前为:' + argCheck)\n    return ''\n  }\n  const temKey = argCheck.toString().split('.')\n  const temLen = temKey.length\n  if (!argData) {\n    return argValue\n  }\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== 'object') {\n        if (argSetValueForce) {\n          console.warn('safeData setValue err：', argData, 'index:', i)\n        }\n        return argValue\n      }\n      argData = argData[temKey[i]] || {}\n    }\n  }\n  if (argSetValueForce) {\n    argData[temKey[temLen - 1]] = argValue\n  }\n  if (typeof argValue === 'undefined') {\n    return argData[temKey[temLen - 1]]\n  } else {\n    return argData[temKey[temLen - 1]] || argValue\n  }\n}\n\n/**\n * @description obj转url参数\n * @function\n * @param {any} argParams 参数对象\n * @param {boolean?} noMark 默认带?,true时,不带\n * @returns {string}\n */\nexport const setUrlParams = (argParams: any, noMark?: boolean): string => {\n  let re = ''\n  if (!noMark) {\n    re = '?'\n  }\n  let paramsList = Object.keys(argParams)\n  let temLength = paramsList.length\n  if (!temLength) {\n    return ''\n  }\n  paramsList.map((v, k) => {\n    re += v + '=' + argParams[v]\n    if (k < temLength - 1) {\n      re += '&'\n    }\n  })\n  return re\n}\n\n/**\n * @description 获取url参数\n * @function\n * @param {string} argName 要获取的key\n * @param {string} argUrl url数据\n * @returns {string}\n */\nexport const getUrlParam = (\n  argName: string,\n  argUrl: string = globalThis.location.search || ''\n): string => {\n  let result = argUrl.match(new RegExp('[?&]' + argName + '=([^&]+)', 'i'))\n  if (!result) {\n    return ''\n  }\n  return decodeURIComponent(result[1])\n}\n\n/**\n * @description 获取所有url参数，eg: a=1&b=2 to {a:1,b:2}\n * @function\n * @param {string} argData 要处理的数据\n * @returns {any}\n */\nexport const getUrlParamObj = (\n  argData: string = globalThis.location.search || globalThis.location.hash\n): AnyObject => {\n  const res: AnyObject = {}\n  try {\n    argData\n      .slice(argData.indexOf('?') + 1)\n      .split('&')\n      .forEach((v) => {\n        const [key, val] = v.split('=')\n        if (key !== v) {\n          res[key] = decodeURIComponent(val)\n        }\n      })\n    return res\n  } catch (e) {\n    console.error('转换失败', e)\n    return res\n  }\n  // let temObj = new URLSearchParams(argData)\n  // let resObj = {}\n  // for (const [key, value] of temObj) {\n  //   resObj[key] = value\n  // }\n  // return resObj\n}\n\n/**\n * @description 通过正则匹配修改当前页面的url中的参数\n * @function\n * @param  {string} name key\n * @param  {string | number| undefined | null} value 要替换的value\n * @param  {string} url 要替换的网址,默认location.href\n * @returns {string}\n */\nexport const replaceUrlParam = (\n  name: string,\n  value: string | number | undefined | null,\n  url: string = globalThis.location.href || ''\n): string => {\n  const reg = new RegExp('([?]|&)(' + name + '=)([^&#]*)([&]?|$)', 'img')\n  const r = url.match(reg)\n  const search = url.split('?')\n  let strValue: string = url\n  if (value === undefined || value === null) {\n    if (r != null) {\n      strValue = url.replace(reg, (_match, p1, _p2, _p3, p4) => {\n        if (!p4 || !p4.length) {\n          return ''\n        } else if (p1 === p4) {\n          return p1\n        }\n        return p1 + p4\n      })\n      strValue = strValue.replace('?&', '?')\n    }\n  } else if (r != null) {\n    strValue = url.replace(reg, `$1$2${value}$4`)\n  } else if (search.length > 1) {\n    const sub = search[1].split('#')\n    if (sub.length > 1) {\n      if (sub[1].length) {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}#${sub[1]}`\n      } else {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}${sub[1]}`\n      }\n    } else {\n      strValue = `${search[0]}?${search[1]}&${name}=${value}`\n    }\n  } else {\n    // 不存在?时,搜索hash\n    const sub = url.split('#')\n    if (sub.length > 1) {\n      strValue = `${sub[0]}?${name}=${value}#${sub[1]}`\n    } else {\n      strValue = `${url}?${name}=${value}`\n    }\n  }\n  return strValue\n}\n\n/**\n * @function\n * @description 获取简单uuid\n * @returns {string} uuid\n */\nexport const getUuid = (): string => {\n  const S4 = () =>\n    (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  return S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + Date.now()\n}\n\n/**\n * @function\n * @description 获取随机数,含最大值，含最小值\n * @param  {number} min 最小值\n * @param  {number} max 最大值\n * @returns {number}\n */\nexport const randomInt = (min: number = 0, max: number = 100): number => {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  // 含最大值，含最小值\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n/**\n * @function\n * @description 设置env参数，一般在main.js中调用\n * @param  {AnyObject} env 要设置的值\n */\nexport const setEnv = (env: AnyObject) => {\n  ENV = env\n}\n/**\n * @function\n * @description 获取env参数\n * @param  {string} key 要获取的值\n * @returns {string} 获取的值\n */\nexport const getEnv = (key: string): string => {\n  return safeData(ENV, key, '')\n}\n\n/**\n * @function\n * @description 设置object参数,可做运行时缓存\n * @param  {string} key 要设置的key\n * @param  {AnyObject} data 要设置的值\n * @returns {AnyObject}\n */\nexport const setObj = (key: string, data: AnyObject): AnyObject => {\n  if (!key) {\n    DATA_OBJECT = data\n  } else {\n    DATA_OBJECT[key] = data\n  }\n  return DATA_OBJECT\n}\n\n/**\n * @function\n * @description 获取object参数\n * @param  {string} key 要获取的值\n * @param  {string} argData 要合并的值\n * @param  {boolean} isDeepCopy 是否深拷贝\n * @returns {AnyObject} 获取的值\n */\nexport const getObj = (\n  key: string,\n  argData?: AnyObject,\n  isDeepCopy?: Bool\n): AnyObject => {\n  let res: AnyObject = safeData(DATA_OBJECT, key, {})\n  if (argData) {\n    res = Object.assign(res, argData)\n  }\n  if (!isDeepCopy) {\n    return res\n  } else {\n    return JSON.parse(JSON.stringify(res))\n  }\n}\n\n/**\n * @function\n * @description 设置日志输出logLevel 1 error 2 warn 3 info 4 log 5 debug\n * @param {AnyObject} logConfig 重写配置\n * @param {function} logConfig.error 错误日志回调（做额外处理用）\n */\nexport const setLog = (logLevel?: string | number, logConfig?: AnyObject) => {\n  // 1 error 2 warn 3 info 4 log 5 debug\n  logLevel = logLevel || getEnv('VUE_APP_LOG_LEVEL') || 4\n  const logList = ['log', 'info', 'warn', 'error']\n  const log: AnyObject = {}\n  logList.forEach((v) => {\n    log[v] = (console as AnyObject)[v]\n  })\n  for (let key in logConfig) {\n    if ((console as AnyObject)[key]) {\n      ;(console as AnyObject)[key] = (...arg: any[]) => {\n        ;(log as AnyObject)[key](...arg, Error().stack?.split('\\n')[2])\n        // 回调处理\n        logConfig[key] && logConfig[key](...arg, Error().stack?.split('\\n')[2])\n      }\n    }\n  }\n  switch (+logLevel) {\n    case 1:\n      console.warn = () => {}\n    case 2:\n      console.info = () => {}\n    case 3:\n      console.log = () => {}\n    case 4:\n      console.debug = () => {}\n    default:\n      break\n  }\n  // return log\n}\n\n/**\n * 深拷贝函数\n * @param obj 需要拷贝的对象\n * @returns 拷贝后的对象\n */\nexport const deepCopy = (obj: any): any => {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj\n  }\n  let copy = Array.isArray(obj) ? [] : {}\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ;(copy as AnyObject)[key] = deepCopy(obj[key])\n    }\n  }\n  return copy\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"3597","url":"/home/runner/work/utils/utils/src/base.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12414,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":12411,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":26}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":26}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":1}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"deepCopy","ranges":[{"startOffset":929,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"delCookie","ranges":[{"startOffset":958,"endOffset":973,"count":0}],"isBlockCoverage":false},{"functionName":"getCookie","ranges":[{"startOffset":988,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"getEnv","ranges":[{"startOffset":1015,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":1040,"endOffset":1053,"count":0}],"isBlockCoverage":false},{"functionName":"getNetworkStatus","ranges":[{"startOffset":1075,"endOffset":1097,"count":0}],"isBlockCoverage":false},{"functionName":"getObj","ranges":[{"startOffset":1109,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomColor","ranges":[{"startOffset":1141,"endOffset":1161,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexp","ranges":[{"startOffset":1176,"endOffset":1191,"count":0}],"isBlockCoverage":false},{"functionName":"getStorage","ranges":[{"startOffset":1207,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParam","ranges":[{"startOffset":1240,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParamObj","ranges":[{"startOffset":1277,"endOffset":1297,"count":0}],"isBlockCoverage":false},{"functionName":"getUuid","ranges":[{"startOffset":1310,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":1338,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"remInit","ranges":[{"startOffset":1366,"endOffset":1379,"count":0}],"isBlockCoverage":false},{"functionName":"replaceUrlParam","ranges":[{"startOffset":1400,"endOffset":1421,"count":0}],"isBlockCoverage":false},{"functionName":"safe","ranges":[{"startOffset":1431,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"safeData","ranges":[{"startOffset":1455,"endOffset":1469,"count":0}],"isBlockCoverage":false},{"functionName":"setCookie","ranges":[{"startOffset":1484,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"setEnv","ranges":[{"startOffset":1511,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"setLog","ranges":[{"startOffset":1535,"endOffset":1547,"count":0}],"isBlockCoverage":false},{"functionName":"setObj","ranges":[{"startOffset":1559,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"setStorage","ranges":[{"startOffset":1587,"endOffset":1603,"count":0}],"isBlockCoverage":false},{"functionName":"setTitle","ranges":[{"startOffset":1617,"endOffset":1631,"count":0}],"isBlockCoverage":false},{"functionName":"setUrlParams","ranges":[{"startOffset":1649,"endOffset":1667,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":1678,"endOffset":1689,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1920,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2031,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"getNetworkStatus","ranges":[{"startOffset":2127,"endOffset":2155,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexp","ranges":[{"startOffset":2175,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"setTitle","ranges":[{"startOffset":3114,"endOffset":3506,"count":0}],"isBlockCoverage":false},{"functionName":"remInit","ranges":[{"startOffset":3524,"endOffset":3892,"count":0}],"isBlockCoverage":false},{"functionName":"getCookie","ranges":[{"startOffset":3912,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"setCookie","ranges":[{"startOffset":4196,"endOffset":4645,"count":0}],"isBlockCoverage":false},{"functionName":"delCookie","ranges":[{"startOffset":4665,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":4734,"endOffset":5737,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomColor","ranges":[{"startOffset":5762,"endOffset":5863,"count":0}],"isBlockCoverage":false},{"functionName":"getStorage","ranges":[{"startOffset":5884,"endOffset":6071,"count":0}],"isBlockCoverage":false},{"functionName":"setStorage","ranges":[{"startOffset":6092,"endOffset":6282,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":6298,"endOffset":6369,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6329,"endOffset":6365,"count":1}],"isBlockCoverage":true},{"functionName":"safe2","ranges":[{"startOffset":6384,"endOffset":7293,"count":0}],"isBlockCoverage":false},{"functionName":"safeData","ranges":[{"startOffset":7312,"endOffset":8204,"count":0}],"isBlockCoverage":false},{"functionName":"setUrlParams","ranges":[{"startOffset":8227,"endOffset":8556,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParam","ranges":[{"startOffset":8578,"endOffset":8790,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParamObj","ranges":[{"startOffset":8815,"endOffset":9210,"count":0}],"isBlockCoverage":false},{"functionName":"replaceUrlParam","ranges":[{"startOffset":9236,"endOffset":10448,"count":0}],"isBlockCoverage":false},{"functionName":"getUuid","ranges":[{"startOffset":10466,"endOffset":10635,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":10655,"endOffset":10791,"count":0}],"isBlockCoverage":false},{"functionName":"setEnv","ranges":[{"startOffset":10808,"endOffset":10833,"count":0}],"isBlockCoverage":false},{"functionName":"getEnv","ranges":[{"startOffset":10850,"endOffset":10895,"count":0}],"isBlockCoverage":false},{"functionName":"setObj","ranges":[{"startOffset":10912,"endOffset":11034,"count":0}],"isBlockCoverage":false},{"functionName":"getObj","ranges":[{"startOffset":11051,"endOffset":11284,"count":0}],"isBlockCoverage":false},{"functionName":"setLog","ranges":[{"startOffset":11301,"endOffset":12110,"count":0}],"isBlockCoverage":false},{"functionName":"deepCopy","ranges":[{"startOffset":12129,"endOffset":12407,"count":0}],"isBlockCoverage":false}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  isBlob: () => isBlob,\n  isFile: () => isFile,\n  isIdCard: () => isIdCard,\n  isJson: () => isJson,\n  isPrime: () => isPrime\n});\nmodule.exports = __toCommonJS(stdin_exports);\nconst isPrime = (argValue) => !/^.?$|^(..+?)\\1+$/.test(\".\".repeat(argValue));\nconst isJson = (argData) => {\n  try {\n    return typeof JSON.parse(argData || \"\") === \"object\";\n  } catch (e) {\n  }\n  return false;\n};\nconst isBlob = (argData) => {\n  return argData instanceof Blob;\n};\nconst isFile = (argData) => {\n  return argData instanceof File;\n};\nconst isIdCard = (code) => {\n  let tip = \"\";\n  let city = {\n    11: \"\\u5317\\u4EAC\",\n    12: \"\\u5929\\u6D25\",\n    13: \"\\u6CB3\\u5317\",\n    14: \"\\u5C71\\u897F\",\n    15: \"\\u5185\\u8499\\u53E4\",\n    21: \"\\u8FBD\\u5B81\",\n    22: \"\\u5409\\u6797\",\n    23: \"\\u9ED1\\u9F99\\u6C5F \",\n    31: \"\\u4E0A\\u6D77\",\n    32: \"\\u6C5F\\u82CF\",\n    33: \"\\u6D59\\u6C5F\",\n    34: \"\\u5B89\\u5FBD\",\n    35: \"\\u798F\\u5EFA\",\n    36: \"\\u6C5F\\u897F\",\n    37: \"\\u5C71\\u4E1C\",\n    41: \"\\u6CB3\\u5357\",\n    42: \"\\u6E56\\u5317 \",\n    43: \"\\u6E56\\u5357\",\n    44: \"\\u5E7F\\u4E1C\",\n    45: \"\\u5E7F\\u897F\",\n    46: \"\\u6D77\\u5357\",\n    50: \"\\u91CD\\u5E86\",\n    51: \"\\u56DB\\u5DDD\",\n    52: \"\\u8D35\\u5DDE\",\n    53: \"\\u4E91\\u5357\",\n    54: \"\\u897F\\u85CF \",\n    61: \"\\u9655\\u897F\",\n    62: \"\\u7518\\u8083\",\n    63: \"\\u9752\\u6D77\",\n    64: \"\\u5B81\\u590F\",\n    65: \"\\u65B0\\u7586\",\n    71: \"\\u53F0\\u6E7E\",\n    81: \"\\u9999\\u6E2F\",\n    82: \"\\u6FB3\\u95E8\",\n    91: \"\\u56FD\\u5916 \"\n  };\n  let pass = true;\n  if (!code || !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n    code\n  )) {\n    tip = \"\\u8EAB\\u4EFD\\u8BC1\\u53F7\\u683C\\u5F0F\\u9519\\u8BEF\";\n    pass = false;\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = \"\\u5730\\u5740\\u7F16\\u7801\\u9519\\u8BEF\";\n    pass = false;\n  } else {\n    if (code.length === 18) {\n      const codeArr = code.split(\"\");\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n      let parity = [1, 0, \"X\", 9, 8, 7, 6, 5, 4, 3, 2];\n      let sum = 0;\n      let ai = 0;\n      let wi = 0;\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i]);\n        wi = factor[i];\n        sum += ai * wi;\n      }\n      let last = parity[sum % 11] + \"\";\n      if (last !== code[17]) {\n        tip = \"\\u6821\\u9A8C\\u4F4D\\u9519\\u8BEF\";\n        pass = false;\n      }\n    }\n  }\n  console.assert(!tip, tip);\n  return pass;\n};\n","originalCode":"/**\n * @module index\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 判断函数\n */\n/**\n * @function\n * @description 判断质数\n * @param {number} argValue 要判断的数据\n * @returns {boolean} 结果\n */\nexport const isPrime = (argValue: number): boolean =>\n  !/^.?$|^(..+?)\\1+$/.test('.'.repeat(argValue))\n\n/**\n * @function\n * @description 判断是否是JSON\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isJson = (argData: any): boolean => {\n  try {\n    return typeof JSON.parse(argData || '') === 'object'\n  } catch (e) {}\n  return false\n}\n/**\n * @function\n * @description 判断是否是Blob\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isBlob = (argData: any): boolean => {\n  return argData instanceof Blob\n}\n\n/**\n * @function\n * @description 判断是否是File\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isFile = (argData: any): boolean => {\n  return argData instanceof File\n}\n\n/**\n * @function\n * @description 是否为正确的身份证号码\n * @param  {string} code 身份证号码\n * @returns {boolean}\n */\nexport const isIdCard = (code: string): boolean => {\n  let tip = ''\n  let city: { [key: number]: string } = {\n    11: '北京',\n    12: '天津',\n    13: '河北',\n    14: '山西',\n    15: '内蒙古',\n    21: '辽宁',\n    22: '吉林',\n    23: '黑龙江 ',\n    31: '上海',\n    32: '江苏',\n    33: '浙江',\n    34: '安徽',\n    35: '福建',\n    36: '江西',\n    37: '山东',\n    41: '河南',\n    42: '湖北 ',\n    43: '湖南',\n    44: '广东',\n    45: '广西',\n    46: '海南',\n    50: '重庆',\n    51: '四川',\n    52: '贵州',\n    53: '云南',\n    54: '西藏 ',\n    61: '陕西',\n    62: '甘肃',\n    63: '青海',\n    64: '宁夏',\n    65: '新疆',\n    71: '台湾',\n    81: '香港',\n    82: '澳门',\n    91: '国外 ',\n  }\n  let pass = true\n  if (\n    !code ||\n    !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n      code\n    )\n  ) {\n    tip = '身份证号格式错误'\n    pass = false\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = '地址编码错误'\n    pass = false\n  } else {\n    // 18位身份证需要验证最后一位校验位\n    if (code.length === 18) {\n      const codeArr = code.split('')\n      // ∑(ai×Wi)(mod 11)\n      // 加权因子\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]\n      // 校验位\n      let parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2]\n      let sum = 0\n      let ai = 0\n      let wi = 0\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i])\n        wi = factor[i]\n        sum += ai * wi\n      }\n      let last = parity[sum % 11] + ''\n      if (last !== code[17]) {\n        tip = '校验位错误'\n        pass = false\n      }\n    }\n  }\n  console.assert(!tip, tip)\n  return pass\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"3598","url":"/home/runner/work/utils/utils/src/is.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3284,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":3281,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":5}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":0}],"isBlockCoverage":false},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"isBlob","ranges":[{"startOffset":927,"endOffset":939,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":951,"endOffset":963,"count":0}],"isBlockCoverage":false},{"functionName":"isIdCard","ranges":[{"startOffset":977,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"isJson","ranges":[{"startOffset":1003,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"isPrime","ranges":[{"startOffset":1028,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"isPrime","ranges":[{"startOffset":1108,"endOffset":1168,"count":0}],"isBlockCoverage":false},{"functionName":"isJson","ranges":[{"startOffset":1185,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"isBlob","ranges":[{"startOffset":1320,"endOffset":1370,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":1387,"endOffset":1437,"count":0}],"isBlockCoverage":false},{"functionName":"isIdCard","ranges":[{"startOffset":1456,"endOffset":3277,"count":0}],"isBlockCoverage":false}]}}]},{"leaks":false,"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1679538743046,"runtime":2748,"slow":false,"start":1679538740298},"skipped":false,"testFilePath":"/home/runner/work/utils/utils/test/class/Counter.spec.ts","testResults":[{"rowKey":0,"ancestorTitles":["Debounce"],"duration":2019,"failureDetails":[],"failureMessages":[],"fullName":"Debounce Counter","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"Counter"}],"failureMessage":null,"v8Coverage":[{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar stdin_exports = {};\n__export(stdin_exports, {\n  Counter: () => Counter,\n  default: () => stdin_default\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar _timer;\nclass Counter {\n  constructor(argCount = 60, argCb) {\n    this.count = 0;\n    this.maxCount = 0;\n    __privateAdd(this, _timer, void 0);\n    this.cb = (a) => a;\n    this.count = argCount;\n    this.maxCount = argCount;\n    if (argCb)\n      this.cb = argCb;\n  }\n  setCount(argCount = 60) {\n    this.count = argCount;\n    if (!argCount) {\n      this.stop();\n    }\n    return this;\n  }\n  setMaxCount(argCount = 60) {\n    this.maxCount = argCount;\n    return this;\n  }\n  start(argCb) {\n    const cbFn = argCb || this.cb;\n    if (!this.count) {\n      this.count = this.maxCount;\n    }\n    if (__privateGet(this, _timer)) {\n      clearInterval(__privateGet(this, _timer));\n    }\n    cbFn(this.count);\n    __privateSet(this, _timer, setInterval(() => {\n      this.count--;\n      if (this.count === -1) {\n        this.count = this.maxCount;\n      }\n      cbFn(this.count);\n      if (this.count < 1) {\n        this.stop();\n      }\n    }, 1e3));\n    return this;\n  }\n  stop() {\n    if (__privateGet(this, _timer)) {\n      clearInterval(__privateGet(this, _timer));\n    }\n    return this;\n  }\n}\n_timer = new WeakMap();\nvar stdin_default = Counter;\n","originalCode":"import { AnyFn } from '../types'\n/**\n * @class\n * @classdesc new对象时可传入计数\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @example\n * const counter = new Counter(60, () => {})\n * counter.start() 开始计时(可传入回调函数，返回当前计数)\n * counter.stop() 停止计时\n */\nexport class Counter {\n  count = 0\n  maxCount = 0\n  #timer: any\n  cb: AnyFn = (a) => a\n  /**\n   * @description:\n   * @param {number} argCount 开始计时秒数\n   * @param {function} argCb 回调函数\n   */\n  constructor(argCount: number = 60, argCb?: AnyFn) {\n    this.count = argCount\n    this.maxCount = argCount\n    if (argCb) this.cb = argCb\n  }\n\n  /**\n   * @function\n   * @param {number} argCount 当前倒计时数值\n   * @description 设置当前倒计时数值\n   */\n  setCount(argCount: number = 60): this {\n    this.count = argCount\n    if (!argCount) {\n      this.stop()\n    }\n    return this\n  }\n\n  /**\n   * @function\n   * @param {number} argCount 初始倒计数\n   * @description 设置初始倒计时数值\n   */\n  setMaxCount(argCount: number = 60) {\n    this.maxCount = argCount\n    return this\n  }\n\n  /**\n   * @function\n   * @param {function} argCb 计时回调,返回当前剩余秒数\n   * @description 开始倒计时\n   */\n  start(argCb?: AnyFn) {\n    const cbFn: AnyFn = argCb || this.cb\n    // count为0时从最大值开始\n    if (!this.count) {\n      this.count = this.maxCount\n    }\n    if (this.#timer) {\n      clearInterval(this.#timer)\n    }\n    cbFn(this.count)\n    this.#timer = setInterval(() => {\n      this.count--\n      if (this.count === -1) {\n        this.count = this.maxCount\n      }\n      cbFn(this.count)\n      if (this.count < 1) {\n        this.stop()\n      }\n    }, 1000)\n    return this\n  }\n\n  /**\n   * @function\n   * @description 停止倒计时\n   */\n  stop() {\n    if (this.#timer) {\n      clearInterval(this.#timer)\n    }\n    return this\n  }\n}\nexport default Counter\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"1","url":"/home/runner/work/utils/utils/src/class/Counter.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2852,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":2849,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":2}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":1}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"__accessCheck","ranges":[{"startOffset":887,"endOffset":974,"count":9},{"startOffset":939,"endOffset":972,"count":0}],"isBlockCoverage":true},{"functionName":"__privateGet","ranges":[{"startOffset":995,"endOffset":1134,"count":7},{"startOffset":1095,"endOffset":1113,"count":0}],"isBlockCoverage":true},{"functionName":"__privateAdd","ranges":[{"startOffset":1155,"endOffset":1351,"count":1},{"startOffset":1208,"endOffset":1277,"count":0},{"startOffset":1306,"endOffset":1323,"count":0}],"isBlockCoverage":true},{"functionName":"__privateSet","ranges":[{"startOffset":1372,"endOffset":1540,"count":2},{"startOffset":1471,"endOffset":1496,"count":0}],"isBlockCoverage":true},{"functionName":"Counter","ranges":[{"startOffset":1603,"endOffset":1616,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1629,"endOffset":1648,"count":1}],"isBlockCoverage":true},{"functionName":"Counter","ranges":[{"startOffset":1729,"endOffset":1970,"count":1}],"isBlockCoverage":true},{"functionName":"Counter.cb","ranges":[{"startOffset":1862,"endOffset":1870,"count":0}],"isBlockCoverage":false},{"functionName":"setCount","ranges":[{"startOffset":1973,"endOffset":2092,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxCount","ranges":[{"startOffset":2095,"endOffset":2174,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":2177,"endOffset":2666,"count":2},{"startOffset":2215,"endOffset":2225,"count":1},{"startOffset":2248,"endOffset":2289,"count":0},{"startOffset":2326,"endOffset":2382,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2448,"endOffset":2637,"count":2},{"startOffset":2505,"endOffset":2550,"count":0},{"startOffset":2601,"endOffset":2631,"count":0}],"isBlockCoverage":true},{"functionName":"stop","ranges":[{"startOffset":2669,"endOffset":2791,"count":2}],"isBlockCoverage":true}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  deepCopy: () => deepCopy,\n  delCookie: () => delCookie,\n  getCookie: () => getCookie,\n  getEnv: () => getEnv,\n  getInfo: () => getInfo,\n  getNetworkStatus: () => getNetworkStatus,\n  getObj: () => getObj,\n  getRandomColor: () => getRandomColor,\n  getRegexp: () => getRegexp,\n  getStorage: () => getStorage,\n  getUrlParam: () => getUrlParam,\n  getUrlParamObj: () => getUrlParamObj,\n  getUuid: () => getUuid,\n  randomInt: () => randomInt,\n  remInit: () => remInit,\n  replaceUrlParam: () => replaceUrlParam,\n  safe: () => safe,\n  safeData: () => safeData,\n  setCookie: () => setCookie,\n  setEnv: () => setEnv,\n  setLog: () => setLog,\n  setObj: () => setObj,\n  setStorage: () => setStorage,\n  setTitle: () => setTitle,\n  setUrlParams: () => setUrlParams,\n  sleep: () => sleep\n});\nmodule.exports = __toCommonJS(stdin_exports);\nvar import_is = require(\"./is\");\nlet isOnline = true;\nlet ENV = {};\nlet DATA_OBJECT = {};\nif (globalThis && globalThis.addEventListener) {\n  globalThis.addEventListener(\"offline\", function() {\n    console.debug(\"offLine\");\n    isOnline = false;\n  });\n  globalThis.addEventListener(\"online\", function() {\n    console.debug(\"onLine\");\n    isOnline = true;\n  });\n}\nconst getNetworkStatus = () => {\n  return isOnline;\n};\nconst getRegexp = () => {\n  return {\n    html: /<[^>]+>/gim,\n    password: /^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[\\W_]).{8,16}$/,\n    idCard: /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/,\n    idCardNormal: /^[0-9]\\d+([0-9]|X|x)*$/,\n    phone: /^1\\d{10}$/,\n    email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n    http: /http:\\/\\/|https:\\/\\//,\n    score: /^[1-9]\\d*|0$/,\n    int: /^[1-9]\\d*$/,\n    number: /^\\d*$/,\n    float1: /^(([1-9]\\d*)|0|(0.\\d{0,1})|([1-9]\\d*.\\d{0,1}))$/,\n    float2: /^(([1-9]\\d*)|0|(0.\\d{0,2})|([1-9]\\d*.\\d{0,2}))$/,\n    float3: /^(([1-9]\\d*)|0|(0.\\d{0,3})|([1-9]\\d*.\\d{0,3}))$/,\n    letterNumber: /^[a-zA-Z0-9]*$/,\n    letter: /^[a-zA-Z]*$/,\n    account: /^[a-zA-Z0-9_\\-\\u4e00-\\u9fa5]{1,50}$/,\n    realName: /^([\\u4e00-\\u9fa5]{1,50}|[\\u4e00-\\u9fa5]{1,25}[\\s][\\u4e00-\\u9fa5]{1,24}|[a-zA-Z_\\-.]{1,50}|[a-zA-Z_\\-.]{1,25}[\\s][a-zA-Z_\\-.]{1,24})$/,\n    cn: /^[\\u4e00-\\u9fa5]*$/,\n    ascii: /^[\\x20-\\x7E]+$/\n  };\n};\nconst setTitle = (argTitle) => {\n  if (typeof globalThis.document === \"object\") {\n    globalThis.document.title = String(argTitle);\n  }\n  if (getInfo().isAppleMobile) {\n    const i = document.createElement(\"iframe\");\n    i.onload = () => {\n      setTimeout(() => {\n        console.debug(\"apple mobile setting title\");\n        i.remove();\n      }, 10);\n    };\n    globalThis.document.body.appendChild(i);\n  }\n};\nconst remInit = (argBaseSize = 16, argWidth = 375) => {\n  const setRem = () => {\n    const scale = safeData(globalThis, \"document.documentElement.clientWidth\", argWidth) / argWidth;\n    safeData(\n      globalThis,\n      \"document.documentElement.style.fontSize\",\n      argBaseSize * scale + \"px\",\n      true\n    );\n  };\n  setRem();\n  globalThis.onresize = () => {\n    setRem();\n  };\n};\nconst getCookie = (argName) => {\n  const cookies = globalThis.document.cookie.split(\"; \");\n  const cookie = cookies.find((cookie2) => {\n    const [name] = cookie2.split(\"=\");\n    return argName === name;\n  });\n  return cookie ? decodeURIComponent(cookie.split(\"=\")[1] || \"\") : \"\";\n};\nconst setCookie = (argName, argValue = \"\", argTime = 24) => {\n  let now = new Date();\n  let offset = 8;\n  let utc = now.getTime() + now.getTimezoneOffset() * 6e4;\n  let nd = utc + 36e5 * offset;\n  let exp = new Date(nd);\n  let domain = globalThis.document.domain;\n  exp.setTime(exp.getTime() + argTime * 60 * 60 * 1e3);\n  globalThis.document.cookie = argName + \"=\" + encodeURIComponent(argValue) + \";path=/;expires=\" + exp.toUTCString() + \";domain=\" + domain + \";\";\n};\nconst delCookie = (argName = \"\") => {\n  setCookie(argName, \"\", -1);\n};\nconst getInfo = () => {\n  let ua = safeData(globalThis, \"navigator.userAgent\", \"\").toLowerCase();\n  let platform = safeData(\n    globalThis,\n    \"navigator.userAgentData.platform\",\n    \"\"\n  ).toLowerCase();\n  let info = {\n    ua,\n    platform,\n    isMobile: !!ua.match(/mobile/),\n    isWin: !!platform.match(\"win\"),\n    isIphone: !!ua.match(/iphone/),\n    isIpad: !!ua.match(/ipad/),\n    isMac: !!platform.match(\"mac\"),\n    isIos: !!platform.match(\"ios\"),\n    isAndroid: !!platform.match(\"android\"),\n    isSafari: ua.indexOf(\"safari\") > -1 && ua.indexOf(\"chrome\") < 1,\n    isIE: \"ActiveXObject\" in globalThis,\n    ieVersion: 0,\n    isAppleMobile: false,\n    isWeixin: !!ua.match(/MicroMessenger/i),\n    isAlipay: !!ua.match(/Alipay/i)\n  };\n  if (info.ua.match(\"msie\")) {\n    let IE = info.ua.match(/msie\\s([0-9]*)/);\n    if (IE && IE.length >= 2) {\n      info.ieVersion = +IE[1];\n    }\n  }\n  info.isAppleMobile = !!(info.isMobile && ua.toLowerCase().indexOf(\"applewebkit\") && ua.indexOf(\"chrome\") < 1);\n  return info;\n};\nconst getRandomColor = function() {\n  return \"#\" + (\"00000\" + (Math.random() * 16777216 << 0).toString(16)).substring(-6);\n};\nconst getStorage = (argKey, argNoJson) => {\n  let res = globalThis.localStorage.getItem(argKey);\n  if (!argNoJson && (0, import_is.isJson)(res) && res) {\n    res = JSON.parse(res);\n  }\n  return res || \"\";\n};\nconst setStorage = (argKey, argData) => {\n  if (typeof argData === \"object\") {\n    argData = JSON.stringify(argData);\n  }\n  globalThis.localStorage.setItem(argKey, String(argData));\n  return String(argData);\n};\nconst sleep = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\nconst safe = function safe2(argData, argCheck, argValue, argSetValueForce) {\n  if (!argData) {\n    return argValue;\n  }\n  if (typeof argCheck !== \"string\" && typeof argCheck !== \"number\") {\n    console.warn(\"argCheck\\u8BF7\\u4F20\\u5165string\\u5F53\\u524D\\u4E3A:\" + argCheck);\n    return \"\";\n  }\n  const temKey = argCheck.toString().split(\".\");\n  const temLen = temKey.length;\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== \"object\") {\n        if (argSetValueForce) {\n          console.warn(\"safeData setValue err\\uFF1A\", argData, \"index:\", i);\n        }\n        return argValue;\n      }\n      argData = argData[temKey[i]] || {};\n    }\n  }\n  if (argSetValueForce) {\n    ;\n    argData[temKey[temLen - 1]] = argValue;\n  }\n  if (typeof argValue === \"undefined\") {\n    return argData[temKey[temLen - 1]];\n  } else {\n    return argData[temKey[temLen - 1]] || argValue;\n  }\n};\nconst safeData = (argData, argCheck, argValue, argSetValueForce) => {\n  if (typeof argCheck !== \"string\" && typeof argCheck !== \"number\") {\n    console.warn(\"argCheck\\u8BF7\\u4F20\\u5165string\\u5F53\\u524D\\u4E3A:\" + argCheck);\n    return \"\";\n  }\n  const temKey = argCheck.toString().split(\".\");\n  const temLen = temKey.length;\n  if (!argData) {\n    return argValue;\n  }\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== \"object\") {\n        if (argSetValueForce) {\n          console.warn(\"safeData setValue err\\uFF1A\", argData, \"index:\", i);\n        }\n        return argValue;\n      }\n      argData = argData[temKey[i]] || {};\n    }\n  }\n  if (argSetValueForce) {\n    argData[temKey[temLen - 1]] = argValue;\n  }\n  if (typeof argValue === \"undefined\") {\n    return argData[temKey[temLen - 1]];\n  } else {\n    return argData[temKey[temLen - 1]] || argValue;\n  }\n};\nconst setUrlParams = (argParams, noMark) => {\n  let re = \"\";\n  if (!noMark) {\n    re = \"?\";\n  }\n  let paramsList = Object.keys(argParams);\n  let temLength = paramsList.length;\n  if (!temLength) {\n    return \"\";\n  }\n  paramsList.map((v, k) => {\n    re += v + \"=\" + argParams[v];\n    if (k < temLength - 1) {\n      re += \"&\";\n    }\n  });\n  return re;\n};\nconst getUrlParam = (argName, argUrl = globalThis.location.search || \"\") => {\n  let result = argUrl.match(new RegExp(\"[?&]\" + argName + \"=([^&]+)\", \"i\"));\n  if (!result) {\n    return \"\";\n  }\n  return decodeURIComponent(result[1]);\n};\nconst getUrlParamObj = (argData = globalThis.location.search || globalThis.location.hash) => {\n  const res = {};\n  try {\n    argData.slice(argData.indexOf(\"?\") + 1).split(\"&\").forEach((v) => {\n      const [key, val] = v.split(\"=\");\n      if (key !== v) {\n        res[key] = decodeURIComponent(val);\n      }\n    });\n    return res;\n  } catch (e) {\n    console.error(\"\\u8F6C\\u6362\\u5931\\u8D25\", e);\n    return res;\n  }\n};\nconst replaceUrlParam = (name, value, url = globalThis.location.href || \"\") => {\n  const reg = new RegExp(\"([?]|&)(\" + name + \"=)([^&#]*)([&]?|$)\", \"img\");\n  const r = url.match(reg);\n  const search = url.split(\"?\");\n  let strValue = url;\n  if (value === void 0 || value === null) {\n    if (r != null) {\n      strValue = url.replace(reg, (_match, p1, _p2, _p3, p4) => {\n        if (!p4 || !p4.length) {\n          return \"\";\n        } else if (p1 === p4) {\n          return p1;\n        }\n        return p1 + p4;\n      });\n      strValue = strValue.replace(\"?&\", \"?\");\n    }\n  } else if (r != null) {\n    strValue = url.replace(reg, `$1$2${value}$4`);\n  } else if (search.length > 1) {\n    const sub = search[1].split(\"#\");\n    if (sub.length > 1) {\n      if (sub[1].length) {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}#${sub[1]}`;\n      } else {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}${sub[1]}`;\n      }\n    } else {\n      strValue = `${search[0]}?${search[1]}&${name}=${value}`;\n    }\n  } else {\n    const sub = url.split(\"#\");\n    if (sub.length > 1) {\n      strValue = `${sub[0]}?${name}=${value}#${sub[1]}`;\n    } else {\n      strValue = `${url}?${name}=${value}`;\n    }\n  }\n  return strValue;\n};\nconst getUuid = () => {\n  const S4 = () => ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);\n  return S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + Date.now();\n};\nconst randomInt = (min = 0, max = 100) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst setEnv = (env) => {\n  ENV = env;\n};\nconst getEnv = (key) => {\n  return safeData(ENV, key, \"\");\n};\nconst setObj = (key, data) => {\n  if (!key) {\n    DATA_OBJECT = data;\n  } else {\n    DATA_OBJECT[key] = data;\n  }\n  return DATA_OBJECT;\n};\nconst getObj = (key, argData, isDeepCopy) => {\n  let res = safeData(DATA_OBJECT, key, {});\n  if (argData) {\n    res = Object.assign(res, argData);\n  }\n  if (!isDeepCopy) {\n    return res;\n  } else {\n    return JSON.parse(JSON.stringify(res));\n  }\n};\nconst setLog = (logLevel, logConfig) => {\n  logLevel = logLevel || getEnv(\"VUE_APP_LOG_LEVEL\") || 4;\n  const logList = [\"log\", \"info\", \"warn\", \"error\"];\n  const log = {};\n  logList.forEach((v) => {\n    log[v] = console[v];\n  });\n  for (let key in logConfig) {\n    if (console[key]) {\n      ;\n      console[key] = (...arg) => {\n        var _a, _b;\n        ;\n        log[key](...arg, (_a = Error().stack) == null ? void 0 : _a.split(\"\\n\")[2]);\n        logConfig[key] && logConfig[key](...arg, (_b = Error().stack) == null ? void 0 : _b.split(\"\\n\")[2]);\n      };\n    }\n  }\n  switch (+logLevel) {\n    case 1:\n      console.warn = () => {\n      };\n    case 2:\n      console.info = () => {\n      };\n    case 3:\n      console.log = () => {\n      };\n    case 4:\n      console.debug = () => {\n      };\n    default:\n      break;\n  }\n};\nconst deepCopy = (obj) => {\n  if (typeof obj !== \"object\" || obj === null) {\n    return obj;\n  }\n  let copy = Array.isArray(obj) ? [] : {};\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ;\n      copy[key] = deepCopy(obj[key]);\n    }\n  }\n  return copy;\n};\n","originalCode":"/**\n * @module index\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 公共函数，使用'lj-utils'引入\n */\n\nimport { isJson } from './is'\nimport { Info, AnyObject, Bool } from './types'\n\nlet isOnline: boolean = true\nlet ENV: AnyObject = {}\nlet DATA_OBJECT: AnyObject = {}\n// 断网监听\nif (globalThis && globalThis.addEventListener) {\n  // #ifdef H5\n  globalThis.addEventListener('offline', function () {\n    console.debug('offLine')\n    isOnline = false\n  })\n  globalThis.addEventListener('online', function () {\n    console.debug('onLine')\n    isOnline = true\n  })\n  // #endif\n}\n\n/**\n * @function\n * @description 获取当前网络状态（H5）\n * @return boolean\n */\nexport const getNetworkStatus = () => {\n  return isOnline\n}\n\n/**\n * @function\n * @description 正则收集\n * @returns {object}\n */\nexport const getRegexp = (): AnyObject => {\n  return {\n    // 匹配html标签，提取html文字： htmlCode.replace(reg.html,'')\n    html: /<[^>]+>/gim,\n    // 至少1数字1字母1字符，8-16位\n    password: /^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[\\W_]).{8,16}$/,\n    // 普通身份证号正则，isIdCard更为严格\n    idCard: /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/,\n    // 简易身份证号 数字+x\n    idCardNormal: /^[0-9]\\d+([0-9]|X|x)*$/,\n    // 手机号\n    phone: /^1\\d{10}$/,\n    // 邮箱\n    email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n    // 网址\n    http: /http:\\/\\/|https:\\/\\//,\n    // 含0整数（得分）\n    score: /^[1-9]\\d*|0$/,\n    // 整数\n    int: /^[1-9]\\d*$/,\n    // 匹配数字\n    number: /^\\d*$/,\n    // >=0||1位小数\n    float1: /^(([1-9]\\d*)|0|(0.\\d{0,1})|([1-9]\\d*.\\d{0,1}))$/,\n    // >=0||2位小数\n    float2: /^(([1-9]\\d*)|0|(0.\\d{0,2})|([1-9]\\d*.\\d{0,2}))$/,\n    // >=0||3位小数\n    float3: /^(([1-9]\\d*)|0|(0.\\d{0,3})|([1-9]\\d*.\\d{0,3}))$/,\n    // 字母+数字组合\n    letterNumber: /^[a-zA-Z0-9]*$/,\n    // 字母\n    letter: /^[a-zA-Z]*$/,\n    // 帐号50个字内：大小写+数字+中文+'_'+'-'\n    account: /^[a-zA-Z0-9_\\-\\u4e00-\\u9fa5]{1,50}$/,\n    // 中英文姓名 50个字内/中文 中文/英文-. 英文-./\n    realName:\n      /^([\\u4e00-\\u9fa5]{1,50}|[\\u4e00-\\u9fa5]{1,25}[\\s][\\u4e00-\\u9fa5]{1,24}|[a-zA-Z_\\-.]{1,50}|[a-zA-Z_\\-.]{1,25}[\\s][a-zA-Z_\\-.]{1,24})$/,\n    // 匹配中文\n    cn: /^[\\u4e00-\\u9fa5]*$/,\n    // 匹配ASCII,非中文之外的字符（全角字符）\n    ascii: /^[\\x20-\\x7E]+$/,\n  }\n}\n\n/**\n * @function\n * @description 设置标题\n * @param  {string} argTitle 标题\n */\nexport const setTitle = (argTitle: string | number) => {\n  if (typeof globalThis.document === 'object') {\n    globalThis.document.title = String(argTitle)\n  }\n  if (getInfo().isAppleMobile) {\n    const i = document.createElement('iframe')\n    i.onload = () => {\n      setTimeout(() => {\n        console.debug('apple mobile setting title')\n        i.remove()\n      }, 10)\n    }\n    globalThis.document.body.appendChild(i)\n  }\n}\n\n/**\n * @function\n * @description 使用postcss-px2rem时使用\n * @param {number} argBaseSize 基础大小 16px（要跟配置一致）\n * @param {number} argWidth 基准宽度\n */\nexport const remInit = (argBaseSize: number = 16, argWidth: number = 375) => {\n  // 设置 rem 函数\n  const setRem = () => {\n    // 当前页面宽度相对于 argWidth 宽的缩放比例，可根据自己需要修改。\n    const scale =\n      safeData(globalThis, 'document.documentElement.clientWidth', argWidth) /\n      argWidth\n    // 设置页面根节点字体大小\n    safeData(\n      globalThis,\n      'document.documentElement.style.fontSize',\n      argBaseSize * scale + 'px',\n      true\n    )\n  }\n  // 初始化\n  setRem()\n  // 改变窗口大小时重新设置 rem\n  globalThis.onresize = () => {\n    setRem()\n  }\n}\n\n/**\n * @function\n * @description 获取cookie\n * @param  {string} argName 要获取的值\n * @returns {string}\n */\nexport const getCookie = (argName: string): string => {\n  const cookies = globalThis.document.cookie.split('; ')\n  const cookie = cookies.find((cookie) => {\n    const [name] = cookie.split('=')\n    return argName === name\n  })\n  return cookie ? decodeURIComponent(cookie.split('=')[1] || '') : ''\n}\n\n/**\n * @function\n * @description 设置cookie\n * @param  {string} argName 要设置的key\n * @param  {string} argValue 要设置的value\n * @param  {number} argTime 过期时间/时 默认24小时\n */\nexport const setCookie = (\n  argName: string,\n  argValue: string | number | boolean = '',\n  argTime: number = 24\n) => {\n  let now = new Date()\n  let offset = 8\n  let utc = now.getTime() + now.getTimezoneOffset() * 60000\n  let nd = utc + 3600000 * offset\n  let exp = new Date(nd)\n  let domain = globalThis.document.domain\n  exp.setTime(exp.getTime() + argTime * 60 * 60 * 1000)\n  globalThis.document.cookie =\n    argName +\n    '=' +\n    encodeURIComponent(argValue) +\n    ';path=/;expires=' +\n    exp.toUTCString() +\n    ';domain=' +\n    domain +\n    ';'\n}\n\n/**\n * @function\n * @description 清除cookie\n * @param  {string} argName 要清除的值\n */\nexport const delCookie = (argName: string = '') => {\n  setCookie(argName, '', -1)\n}\n\n/**\n * @function\n * @description 检测浏览器状态，系统状态 *\n * @returns {Info} {\n * ua: ua,\n * platform: 平台,\n * isMobile: 移动端,\n * isWin: winPC端,\n * isIphone: iphone,\n * isIpad: ipad,\n * isMac: mac,\n * isAppleMobile: 苹果移动端webview\n * isSafari: Safari浏览器,\n * isIos: Ios平台,\n * isAndroid: android平台,\n * isIE: 显示8 9 10, true为11以上\n * ...\n * }\n */\nexport const getInfo = (): Info => {\n  let ua = safeData(globalThis, 'navigator.userAgent', '').toLowerCase()\n  let platform: string = safeData(\n    globalThis,\n    'navigator.userAgentData.platform',\n    ''\n  ).toLowerCase()\n  let info: Info = {\n    ua: ua,\n    platform: platform,\n    isMobile: !!ua.match(/mobile/),\n    isWin: !!platform.match('win'),\n    isIphone: !!ua.match(/iphone/),\n    isIpad: !!ua.match(/ipad/),\n    isMac: !!platform.match('mac'),\n    isIos: !!platform.match('ios'),\n    isAndroid: !!platform.match('android'),\n    isSafari: ua.indexOf('safari') > -1 && ua.indexOf('chrome') < 1,\n    isIE: 'ActiveXObject' in globalThis,\n    ieVersion: 0,\n    isAppleMobile: false,\n    isWeixin: !!ua.match(/MicroMessenger/i),\n    isAlipay: !!ua.match(/Alipay/i),\n  }\n  if (info.ua.match('msie')) {\n    let IE = info.ua.match(/msie\\s([0-9]*)/)\n    if (IE && IE.length >= 2) {\n      info.ieVersion = +IE[1]\n    }\n  }\n  info.isAppleMobile = !!(\n    info.isMobile &&\n    ua.toLowerCase().indexOf('applewebkit') &&\n    ua.indexOf('chrome') < 1\n  )\n  return info\n}\n\n/**\n * @function\n * @description 获取随机颜色\n * @return string\n */\nexport const getRandomColor = function () {\n  return (\n    '#' +\n    ('00000' + ((Math.random() * 0x1000000) << 0).toString(16)).substring(-6)\n  )\n}\n\n/**\n * @function\n * @description 获取storage的值，默认将json转为obj\n * @param {string} argKey 要获取的key\n * @param {string} argNoJson true时不自动转换JSON字符串\n * @returns {any} key对应的数据\n */\nexport const getStorage = (argKey: string, argNoJson?: string): any => {\n  let res = globalThis.localStorage.getItem(argKey)\n  // 默认转义JSON字符串\n  if (!argNoJson && isJson(res) && res) {\n    res = JSON.parse(res)\n  }\n  return res || ''\n}\n\n/**\n * @function\n * @description 设置storage的值，默认将obj转为json\n * @param {string} argKey 要获取的key\n * @param {unknown} argData 要保存的数据\n * @returns {string} 保存的数据String\n */\nexport const setStorage = (argKey: string, argData: unknown): string => {\n  if (typeof argData === 'object') {\n    argData = JSON.stringify(argData)\n  }\n  globalThis.localStorage.setItem(argKey, String(argData))\n  return String(argData)\n}\n\n/**\n * @function\n * @description setTimeout promise版\n * @param  {number} ms 时间，毫秒\n */\nexport const sleep = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n// 返回T下的key对应类型\ntype KeyOf<T extends Record<string, any>, K = keyof T> = K extends string\n  ? T[K] extends Function\n    ? never\n    : K\n  : never\ntype DotField<T extends Record<string, any>, K = KeyOf<T>> = K extends string\n  ? K | `${K}.${DotField<T[K]>}`\n  : never\n// 返回传入K或T[K]对应的类型\ntype ValueOf<\n  T extends Record<string, any>,\n  K\n> = K extends `${infer I}.${infer R}`\n  ? ValueOf<T[I], R>\n  : K extends string\n  ? T[K]\n  : never\n\n/**\n * @function\n * @description 数据安全访问\n * @param  {any} argData  [原始数据]\n * @param  {string} argCheck [要返回的数据，用'.'连接，数组用'.+数字表示']\n * @param  {any} argValue [如果数据有误，返回的值，选填]\n * @param  {boolean|0|1} argSetValueForce [是否强制赋值argValue]\n * @returns {any}\n */\nexport const safe = function safe<\n  T extends Record<string, any>,\n  K extends DotField<T>\n>(\n  argData: T,\n  argCheck: K,\n  argValue?: ValueOf<T, K>,\n  argSetValueForce?: Bool\n): ValueOf<T, K> | undefined | string {\n  if (!argData) {\n    return argValue\n  }\n  if (typeof argCheck !== 'string' && typeof argCheck !== 'number') {\n    console.warn('argCheck请传入string当前为:' + argCheck)\n    return ''\n  }\n  const temKey = argCheck.toString().split('.')\n  const temLen = temKey.length\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== 'object') {\n        if (argSetValueForce) {\n          console.warn('safeData setValue err：', argData, 'index:', i)\n        }\n        return argValue\n      }\n      argData = argData[temKey[i]] || {}\n    }\n  }\n  if (argSetValueForce) {\n    ;(argData as AnyObject)[temKey[temLen - 1]] = argValue\n  }\n  if (typeof argValue === 'undefined') {\n    return argData[temKey[temLen - 1]]\n  } else {\n    return argData[temKey[temLen - 1]] || argValue\n  }\n}\n/**\n * @function\n * @description 数据安全访问\n * @param  {any} argData  [原始数据]\n * @param  {string} argCheck [要返回的数据，用'.'连接，数组用'.+数字表示']\n * @param  {any} argValue [如果数据有误，返回的值，选填]\n * @param  {boolean|0|1} argSetValueForce [是否强制赋值argValue]\n * @returns {any}\n */\nexport const safeData = (\n  argData: any,\n  argCheck: string,\n  argValue?: any,\n  argSetValueForce?: Bool\n): any => {\n  if (typeof argCheck !== 'string' && typeof argCheck !== 'number') {\n    console.warn('argCheck请传入string当前为:' + argCheck)\n    return ''\n  }\n  const temKey = argCheck.toString().split('.')\n  const temLen = temKey.length\n  if (!argData) {\n    return argValue\n  }\n  if (temLen > 1) {\n    for (let i = 0; i < temLen - 1; i++) {\n      if (typeof argData[temKey[i]] !== 'object') {\n        if (argSetValueForce) {\n          console.warn('safeData setValue err：', argData, 'index:', i)\n        }\n        return argValue\n      }\n      argData = argData[temKey[i]] || {}\n    }\n  }\n  if (argSetValueForce) {\n    argData[temKey[temLen - 1]] = argValue\n  }\n  if (typeof argValue === 'undefined') {\n    return argData[temKey[temLen - 1]]\n  } else {\n    return argData[temKey[temLen - 1]] || argValue\n  }\n}\n\n/**\n * @description obj转url参数\n * @function\n * @param {any} argParams 参数对象\n * @param {boolean?} noMark 默认带?,true时,不带\n * @returns {string}\n */\nexport const setUrlParams = (argParams: any, noMark?: boolean): string => {\n  let re = ''\n  if (!noMark) {\n    re = '?'\n  }\n  let paramsList = Object.keys(argParams)\n  let temLength = paramsList.length\n  if (!temLength) {\n    return ''\n  }\n  paramsList.map((v, k) => {\n    re += v + '=' + argParams[v]\n    if (k < temLength - 1) {\n      re += '&'\n    }\n  })\n  return re\n}\n\n/**\n * @description 获取url参数\n * @function\n * @param {string} argName 要获取的key\n * @param {string} argUrl url数据\n * @returns {string}\n */\nexport const getUrlParam = (\n  argName: string,\n  argUrl: string = globalThis.location.search || ''\n): string => {\n  let result = argUrl.match(new RegExp('[?&]' + argName + '=([^&]+)', 'i'))\n  if (!result) {\n    return ''\n  }\n  return decodeURIComponent(result[1])\n}\n\n/**\n * @description 获取所有url参数，eg: a=1&b=2 to {a:1,b:2}\n * @function\n * @param {string} argData 要处理的数据\n * @returns {any}\n */\nexport const getUrlParamObj = (\n  argData: string = globalThis.location.search || globalThis.location.hash\n): AnyObject => {\n  const res: AnyObject = {}\n  try {\n    argData\n      .slice(argData.indexOf('?') + 1)\n      .split('&')\n      .forEach((v) => {\n        const [key, val] = v.split('=')\n        if (key !== v) {\n          res[key] = decodeURIComponent(val)\n        }\n      })\n    return res\n  } catch (e) {\n    console.error('转换失败', e)\n    return res\n  }\n  // let temObj = new URLSearchParams(argData)\n  // let resObj = {}\n  // for (const [key, value] of temObj) {\n  //   resObj[key] = value\n  // }\n  // return resObj\n}\n\n/**\n * @description 通过正则匹配修改当前页面的url中的参数\n * @function\n * @param  {string} name key\n * @param  {string | number| undefined | null} value 要替换的value\n * @param  {string} url 要替换的网址,默认location.href\n * @returns {string}\n */\nexport const replaceUrlParam = (\n  name: string,\n  value: string | number | undefined | null,\n  url: string = globalThis.location.href || ''\n): string => {\n  const reg = new RegExp('([?]|&)(' + name + '=)([^&#]*)([&]?|$)', 'img')\n  const r = url.match(reg)\n  const search = url.split('?')\n  let strValue: string = url\n  if (value === undefined || value === null) {\n    if (r != null) {\n      strValue = url.replace(reg, (_match, p1, _p2, _p3, p4) => {\n        if (!p4 || !p4.length) {\n          return ''\n        } else if (p1 === p4) {\n          return p1\n        }\n        return p1 + p4\n      })\n      strValue = strValue.replace('?&', '?')\n    }\n  } else if (r != null) {\n    strValue = url.replace(reg, `$1$2${value}$4`)\n  } else if (search.length > 1) {\n    const sub = search[1].split('#')\n    if (sub.length > 1) {\n      if (sub[1].length) {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}#${sub[1]}`\n      } else {\n        strValue = `${search[0]}?${sub[0]}&${name}=${value}${sub[1]}`\n      }\n    } else {\n      strValue = `${search[0]}?${search[1]}&${name}=${value}`\n    }\n  } else {\n    // 不存在?时,搜索hash\n    const sub = url.split('#')\n    if (sub.length > 1) {\n      strValue = `${sub[0]}?${name}=${value}#${sub[1]}`\n    } else {\n      strValue = `${url}?${name}=${value}`\n    }\n  }\n  return strValue\n}\n\n/**\n * @function\n * @description 获取简单uuid\n * @returns {string} uuid\n */\nexport const getUuid = (): string => {\n  const S4 = () =>\n    (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  return S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + Date.now()\n}\n\n/**\n * @function\n * @description 获取随机数,含最大值，含最小值\n * @param  {number} min 最小值\n * @param  {number} max 最大值\n * @returns {number}\n */\nexport const randomInt = (min: number = 0, max: number = 100): number => {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  // 含最大值，含最小值\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n/**\n * @function\n * @description 设置env参数，一般在main.js中调用\n * @param  {AnyObject} env 要设置的值\n */\nexport const setEnv = (env: AnyObject) => {\n  ENV = env\n}\n/**\n * @function\n * @description 获取env参数\n * @param  {string} key 要获取的值\n * @returns {string} 获取的值\n */\nexport const getEnv = (key: string): string => {\n  return safeData(ENV, key, '')\n}\n\n/**\n * @function\n * @description 设置object参数,可做运行时缓存\n * @param  {string} key 要设置的key\n * @param  {AnyObject} data 要设置的值\n * @returns {AnyObject}\n */\nexport const setObj = (key: string, data: AnyObject): AnyObject => {\n  if (!key) {\n    DATA_OBJECT = data\n  } else {\n    DATA_OBJECT[key] = data\n  }\n  return DATA_OBJECT\n}\n\n/**\n * @function\n * @description 获取object参数\n * @param  {string} key 要获取的值\n * @param  {string} argData 要合并的值\n * @param  {boolean} isDeepCopy 是否深拷贝\n * @returns {AnyObject} 获取的值\n */\nexport const getObj = (\n  key: string,\n  argData?: AnyObject,\n  isDeepCopy?: Bool\n): AnyObject => {\n  let res: AnyObject = safeData(DATA_OBJECT, key, {})\n  if (argData) {\n    res = Object.assign(res, argData)\n  }\n  if (!isDeepCopy) {\n    return res\n  } else {\n    return JSON.parse(JSON.stringify(res))\n  }\n}\n\n/**\n * @function\n * @description 设置日志输出logLevel 1 error 2 warn 3 info 4 log 5 debug\n * @param {AnyObject} logConfig 重写配置\n * @param {function} logConfig.error 错误日志回调（做额外处理用）\n */\nexport const setLog = (logLevel?: string | number, logConfig?: AnyObject) => {\n  // 1 error 2 warn 3 info 4 log 5 debug\n  logLevel = logLevel || getEnv('VUE_APP_LOG_LEVEL') || 4\n  const logList = ['log', 'info', 'warn', 'error']\n  const log: AnyObject = {}\n  logList.forEach((v) => {\n    log[v] = (console as AnyObject)[v]\n  })\n  for (let key in logConfig) {\n    if ((console as AnyObject)[key]) {\n      ;(console as AnyObject)[key] = (...arg: any[]) => {\n        ;(log as AnyObject)[key](...arg, Error().stack?.split('\\n')[2])\n        // 回调处理\n        logConfig[key] && logConfig[key](...arg, Error().stack?.split('\\n')[2])\n      }\n    }\n  }\n  switch (+logLevel) {\n    case 1:\n      console.warn = () => {}\n    case 2:\n      console.info = () => {}\n    case 3:\n      console.log = () => {}\n    case 4:\n      console.debug = () => {}\n    default:\n      break\n  }\n  // return log\n}\n\n/**\n * 深拷贝函数\n * @param obj 需要拷贝的对象\n * @returns 拷贝后的对象\n */\nexport const deepCopy = (obj: any): any => {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj\n  }\n  let copy = Array.isArray(obj) ? [] : {}\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ;(copy as AnyObject)[key] = deepCopy(obj[key])\n    }\n  }\n  return copy\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"3855","url":"/home/runner/work/utils/utils/src/base.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12414,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":12411,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":26}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":26}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":2}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"deepCopy","ranges":[{"startOffset":929,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"delCookie","ranges":[{"startOffset":958,"endOffset":973,"count":0}],"isBlockCoverage":false},{"functionName":"getCookie","ranges":[{"startOffset":988,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"getEnv","ranges":[{"startOffset":1015,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":1040,"endOffset":1053,"count":0}],"isBlockCoverage":false},{"functionName":"getNetworkStatus","ranges":[{"startOffset":1075,"endOffset":1097,"count":0}],"isBlockCoverage":false},{"functionName":"getObj","ranges":[{"startOffset":1109,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomColor","ranges":[{"startOffset":1141,"endOffset":1161,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexp","ranges":[{"startOffset":1176,"endOffset":1191,"count":0}],"isBlockCoverage":false},{"functionName":"getStorage","ranges":[{"startOffset":1207,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParam","ranges":[{"startOffset":1240,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParamObj","ranges":[{"startOffset":1277,"endOffset":1297,"count":0}],"isBlockCoverage":false},{"functionName":"getUuid","ranges":[{"startOffset":1310,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":1338,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"remInit","ranges":[{"startOffset":1366,"endOffset":1379,"count":0}],"isBlockCoverage":false},{"functionName":"replaceUrlParam","ranges":[{"startOffset":1400,"endOffset":1421,"count":0}],"isBlockCoverage":false},{"functionName":"safe","ranges":[{"startOffset":1431,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"safeData","ranges":[{"startOffset":1455,"endOffset":1469,"count":0}],"isBlockCoverage":false},{"functionName":"setCookie","ranges":[{"startOffset":1484,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"setEnv","ranges":[{"startOffset":1511,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"setLog","ranges":[{"startOffset":1535,"endOffset":1547,"count":0}],"isBlockCoverage":false},{"functionName":"setObj","ranges":[{"startOffset":1559,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"setStorage","ranges":[{"startOffset":1587,"endOffset":1603,"count":0}],"isBlockCoverage":false},{"functionName":"setTitle","ranges":[{"startOffset":1617,"endOffset":1631,"count":0}],"isBlockCoverage":false},{"functionName":"setUrlParams","ranges":[{"startOffset":1649,"endOffset":1667,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":1678,"endOffset":1689,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1920,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2031,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"getNetworkStatus","ranges":[{"startOffset":2127,"endOffset":2155,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexp","ranges":[{"startOffset":2175,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"setTitle","ranges":[{"startOffset":3114,"endOffset":3506,"count":0}],"isBlockCoverage":false},{"functionName":"remInit","ranges":[{"startOffset":3524,"endOffset":3892,"count":0}],"isBlockCoverage":false},{"functionName":"getCookie","ranges":[{"startOffset":3912,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"setCookie","ranges":[{"startOffset":4196,"endOffset":4645,"count":0}],"isBlockCoverage":false},{"functionName":"delCookie","ranges":[{"startOffset":4665,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":4734,"endOffset":5737,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomColor","ranges":[{"startOffset":5762,"endOffset":5863,"count":0}],"isBlockCoverage":false},{"functionName":"getStorage","ranges":[{"startOffset":5884,"endOffset":6071,"count":0}],"isBlockCoverage":false},{"functionName":"setStorage","ranges":[{"startOffset":6092,"endOffset":6282,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":6298,"endOffset":6369,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6329,"endOffset":6365,"count":2}],"isBlockCoverage":true},{"functionName":"safe2","ranges":[{"startOffset":6384,"endOffset":7293,"count":0}],"isBlockCoverage":false},{"functionName":"safeData","ranges":[{"startOffset":7312,"endOffset":8204,"count":0}],"isBlockCoverage":false},{"functionName":"setUrlParams","ranges":[{"startOffset":8227,"endOffset":8556,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParam","ranges":[{"startOffset":8578,"endOffset":8790,"count":0}],"isBlockCoverage":false},{"functionName":"getUrlParamObj","ranges":[{"startOffset":8815,"endOffset":9210,"count":0}],"isBlockCoverage":false},{"functionName":"replaceUrlParam","ranges":[{"startOffset":9236,"endOffset":10448,"count":0}],"isBlockCoverage":false},{"functionName":"getUuid","ranges":[{"startOffset":10466,"endOffset":10635,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":10655,"endOffset":10791,"count":0}],"isBlockCoverage":false},{"functionName":"setEnv","ranges":[{"startOffset":10808,"endOffset":10833,"count":0}],"isBlockCoverage":false},{"functionName":"getEnv","ranges":[{"startOffset":10850,"endOffset":10895,"count":0}],"isBlockCoverage":false},{"functionName":"setObj","ranges":[{"startOffset":10912,"endOffset":11034,"count":0}],"isBlockCoverage":false},{"functionName":"getObj","ranges":[{"startOffset":11051,"endOffset":11284,"count":0}],"isBlockCoverage":false},{"functionName":"setLog","ranges":[{"startOffset":11301,"endOffset":12110,"count":0}],"isBlockCoverage":false},{"functionName":"deepCopy","ranges":[{"startOffset":12129,"endOffset":12407,"count":0}],"isBlockCoverage":false}]}},{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  isBlob: () => isBlob,\n  isFile: () => isFile,\n  isIdCard: () => isIdCard,\n  isJson: () => isJson,\n  isPrime: () => isPrime\n});\nmodule.exports = __toCommonJS(stdin_exports);\nconst isPrime = (argValue) => !/^.?$|^(..+?)\\1+$/.test(\".\".repeat(argValue));\nconst isJson = (argData) => {\n  try {\n    return typeof JSON.parse(argData || \"\") === \"object\";\n  } catch (e) {\n  }\n  return false;\n};\nconst isBlob = (argData) => {\n  return argData instanceof Blob;\n};\nconst isFile = (argData) => {\n  return argData instanceof File;\n};\nconst isIdCard = (code) => {\n  let tip = \"\";\n  let city = {\n    11: \"\\u5317\\u4EAC\",\n    12: \"\\u5929\\u6D25\",\n    13: \"\\u6CB3\\u5317\",\n    14: \"\\u5C71\\u897F\",\n    15: \"\\u5185\\u8499\\u53E4\",\n    21: \"\\u8FBD\\u5B81\",\n    22: \"\\u5409\\u6797\",\n    23: \"\\u9ED1\\u9F99\\u6C5F \",\n    31: \"\\u4E0A\\u6D77\",\n    32: \"\\u6C5F\\u82CF\",\n    33: \"\\u6D59\\u6C5F\",\n    34: \"\\u5B89\\u5FBD\",\n    35: \"\\u798F\\u5EFA\",\n    36: \"\\u6C5F\\u897F\",\n    37: \"\\u5C71\\u4E1C\",\n    41: \"\\u6CB3\\u5357\",\n    42: \"\\u6E56\\u5317 \",\n    43: \"\\u6E56\\u5357\",\n    44: \"\\u5E7F\\u4E1C\",\n    45: \"\\u5E7F\\u897F\",\n    46: \"\\u6D77\\u5357\",\n    50: \"\\u91CD\\u5E86\",\n    51: \"\\u56DB\\u5DDD\",\n    52: \"\\u8D35\\u5DDE\",\n    53: \"\\u4E91\\u5357\",\n    54: \"\\u897F\\u85CF \",\n    61: \"\\u9655\\u897F\",\n    62: \"\\u7518\\u8083\",\n    63: \"\\u9752\\u6D77\",\n    64: \"\\u5B81\\u590F\",\n    65: \"\\u65B0\\u7586\",\n    71: \"\\u53F0\\u6E7E\",\n    81: \"\\u9999\\u6E2F\",\n    82: \"\\u6FB3\\u95E8\",\n    91: \"\\u56FD\\u5916 \"\n  };\n  let pass = true;\n  if (!code || !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n    code\n  )) {\n    tip = \"\\u8EAB\\u4EFD\\u8BC1\\u53F7\\u683C\\u5F0F\\u9519\\u8BEF\";\n    pass = false;\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = \"\\u5730\\u5740\\u7F16\\u7801\\u9519\\u8BEF\";\n    pass = false;\n  } else {\n    if (code.length === 18) {\n      const codeArr = code.split(\"\");\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n      let parity = [1, 0, \"X\", 9, 8, 7, 6, 5, 4, 3, 2];\n      let sum = 0;\n      let ai = 0;\n      let wi = 0;\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i]);\n        wi = factor[i];\n        sum += ai * wi;\n      }\n      let last = parity[sum % 11] + \"\";\n      if (last !== code[17]) {\n        tip = \"\\u6821\\u9A8C\\u4F4D\\u9519\\u8BEF\";\n        pass = false;\n      }\n    }\n  }\n  console.assert(!tip, tip);\n  return pass;\n};\n","originalCode":"/**\n * @module index\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 判断函数\n */\n/**\n * @function\n * @description 判断质数\n * @param {number} argValue 要判断的数据\n * @returns {boolean} 结果\n */\nexport const isPrime = (argValue: number): boolean =>\n  !/^.?$|^(..+?)\\1+$/.test('.'.repeat(argValue))\n\n/**\n * @function\n * @description 判断是否是JSON\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isJson = (argData: any): boolean => {\n  try {\n    return typeof JSON.parse(argData || '') === 'object'\n  } catch (e) {}\n  return false\n}\n/**\n * @function\n * @description 判断是否是Blob\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isBlob = (argData: any): boolean => {\n  return argData instanceof Blob\n}\n\n/**\n * @function\n * @description 判断是否是File\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isFile = (argData: any): boolean => {\n  return argData instanceof File\n}\n\n/**\n * @function\n * @description 是否为正确的身份证号码\n * @param  {string} code 身份证号码\n * @returns {boolean}\n */\nexport const isIdCard = (code: string): boolean => {\n  let tip = ''\n  let city: { [key: number]: string } = {\n    11: '北京',\n    12: '天津',\n    13: '河北',\n    14: '山西',\n    15: '内蒙古',\n    21: '辽宁',\n    22: '吉林',\n    23: '黑龙江 ',\n    31: '上海',\n    32: '江苏',\n    33: '浙江',\n    34: '安徽',\n    35: '福建',\n    36: '江西',\n    37: '山东',\n    41: '河南',\n    42: '湖北 ',\n    43: '湖南',\n    44: '广东',\n    45: '广西',\n    46: '海南',\n    50: '重庆',\n    51: '四川',\n    52: '贵州',\n    53: '云南',\n    54: '西藏 ',\n    61: '陕西',\n    62: '甘肃',\n    63: '青海',\n    64: '宁夏',\n    65: '新疆',\n    71: '台湾',\n    81: '香港',\n    82: '澳门',\n    91: '国外 ',\n  }\n  let pass = true\n  if (\n    !code ||\n    !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n      code\n    )\n  ) {\n    tip = '身份证号格式错误'\n    pass = false\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = '地址编码错误'\n    pass = false\n  } else {\n    // 18位身份证需要验证最后一位校验位\n    if (code.length === 18) {\n      const codeArr = code.split('')\n      // ∑(ai×Wi)(mod 11)\n      // 加权因子\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]\n      // 校验位\n      let parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2]\n      let sum = 0\n      let ai = 0\n      let wi = 0\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i])\n        wi = factor[i]\n        sum += ai * wi\n      }\n      let last = parity[sum % 11] + ''\n      if (last !== code[17]) {\n        tip = '校验位错误'\n        pass = false\n      }\n    }\n  }\n  console.assert(!tip, tip)\n  return pass\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"3856","url":"/home/runner/work/utils/utils/src/is.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3284,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":3281,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":5}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":0}],"isBlockCoverage":false},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"isBlob","ranges":[{"startOffset":927,"endOffset":939,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":951,"endOffset":963,"count":0}],"isBlockCoverage":false},{"functionName":"isIdCard","ranges":[{"startOffset":977,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"isJson","ranges":[{"startOffset":1003,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"isPrime","ranges":[{"startOffset":1028,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"isPrime","ranges":[{"startOffset":1108,"endOffset":1168,"count":0}],"isBlockCoverage":false},{"functionName":"isJson","ranges":[{"startOffset":1185,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"isBlob","ranges":[{"startOffset":1320,"endOffset":1370,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":1387,"endOffset":1437,"count":0}],"isBlockCoverage":false},{"functionName":"isIdCard","ranges":[{"startOffset":1456,"endOffset":3277,"count":0}],"isBlockCoverage":false}]}}]},{"leaks":false,"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1679538743390,"runtime":316,"slow":false,"start":1679538743074},"skipped":false,"testFilePath":"/home/runner/work/utils/utils/test/is.spec.ts","testResults":[{"rowKey":0,"ancestorTitles":["is"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"is isJson","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"isJson"},{"rowKey":1,"ancestorTitles":["is"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"is isBlobMock","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"isBlobMock"},{"rowKey":2,"ancestorTitles":["is"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"is isFileMock","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"isFileMock"},{"rowKey":3,"ancestorTitles":["is"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"is isIdCard","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"isIdCard"}],"failureMessage":null,"v8Coverage":[{"codeTransformResult":{"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar stdin_exports = {};\n__export(stdin_exports, {\n  isBlob: () => isBlob,\n  isFile: () => isFile,\n  isIdCard: () => isIdCard,\n  isJson: () => isJson,\n  isPrime: () => isPrime\n});\nmodule.exports = __toCommonJS(stdin_exports);\nconst isPrime = (argValue) => !/^.?$|^(..+?)\\1+$/.test(\".\".repeat(argValue));\nconst isJson = (argData) => {\n  try {\n    return typeof JSON.parse(argData || \"\") === \"object\";\n  } catch (e) {\n  }\n  return false;\n};\nconst isBlob = (argData) => {\n  return argData instanceof Blob;\n};\nconst isFile = (argData) => {\n  return argData instanceof File;\n};\nconst isIdCard = (code) => {\n  let tip = \"\";\n  let city = {\n    11: \"\\u5317\\u4EAC\",\n    12: \"\\u5929\\u6D25\",\n    13: \"\\u6CB3\\u5317\",\n    14: \"\\u5C71\\u897F\",\n    15: \"\\u5185\\u8499\\u53E4\",\n    21: \"\\u8FBD\\u5B81\",\n    22: \"\\u5409\\u6797\",\n    23: \"\\u9ED1\\u9F99\\u6C5F \",\n    31: \"\\u4E0A\\u6D77\",\n    32: \"\\u6C5F\\u82CF\",\n    33: \"\\u6D59\\u6C5F\",\n    34: \"\\u5B89\\u5FBD\",\n    35: \"\\u798F\\u5EFA\",\n    36: \"\\u6C5F\\u897F\",\n    37: \"\\u5C71\\u4E1C\",\n    41: \"\\u6CB3\\u5357\",\n    42: \"\\u6E56\\u5317 \",\n    43: \"\\u6E56\\u5357\",\n    44: \"\\u5E7F\\u4E1C\",\n    45: \"\\u5E7F\\u897F\",\n    46: \"\\u6D77\\u5357\",\n    50: \"\\u91CD\\u5E86\",\n    51: \"\\u56DB\\u5DDD\",\n    52: \"\\u8D35\\u5DDE\",\n    53: \"\\u4E91\\u5357\",\n    54: \"\\u897F\\u85CF \",\n    61: \"\\u9655\\u897F\",\n    62: \"\\u7518\\u8083\",\n    63: \"\\u9752\\u6D77\",\n    64: \"\\u5B81\\u590F\",\n    65: \"\\u65B0\\u7586\",\n    71: \"\\u53F0\\u6E7E\",\n    81: \"\\u9999\\u6E2F\",\n    82: \"\\u6FB3\\u95E8\",\n    91: \"\\u56FD\\u5916 \"\n  };\n  let pass = true;\n  if (!code || !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n    code\n  )) {\n    tip = \"\\u8EAB\\u4EFD\\u8BC1\\u53F7\\u683C\\u5F0F\\u9519\\u8BEF\";\n    pass = false;\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = \"\\u5730\\u5740\\u7F16\\u7801\\u9519\\u8BEF\";\n    pass = false;\n  } else {\n    if (code.length === 18) {\n      const codeArr = code.split(\"\");\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n      let parity = [1, 0, \"X\", 9, 8, 7, 6, 5, 4, 3, 2];\n      let sum = 0;\n      let ai = 0;\n      let wi = 0;\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i]);\n        wi = factor[i];\n        sum += ai * wi;\n      }\n      let last = parity[sum % 11] + \"\";\n      if (last !== code[17]) {\n        tip = \"\\u6821\\u9A8C\\u4F4D\\u9519\\u8BEF\";\n        pass = false;\n      }\n    }\n  }\n  console.assert(!tip, tip);\n  return pass;\n};\n","originalCode":"/**\n * @module index\n * @author linjielinlin 993353454@qq.com\n * @date 2022-05-11 22:07:43\n * @description 判断函数\n */\n/**\n * @function\n * @description 判断质数\n * @param {number} argValue 要判断的数据\n * @returns {boolean} 结果\n */\nexport const isPrime = (argValue: number): boolean =>\n  !/^.?$|^(..+?)\\1+$/.test('.'.repeat(argValue))\n\n/**\n * @function\n * @description 判断是否是JSON\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isJson = (argData: any): boolean => {\n  try {\n    return typeof JSON.parse(argData || '') === 'object'\n  } catch (e) {}\n  return false\n}\n/**\n * @function\n * @description 判断是否是Blob\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isBlob = (argData: any): boolean => {\n  return argData instanceof Blob\n}\n\n/**\n * @function\n * @description 判断是否是File\n * @param  {any} argData 数据\n * @returns {boolean}\n */\nexport const isFile = (argData: any): boolean => {\n  return argData instanceof File\n}\n\n/**\n * @function\n * @description 是否为正确的身份证号码\n * @param  {string} code 身份证号码\n * @returns {boolean}\n */\nexport const isIdCard = (code: string): boolean => {\n  let tip = ''\n  let city: { [key: number]: string } = {\n    11: '北京',\n    12: '天津',\n    13: '河北',\n    14: '山西',\n    15: '内蒙古',\n    21: '辽宁',\n    22: '吉林',\n    23: '黑龙江 ',\n    31: '上海',\n    32: '江苏',\n    33: '浙江',\n    34: '安徽',\n    35: '福建',\n    36: '江西',\n    37: '山东',\n    41: '河南',\n    42: '湖北 ',\n    43: '湖南',\n    44: '广东',\n    45: '广西',\n    46: '海南',\n    50: '重庆',\n    51: '四川',\n    52: '贵州',\n    53: '云南',\n    54: '西藏 ',\n    61: '陕西',\n    62: '甘肃',\n    63: '青海',\n    64: '宁夏',\n    65: '新疆',\n    71: '台湾',\n    81: '香港',\n    82: '澳门',\n    91: '国外 ',\n  }\n  let pass = true\n  if (\n    !code ||\n    !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(\n      code\n    )\n  ) {\n    tip = '身份证号格式错误'\n    pass = false\n  } else if (!city[+code.substring(0, 2)]) {\n    tip = '地址编码错误'\n    pass = false\n  } else {\n    // 18位身份证需要验证最后一位校验位\n    if (code.length === 18) {\n      const codeArr = code.split('')\n      // ∑(ai×Wi)(mod 11)\n      // 加权因子\n      let factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]\n      // 校验位\n      let parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2]\n      let sum = 0\n      let ai = 0\n      let wi = 0\n      for (let i = 0; i < 17; i++) {\n        ai = Number(codeArr[i])\n        wi = factor[i]\n        sum += ai * wi\n      }\n      let last = parity[sum % 11] + ''\n      if (last !== code[17]) {\n        tip = '校验位错误'\n        pass = false\n      }\n    }\n  }\n  console.assert(!tip, tip)\n  return pass\n}\n","sourceMapPath":null,"wrapperLength":82},"result":{"scriptId":"4112","url":"/home/runner/work/utils/utils/src/is.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3284,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":3281,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":296,"endOffset":407,"count":1},{"startOffset":343,"endOffset":405,"count":5}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":427,"endOffset":773,"count":1},{"startOffset":496,"endOffset":525,"count":0},{"startOffset":580,"endOffset":754,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":665,"endOffset":680,"count":4}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":794,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"isBlob","ranges":[{"startOffset":927,"endOffset":939,"count":1}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":951,"endOffset":963,"count":1}],"isBlockCoverage":true},{"functionName":"isIdCard","ranges":[{"startOffset":977,"endOffset":991,"count":1}],"isBlockCoverage":true},{"functionName":"isJson","ranges":[{"startOffset":1003,"endOffset":1015,"count":1}],"isBlockCoverage":true},{"functionName":"isPrime","ranges":[{"startOffset":1028,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"isPrime","ranges":[{"startOffset":1108,"endOffset":1168,"count":0}],"isBlockCoverage":false},{"functionName":"isJson","ranges":[{"startOffset":1185,"endOffset":1303,"count":2},{"startOffset":1245,"endOffset":1250,"count":0},{"startOffset":1270,"endOffset":1302,"count":0}],"isBlockCoverage":true},{"functionName":"isBlob","ranges":[{"startOffset":1320,"endOffset":1370,"count":2}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":1387,"endOffset":1437,"count":1}],"isBlockCoverage":true},{"functionName":"isIdCard","ranges":[{"startOffset":1456,"endOffset":3277,"count":3},{"startOffset":2488,"endOffset":2573,"count":2},{"startOffset":2573,"endOffset":3231,"count":1},{"startOffset":2613,"endOffset":2686,"count":0},{"startOffset":2982,"endOffset":3072,"count":17}],"isBlockCoverage":true}]}}]}],"wasInterrupted":false,"config":{"bail":0,"changedFilesWithAncestor":false,"collectCoverage":true,"collectCoverageFrom":[],"coverageDirectory":"/home/runner/work/utils/utils/dist/cove","coverageProvider":"v8","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":true,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":true,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":1,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/home/runner/work/utils/utils/node_modules/.pnpm/jest-html-reporters@3.1.3/node_modules/jest-html-reporters/index.js",{"publicPath":"./dist/coverage","filename":"index.html","openReport":false}]],"rootDir":"/home/runner/work/utils/utils","runTestsByPath":false,"skipFilter":false,"testFailureExitCode":1,"testPathPattern":"","testSequencer":"/home/runner/work/utils/utils/node_modules/.pnpm/@jest+test-sequencer@27.5.1/node_modules/@jest/test-sequencer/build/index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"coverageLinkPath":"../cove/lcov-report/index.html"},"endTime":1679538743579,"_reporterOptions":{"publicPath":"./dist/coverage","filename":"index.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false},"logInfoMapping":{},"attachInfos":{}})